[
["index.html", "notesdown 前言 致谢 结构 后记 说明 授权", " notesdown Xiangyun Huang The Others 2018-10-29 13:23:15 CST 前言 荃者所以在鱼，得鱼而忘荃；蹄者所以在兔；得兔而忘蹄；言者所以在意，得意而忘言。吾安得夫忘言之人而与之言哉！ — 摘自 《庄子·杂篇·物》 The fish trap exists because of the fish; once you’ve gotten the fish, you can forget the trap. The rabbit snare exists because of the rabbit; once you’ve gotten the rabbit, you can forget the snare. Words exist because of meaning; once you’ve gotten the meaning, you can forget the words. Where can I find a man who has forgotten words so I can have a word with him ?1 — Chuang Tzu 把平时遇到的问题分类汇总形成一本笔记，用以时常查看和更新。 网罗精美的案例，学习之，应用之 挑选感兴趣的新技能，钻研之 学习心得和体会，尤其是那些年的淌坑经历 从使用者到开发者蜕变，先啃一下 Hadley Wickham 的几本书： The tidyverse style guide/A style guide for the R language http://style.tidyverse.org/ Advanced R https://adv-r.hadley.nz/ R packages http://r-pkgs.had.co.nz/ R for Data Science http://r4ds.had.co.nz/ 要写书搭网站，先看一下 Yihui Xie 的书 bookdown: Authoring Books and Technical Documents with R Markdown https://bookdown.org/yihui/bookdown/ blogdown: Creating Websites with R Markdown https://bookdown.org/yihui/blogdown/ R Markdown: The Definitive Guide https://bookdown.org/yihui/rmarkdown/ 致谢 虚位以待壮士 Thanks go to all contributers in alphabetical order: . 非常感谢谁谁以及谁谁对我的帮助。 黄湘云 于矿大宝源公寓 结构 第一章：数学符号说明 第二章：基础知识 R语言基础、高级技巧 你好，世界。我写了一本书。这本书是这样的，第 3 章介绍了啥啥，第 4 章说了啥啥，然后是啥啥…… 后记 这本书是在 RStudio 内用 R Markdown 写的， Git 控制版本， bookdown 组织章节， knitr 将 R Markdown 源文件转化为 Markdown 文件， Pandoc 再将 Markdown 文件转化为 HTML 文档，而要转化为 PDF 文档则另外需要 TinyTeX 发行版2 和来自 rticles (Allaire et al. 2018) 包的模板（一个基于 Pandoc 的 LaTeX 模板，两个美元符号包含的就是变量，变量基本上是 LaTeX 包的设置选项）。这个网站是通过 Travis-CI 把编译结果（即 _book 目录）推送到 Netlify，实现部署。在 Travis-CI 和 Netlify 都与 Github 绑定的情况下，源代码一发生改变就会触发编译和部署，即持续集成和连续部署，你正在阅读的是 2018-10-29 在 Travis 上构建的。 如果编译和部署成功，你会看到一个绿色的指示器，否则指示器显示红色。 说明 sourceserifpro 设为默认英文字体，inconsolata 用于代码显示，R 包名称在文中以粗体显示，代码块输出用 #&gt; 表示，以区分普通的代码注释 # 我用了两个 R 包编译这本书，分别是 knitr (Xie 2015) 和 bookdown (Xie 2016)。绘图使用的中文字体是思源宋体和思源黑体， showtext 包安装和调用，tikzDevice 和 fontcm 处理其中的数学公式，xkcd 设置漫画手写体风格，以下是我的 R 进程信息： xfun::session_info(packages = c(&#39;rmarkdown&#39;,&#39;bookdown&#39;)) #&gt; R version 3.5.1 (2017-01-27) #&gt; Platform: x86_64-pc-linux-gnu (64-bit) #&gt; Running under: Ubuntu 14.04.5 LTS #&gt; #&gt; Locale: #&gt; LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C #&gt; LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 #&gt; LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8 #&gt; LC_PAPER=en_US.UTF-8 LC_NAME=C #&gt; LC_ADDRESS=C LC_TELEPHONE=C #&gt; LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C #&gt; #&gt; Package version: #&gt; backports_1.1.2 base64enc_0.1.3 bookdown_0.7 digest_0.6.18 #&gt; evaluate_0.12 glue_1.3.0 graphics_3.5.1 grDevices_3.5.1 #&gt; highr_0.7 htmltools_0.3.6 jsonlite_1.5 knitr_1.20 #&gt; magrittr_1.5 markdown_0.8 methods_3.5.1 mime_0.6 #&gt; Rcpp_0.12.19 rmarkdown_1.10 rprojroot_1.3.2 stats_3.5.1 #&gt; stringi_1.2.4 stringr_1.3.1 tinytex_0.9 tools_3.5.1 #&gt; utils_3.5.1 xfun_0.4 yaml_2.2.0 # rstan::stan_version() # blogdown::hugo_version() cat(system(&quot;xelatex -v&quot;, intern = TRUE), sep = &quot;\\n&quot;) #&gt; XeTeX 3.14159265-2.6-0.99999 (TeX Live 2018) #&gt; kpathsea version 6.3.0 #&gt; Copyright 2018 SIL International, Jonathan Kew and Khaled Hosny. #&gt; There is NO warranty. Redistribution of this software is #&gt; covered by the terms of both the XeTeX copyright and #&gt; the Lesser GNU General Public License. #&gt; For more information about these matters, see the file #&gt; named COPYING and the XeTeX source. #&gt; Primary author of XeTeX: Jonathan Kew. #&gt; Compiled with ICU version 61.1; using 61.1 #&gt; Compiled with zlib version 1.2.11; using 1.2.11 #&gt; Compiled with FreeType2 version 2.9.0; using 2.9.0 #&gt; Compiled with Graphite2 version 1.3.11; using 1.3.11 #&gt; Compiled with HarfBuzz version 1.7.6; using 1.7.6 #&gt; Compiled with libpng version 1.6.34; using 1.6.34 #&gt; Compiled with poppler version 0.63.0 #&gt; Compiled with fontconfig version 2.11.0; using 2.11.0 cat(system2(&quot;gcc&quot;, args = &quot;-v&quot;, stderr = TRUE, stdout = TRUE), sep = &quot;\\n&quot;) #&gt; Using built-in specs. #&gt; COLLECT_GCC=gcc #&gt; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/4.8/lto-wrapper #&gt; Target: x86_64-linux-gnu #&gt; Configured with: ../src/configure -v --with-pkgversion=&#39;Ubuntu 4.8.4-2ubuntu1~14.04.4&#39; --with-bugurl=file:///usr/share/doc/gcc-4.8/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.8 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.8 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-libmudflap --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.8-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.8-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.8-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu #&gt; Thread model: posix #&gt; gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04.4) cat(system2(&quot;g++&quot;, args = &quot;-v&quot;, stderr = TRUE, stdout = TRUE), sep = &quot;\\n&quot;) #&gt; Using built-in specs. #&gt; COLLECT_GCC=g++ #&gt; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/4.8/lto-wrapper #&gt; Target: x86_64-linux-gnu #&gt; Configured with: ../src/configure -v --with-pkgversion=&#39;Ubuntu 4.8.4-2ubuntu1~14.04.4&#39; --with-bugurl=file:///usr/share/doc/gcc-4.8/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.8 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.8 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-libmudflap --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.8-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.8-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.8-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu #&gt; Thread model: posix #&gt; gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04.4) 授权 本书采用 知识共享署名-非商业性使用-禁止演绎 4.0 国际许可协议 许可，请君自重，别没事儿拿去传个什么新浪爱问、百度文库以及 XX 经济论坛，项目中代码使用 MIT 协议 开源 参考文献 "],
["authors.html", "第 1 章 作者简介", " 第 1 章 作者简介 我是黄湘云，即将毕业的硕士研究生，跟随导师学习数理统计，主修 R 语言，顺便学了点统计，南方人， 2017年6月开始混迹于 Github， 全是自学和靠大牛指点，偶尔参加一些技术大会和沙龙， 也去周边学校听讲座。 本科学过 Photoshop 接触过 AI 和 AE，后来学了 R 这些就淡忘了，但是图层这个概念却一直记忆犹新，因为图层在 ggplot2 中是一个很关键的概念。 Python 喊着要学，已经叫唤两年了，今年打算学个入门。 Mxnet、Xgboost 和 Stan 也是要学的，另外一个可能要学的是 INLA 专用于处理空间广义线性混合效应模型，这个会在混合效应模型的相关章节予以介绍。 "],
["notations.html", "第 2 章 符号说明", " 第 2 章 符号说明 \\(S \\neq \\varnothing\\) \\(\\mathbf{A,B,C},\\mathsf{A,B,C},\\mathit{A,B,C}\\) \\(\\mathrm{A,B,C}\\) \\(\\mathfrak{A,B,C}\\) \\[X,Y,D, \\mathbf{X,Y,D},\\mathsf{X,Y,D},\\mathit{X,Y,D},\\mathrm{X,Y,D}\\] \\(A,B,C,D\\) 斜体表示普通的集合，\\(X,Y,Z\\) 表示矩阵，\\(a,b,c,d\\) 表示常数，\\(\\alpha,\\beta,\\theta,\\phi,\\kappa\\) 表示模型或者分布函数的参数，\\(\\Theta\\) 表示参数空间，\\(\\mathbb{R}^{n},\\mathbb{C}^{n}\\) 表示特殊的 \\(n\\) 维实（复）数域，\\(\\mathscr{A,B,C,D}\\) 表示一般的数域，\\(\\mathcal{S,P,G}\\) 分别表示随机过程、概率空间和图 符号 含义 符号 含义 \\(\\mathbf{A}\\) 粗体 \\(\\Omega\\) 全集 \\(\\mathit{A}\\) 集合 \\(\\mathbb{R,C}\\) 实（复）数集 \\(\\mathcal{A}\\) 集族 \\(\\varnothing\\) 空集 \\(\\mathsf{A}\\) 矩阵 \\(\\mathsf{A}^{-}\\) 矩阵的广义逆 \\(\\mathsf{A}^\\top\\) 矩阵转置 \\(\\bar{x}\\) 平均值 \\(\\mathsf{A}^{-1}\\) 矩阵的逆 \\(\\vert a \\vert\\) 标量绝对值 \\(\\mathsf{A}^{\\star}\\) 伴随矩阵 \\(\\mathop{\\mathrm{diag}}(\\mathsf{A})\\) 矩阵的对角 \\(\\lVert \\mathsf{A} \\rVert_{1}\\) 矩阵的1范数 \\(\\mathsf{I}\\) 单位矩阵 \\(\\lVert \\mathsf{A} \\rVert_{2}\\) 矩阵的2范数 \\(\\mathsf{I}_{n}\\) \\(n\\) 阶单位矩阵 \\(\\lVert \\mathsf{A} \\rVert_{\\infty}\\) 矩阵的无穷范数 \\(\\mathsf{1}\\) 全1矩阵 \\(\\lVert \\mathsf{X} \\rVert_{1}\\) 向量的1范数 \\(\\mathsf{1}_{n}\\) \\(n\\) 阶全1矩阵 \\(\\lVert \\mathsf{X} \\rVert_{2}\\) 向量的2范数 \\(\\lVert \\mathsf{X} \\rVert_{\\infty}\\) 向量的无穷范数 \\(\\langle\\mathsf{X},\\mathsf{Y}\\rangle\\) 向量的内积 \\(f(\\mathsf{X})\\) 随机变量的函数 \\(\\mathsf{X} \\wedge \\mathsf{Y}\\) 向量的外积 \\(\\nabla{\\mathsf{X}}\\) 向量微分或梯度 \\(\\beta\\) 模型系数 \\(\\theta\\) 模型或分布参数 \\(\\alpha\\) 模型截距 \\(\\Theta\\) 参数空间 \\(\\hat{\\beta}_{ls}\\) 模型系数的LS估计 \\(f(x)\\) 标量值函数 \\(\\hat{\\beta}_{mle}\\) 模型系数的MLE估计 \\(f(\\mathsf{X})\\) 向量的函数 \\(\\hat{\\beta}_{bayes}\\) 模型系数的Bayes估计 \\(\\mathcal{X}\\) 概率空间 \\(\\rho\\) 相关系数 \\(\\kappa\\) 贝塞尔函数的阶 \\(\\phi\\) 尺度参数 \\(u\\) 距离 \\(\\lVert \\mathsf{x}_1 -\\mathsf{x}_2 \\rVert\\) \\(\\mathbb{R}^2\\) 二维实数域 \\(S(x)\\) 空间过程 \\(\\mathcal{S}\\) \\(\\mathcal{S} = \\{S(x):x \\in \\mathbb{R}^2\\}\\) \\(\\mathcal{S}^{\\star}\\) 随机过程 \\(\\mathcal{S}\\) 的近似 多元统计分析 高惠璇 矩阵符号表示 深度学习符号表示 https://github.com/XiangyunHuang/dlbook 举例，线性模型的表示，此处 \\(Y\\) 为 \\(n\\times 1\\)列向量，\\(X\\) 为\\(p\\times n\\)的矩阵，\\(\\beta\\) 为 \\(p\\times 1\\)的列向量 ，\\(\\epsilon\\) 为\\(n\\times1\\)列向量 \\[Y = X&#39;\\beta + \\epsilon\\] \\[\\mathsf{A} = \\varGamma^\\top\\Lambda\\varGamma\\] \\[\\mathsf{u} = (u_1,u_2,\\cdots,u_n)\\] \\[\\mathsf{x} = (x_1,x_2,\\cdots,x_n)\\] 期望 \\(\\mathsf{E}\\) 正态分布 \\(\\mathcal{N}(\\mathsf{x};\\mathsf{\\mu},\\mathsf{\\Sigma})\\) 对数 \\(\\mathsf{\\log}\\) 协方差 \\(\\mathsf{Cov},\\mathsf{Var}\\) 矩阵 \\[\\mathsf{Y} = (\\mathsf{y}^{(1)},\\mathsf{y}^{(n)},\\cdots,\\mathsf{y}^{(n)})\\] 其中 \\(\\mathsf{y}^{(i)} = (y_{1i},y_{2i},\\cdots,y_{ni})\\) 表示第 \\(i\\) 列 梅隆函数(Matern function)是描述空间相关性的常用函数，它带有两参数\\(\\kappa\\) 和 \\(\\phi\\)，具体形式如下： \\[\\rho(u) = \\big\\{2^{\\kappa-1}\\Gamma(\\kappa)\\big\\}^{-1}(u/\\phi)^{\\kappa}K_{\\kappa}(u/\\phi)\\] 其中，\\(K_{\\kappa}(\\cdot)\\) 表示 \\(\\kappa\\) 阶修正的贝塞尔函数 "],
["install-setup.html", "第 3 章 安装与配置 3.1 DBI 3.2 安装 IDE 3.3 配置文件 3.4 小技巧", " 第 3 章 安装与配置 3.1 DBI 这是一个存放在Github上的包，随着 ClikHouse 在大厂的流行，此包也受到越来越多的关注 与数据仓库如何连接，如何查询数据，背后的接口 DBI 如何使用，实例化一个新的接口（如 clickhouse2r ） https://github.com/hannesmuehleisen/clickhouse-r 壮士！交给你个任务，基于 clickhouse 的 odbc 驱动 https://github.com/yandex/clickhouse-odbc 写了 R 包如何，顺带介绍 clickhouse ，再给统计之都投篇稿子，在明年的 R 会给个相关报告。名字 r4clickhouse 还是 clickhouse4r 呢 ClickHouse 独辟蹊径，基于 C++ 的实现，数据查询速度超级快，官网介绍碾压大量传统数据库。还有不少接口，其中还有 R 的 https://github.com/hannesmuehleisen/clickhouse-r 安装 devtools::install_github(&quot;hannesmuehleisen/clickhouse-r&quot;) 下载 https://clickhouse.yandex/docs/en/single/#installation 使用 library(DBI) con &lt;- dbConnect(clickhouse::clickhouse(), host = &quot;localhost&quot;, port = 8123L, user = &quot;default&quot;, password = &quot;&quot; ) dbWriteTable(con, &quot;mtcars&quot;, mtcars) dbListTables(con) dbGetQuery(con, &quot;SELECT COUNT(*) FROM mtcars&quot;) d &lt;- dbReadTable(con, &quot;mtcars&quot;) dbDisconnect(con) 发现它和 knitr 里的 SQL 钩子，都用 DBI 这个R包 https://github.com/rstats-db/DBI knitr::include_graphics(path = &quot;images/clickhouse.png&quot;) 图 3.1: ClickHouse与R 参考 https://d.cosx.org/d/419974-r-markdown-sql ```{r setup} library(DBI) library(RMySQL) # 这里的数据库链接信息我改了 db &lt;- dbConnect(MySQL(), dbname = &quot;dbtest&quot;, username = &quot;user_test&quot;, password = &quot;password&quot;, host = &quot;10.10.101.10&quot;, port = 3306 ) # 创建默认连接 knitr::opts_chunk$set(connection = &quot;db&quot;) # 设置字符，以免中文查询乱码 dbSendQuery(db, &quot;SET NAMES utf8&quot;) # 设置日期变量，以运用在SQL中 idate &lt;- &quot;2018-05-03&quot; # 请忽略我 ``` SQL中使用R的变量并将结果输出为数据框 ```{sql, output.var=&quot;data_output&quot;} SELECT * FROM user_table where date_format(created_date,&#39;%Y-%m-%d&#39;)&gt;=?idate # 请忽略我 ``` 以上代码会将SQL的运行结果存在 data_output 这是数据库中。如果SQL比较长，为了代码美观，把带有变量的SQL保存为.sql脚本，那怎么在SQL的chunk中直接导入SQL文件 ```{sql, code=readLines(&quot;你的脚本.sql&quot;)} ``` 3.1.1 reticulate Python 与 R 交互 3.1.2 INLA 具有非常多的依赖关系，除了 CRAN 还有来自 bioconductor 的包，介绍 http://www.r-inla.org/events/newtutorialsonspatialmodelsininla install.packages(&quot;INLA&quot;, repos = &quot;https://www.math.ntnu.no/inla/R/testing&quot; ) 3.1.3 mxnet 依赖也是很多，主要在于 GPU 版如何安装使用 3.1.4 tensorflow 同样地，依赖也是很多，主要在于 GPU 版如何安装使用 3.2 安装 IDE RStudio 3.3 配置文件 工作目录下的 .Rprofile，设置 site-library，设置环境变量 Renviron 3.4 小技巧 设置 Notepad++ 为 Git Bash 默认编辑器 图 3.2 所示3 knitr::include_graphics(path = &quot;images/git-vim-commit-message.png&quot;) 图 3.2: Notepad++ 与 Git 在 Git Bash 中输入下面一行 git config --global core.editor &quot;&#39;c:\\Program Files\\Notepad++\\notepad++.exe&#39; -multiInst -notabbar -nosession -noPlugin &#39;$*&#39;&quot; Windows下配置 Git 中 ssh-agent 自动启动 https://lfkid.github.io/ 这种让 Git 的 ssh-agent 常驻内存貌似不合理，占内存嘛 设置 ssh 和 store 保存应该比较好 打开 bookdown 项目出来警告 如图 3.3 所示，目前只出现在 Windows 平台下 图 3.3: YAML 扫描错误 直观来看，是字符串 string 本身需要转化为 UTF8（其实是需要YAML区域都变成UTF8），有关详细介绍见 http://biostat.mc.vanderbilt.edu/wiki/Main/YamlR#yaml.load 和 https://github.com/viking/r-yaml yaml::yaml.load #&gt; function (string, as.named.list = TRUE, handlers = NULL, error.label = NULL, #&gt; eval.expr = getOption(&quot;yaml.eval.expr&quot;, TRUE)) #&gt; { #&gt; eval.warning &lt;- missing(eval.expr) &amp;&amp; is.null(getOption(&quot;yaml.eval.expr&quot;)) #&gt; string &lt;- enc2utf8(paste(string, collapse = &quot;\\n&quot;)) #&gt; .Call(C_unserialize_from_yaml, string, as.named.list, handlers, #&gt; error.label, eval.expr, eval.warning, PACKAGE = &quot;yaml&quot;) #&gt; } #&gt; &lt;bytecode: 0x2182d98&gt; #&gt; &lt;environment: namespace:yaml&gt; 先看个简单的 yaml::yaml.load(&#39;你好&#39;) #&gt; [1] &quot;你好&quot; 开发者用如下方式避免一个警告 issues #47 yaml::yaml.load(&quot;!expr paste(&#39;orange&#39;)&quot;, handlers = list(expr = function(x) eval(parse(text = x)))) #&gt; [1] &quot;orange&quot; 要么等着 YAML 更新，要么等着 bookdown 或 rmarkdown 更新，目前还是在 rocker 下编辑吧，看着红红的警告信息，心里有点烦。 https://github.com/viking/r-yaml/issues/6 https://github.com/rstudio/rmarkdown/issues/420 https://github.com/rstudio/config/issues/12 http://readorskip.com/2016/09/12/Using-Notepad-to-Write-Git-Commit-Messages/↩ "],
["math-operator.html", "第 4 章 数学运算 4.1 矩阵运算 4.2 矩阵分解 4.3 特殊函数 4.4 统计分布", " 第 4 章 数学运算 统计计算之矩阵运算，自然离不开 Matrix 包 (Bates and Maechler 2018) 4.1 矩阵运算 A &lt;- matrix(c(1, 2, 2, 3), nrow = 2) A #&gt; [,1] [,2] #&gt; [1,] 1 2 #&gt; [2,] 2 3 4.1.1 乘法 A %*% A #&gt; [,1] [,2] #&gt; [1,] 5 8 #&gt; [2,] 8 13 4.1.2 Hadamard 积 矩阵每个元素平方 A^2 #&gt; [,1] [,2] #&gt; [1,] 1 4 #&gt; [2,] 4 9 4.1.3 交叉积 crossprod(A, A) # t(x) %*% y #&gt; [,1] [,2] #&gt; [1,] 5 8 #&gt; [2,] 8 13 tcrossprod(A, A) # x %*% t(y) #&gt; [,1] [,2] #&gt; [1,] 5 8 #&gt; [2,] 8 13 4.1.4 外积 A %o% A #&gt; , , 1, 1 #&gt; #&gt; [,1] [,2] #&gt; [1,] 1 2 #&gt; [2,] 2 3 #&gt; #&gt; , , 2, 1 #&gt; #&gt; [,1] [,2] #&gt; [1,] 2 4 #&gt; [2,] 4 6 #&gt; #&gt; , , 1, 2 #&gt; #&gt; [,1] [,2] #&gt; [1,] 2 4 #&gt; [2,] 4 6 #&gt; #&gt; , , 2, 2 #&gt; #&gt; [,1] [,2] #&gt; [1,] 3 6 #&gt; [2,] 6 9 outer(A, A, FUN = &quot;*&quot;) #&gt; , , 1, 1 #&gt; #&gt; [,1] [,2] #&gt; [1,] 1 2 #&gt; [2,] 2 3 #&gt; #&gt; , , 2, 1 #&gt; #&gt; [,1] [,2] #&gt; [1,] 2 4 #&gt; [2,] 4 6 #&gt; #&gt; , , 1, 2 #&gt; #&gt; [,1] [,2] #&gt; [1,] 2 4 #&gt; [2,] 4 6 #&gt; #&gt; , , 2, 2 #&gt; #&gt; [,1] [,2] #&gt; [1,] 3 6 #&gt; [2,] 6 9 4.1.5 直积 直积/克罗内克积 A %x% A #&gt; [,1] [,2] [,3] [,4] #&gt; [1,] 1 2 2 4 #&gt; [2,] 2 3 4 6 #&gt; [3,] 2 4 3 6 #&gt; [4,] 4 6 6 9 kronecker(A, A, FUN = &quot;*&quot;) #&gt; [,1] [,2] [,3] [,4] #&gt; [1,] 1 2 2 4 #&gt; [2,] 2 3 4 6 #&gt; [3,] 2 4 3 6 #&gt; [4,] 4 6 6 9 4.1.6 乘方 矩阵 A 首先是一个方阵，对称性和正定性未知，n 个 矩阵 A 相乘 统计之都论坛讨论如何求矩阵的乘方 https://d.cosx.org/d/5619-svd &quot;%^%&quot; &lt;- function(mat, pow) { if (!is.matrix(mat)) mat &lt;- as.matrix(mat) stopifnot(!diff(dim(mat))) if (pow &lt; 0) { pow &lt;- -pow mat &lt;- solve(mat) } pow &lt;- round(pow) switch(pow + 1, return(diag(1, nrow(mat))), return(mat)) get.exponents &lt;- function(pow) if (pow == 0) NULL else c(k &lt;- 2^floor(log2(pow)), get.exponents(pow - k)) ans &lt;- diag(nrow(mat)) dlog2exp &lt;- rev(-diff(c(log2(get.exponents(pow)), 0))) for (j in 1:length(dlog2exp)) { if (dlog2exp[j]) for (i in 1:dlog2exp[j]) mat &lt;- mat %*% mat ans &lt;- ans %*% mat } ans } 奇异值分解 s &lt;- svd(A) all.equal(s$u%*%diag(s$d)%*%t(s$v),A) 特征值及分解 \\(A = V \\Lambda V^{-1}\\) 求解矩阵 A 的 n 次方 eigen(A) #&gt; eigen() decomposition #&gt; $values #&gt; [1] 4.236 -0.236 #&gt; #&gt; $vectors #&gt; [,1] [,2] #&gt; [1,] 0.526 -0.851 #&gt; [2,] 0.851 0.526 eigen(A)$vectors %*% diag(eigen(A)$values) %*% solve(eigen(A)$vectors) #&gt; [,1] [,2] #&gt; [1,] 1 2 #&gt; [2,] 2 3 eigen(A)$vectors %*% diag(eigen(A)$values)^3 %*% solve(eigen(A)$vectors) #&gt; [,1] [,2] #&gt; [1,] 21 34 #&gt; [2,] 34 55 A %*% A %*% A #&gt; [,1] [,2] #&gt; [1,] 21 34 #&gt; [2,] 34 55 4.1.7 幂 2^A #&gt; [,1] [,2] #&gt; [1,] 2 4 #&gt; [2,] 4 8 exp(A) #&gt; [,1] [,2] #&gt; [1,] 2.72 7.39 #&gt; [2,] 7.39 20.09 4.1.8 行列式 det(A) #&gt; [1] -1 expm 包计算矩阵 \\(e^{\\mathbf{A}}\\) 4.1.9 逆 solve(A) #&gt; [,1] [,2] #&gt; [1,] -3 2 #&gt; [2,] 2 -1 应用之线性方程组 B &lt;- Hilbert(6) b &lt;- rowSums(B) # not inv solve(B,b) #&gt; 6 x 1 Matrix of class &quot;dgeMatrix&quot; #&gt; [,1] #&gt; [1,] 1 #&gt; [2,] 1 #&gt; [3,] 1 #&gt; [4,] 1 #&gt; [5,] 1 #&gt; [6,] 1 # inv solve(B) %*% b #&gt; 6 x 1 Matrix of class &quot;dgeMatrix&quot; #&gt; [,1] #&gt; [1,] 1 #&gt; [2,] 1 #&gt; [3,] 1 #&gt; [4,] 1 #&gt; [5,] 1 #&gt; [6,] 1 Moore-Penrose generalized inverse 广义逆，如果 A 可逆则，广义逆就是逆 library(MASS) ginv(A) #&gt; [,1] [,2] #&gt; [1,] -3 2 #&gt; [2,] 2 -1 A %*% ginv(A) %*% A #&gt; [,1] [,2] #&gt; [1,] 1 2 #&gt; [2,] 2 3 ginv(A) %*% A %*% ginv(A) #&gt; [,1] [,2] #&gt; [1,] -3 2 #&gt; [2,] 2 -1 t(A %*% ginv(A)) #&gt; [,1] [,2] #&gt; [1,] 1.00e+00 8.88e-16 #&gt; [2,] -8.88e-16 1.00e+00 A %*% ginv(A) #&gt; [,1] [,2] #&gt; [1,] 1.00e+00 -8.88e-16 #&gt; [2,] 8.88e-16 1.00e+00 t(ginv(A) %*% A) #&gt; [,1] [,2] #&gt; [1,] 1.00e+00 -8.88e-16 #&gt; [2,] 8.88e-16 1.00e+00 ginv(A) %*% A #&gt; [,1] [,2] #&gt; [1,] 1.00e+00 8.88e-16 #&gt; [2,] -8.88e-16 1.00e+00 ginv 函数实现 # The function is currently defined as function(X, tol = sqrt(.Machine$double.eps)) { ## Generalized Inverse of a Matrix dnx &lt;- dimnames(X) if(is.null(dnx)) dnx &lt;- vector(&quot;list&quot;, 2) s &lt;- svd(X) nz &lt;- s$d &gt; tol * s$d[1] structure( if(any(nz)) s$v[, nz] %*% (t(s$u[, nz])/s$d[nz]) else X, dimnames = dnx[2:1]) } 4.1.10 伴随矩阵 伴随矩阵 \\(A*A^{\\star} = A^{\\star} *A = |A|*I, A^{\\star} = |A|*A^{-1}\\) \\(|A^{\\star}| = |A|^{n-1}, A \\in \\mathbb{R}^{n\\times n},n \\geq 2\\) \\((A^{\\star})^{\\star} = |A|^{n-2}A, A \\in \\mathbb{R}^{n\\times n},n \\geq 2\\) \\((A^{\\star})^{\\star}\\) A 的 n 次伴随是？ det(A)*solve(A) #&gt; [,1] [,2] #&gt; [1,] 3 -2 #&gt; [2,] -2 1 4.1.11 单位矩阵 diag(rep(3)) #&gt; [,1] [,2] [,3] #&gt; [1,] 1 0 0 #&gt; [2,] 0 1 0 #&gt; [3,] 0 0 1 全1矩阵，借助外积运算，如3阶矩阵 rep(1,3) %o% rep(1,3) #&gt; [,1] [,2] [,3] #&gt; [1,] 1 1 1 #&gt; [2,] 1 1 1 #&gt; [3,] 1 1 1 4.1.12 对角矩阵 diag(A) # diagonal of a matrix #&gt; [1] 1 3 diag(diag(A)) # construct a diagonal matrix #&gt; [,1] [,2] #&gt; [1,] 1 0 #&gt; [2,] 0 3 4.1.13 条件数 base::rcond(A) #&gt; [1] 0.04 kappa(A) #&gt; [1] 21.9 Matrix::rcond(Hilbert(6)) #&gt; [1] 3.44e-08 Matrix::rcond(A) #&gt; [1] 0.04 4.1.14 范数 向量和矩阵的范数，包括1，2，无穷范数，其他操作看 Matrix 包 (Bates and Maechler 2018) ，尤其关于稀疏矩阵计算部分 norm(A) #&gt; [1] 5 4.1.15 秩 qr(A)$rank # or qr.default(A)$rank #&gt; [1] 2 4.1.16 稀疏矩阵 dn &lt;- list(LETTERS[1:3], letters[1:5]) ## pointer vectors can be used, and the (i,x) slots are sorted if necessary: ## 使用指针构造 m &lt;- sparseMatrix(i = c(3,1, 3:2, 2:1), p= c(0:2, 4,4,6), x = 1:6, dimnames = dn) m #&gt; 3 x 5 sparse Matrix of class &quot;dgCMatrix&quot; #&gt; a b c d e #&gt; A . 2 . . 6 #&gt; B . . 4 . 5 #&gt; C 1 . 3 . . ## 典型构造方式 i &lt;- c(1,3:8); j &lt;- c(2,9,6:10); x &lt;- 7 * (1:7) (AA &lt;- sparseMatrix(i, j, x = x)) ## 8 x 10 &quot;dgCMatrix&quot; #&gt; 8 x 10 sparse Matrix of class &quot;dgCMatrix&quot; #&gt; #&gt; [1,] . 7 . . . . . . . . #&gt; [2,] . . . . . . . . . . #&gt; [3,] . . . . . . . . 14 . #&gt; [4,] . . . . . 21 . . . . #&gt; [5,] . . . . . . 28 . . . #&gt; [6,] . . . . . . . 35 . . #&gt; [7,] . . . . . . . . 42 . #&gt; [8,] . . . . . . . . . 49 4.2 矩阵分解 4.2.1 Cholesky 分解 # Compute the Choleski factorization of a real symmetric positive-definite square matrix. chol(A + diag(rep(1,2))) #&gt; [,1] [,2] #&gt; [1,] 1.41 1.41 #&gt; [2,] 0.00 1.41 # Inverse from Choleski (or QR) Decomposition Matrix::chol2inv(A + diag(rep(1,2))) #&gt; [,1] [,2] #&gt; [1,] 0.3125 -0.0625 #&gt; [2,] -0.0625 0.0625 4.2.2 奇异值及分解 svd(A) #&gt; $d #&gt; [1] 4.236 0.236 #&gt; #&gt; $u #&gt; [,1] [,2] #&gt; [1,] -0.526 -0.851 #&gt; [2,] -0.851 0.526 #&gt; #&gt; $v #&gt; [,1] [,2] #&gt; [1,] -0.526 0.851 #&gt; [2,] -0.851 -0.526 svd(A)$d #&gt; [1] 4.236 0.236 4.2.3 QR分解 qr.default(A) #&gt; $qr #&gt; [,1] [,2] #&gt; [1,] -2.236 -3.578 #&gt; [2,] 0.894 -0.447 #&gt; #&gt; $rank #&gt; [1] 2 #&gt; #&gt; $qraux #&gt; [1] 1.447 0.447 #&gt; #&gt; $pivot #&gt; [1] 1 2 #&gt; #&gt; attr(,&quot;class&quot;) #&gt; [1] &quot;qr&quot; qr.X(qr.default(A)) #&gt; [,1] [,2] #&gt; [1,] 1 2 #&gt; [2,] 2 3 qr.Q(qr.default(A)) #&gt; [,1] [,2] #&gt; [1,] -0.447 -0.894 #&gt; [2,] -0.894 0.447 qr.R(qr.default(A)) #&gt; [,1] [,2] #&gt; [1,] -2.24 -3.578 #&gt; [2,] 0.00 -0.447 qr.Q(qr.default(A)) %*% qr.R(qr.default(A)) #&gt; [,1] [,2] #&gt; [1,] 1 2 #&gt; [2,] 2 3 LU 分解、Jordan分解 矩阵下三角 row 和 col row(A) #&gt; [,1] [,2] #&gt; [1,] 1 1 #&gt; [2,] 2 2 col(A) #&gt; [,1] [,2] #&gt; [1,] 1 2 #&gt; [2,] 1 2 A[row(A)] #&gt; [1] 1 3 lower.tri(A) #&gt; [,1] [,2] #&gt; [1,] FALSE FALSE #&gt; [2,] TRUE FALSE upper.tri(A) # 矩阵上三角 #&gt; [,1] [,2] #&gt; [1,] FALSE TRUE #&gt; [2,] FALSE FALSE A[lower.tri(A)] #&gt; [1] 2 A[lower.tri(A)] &lt;- 0 # 获得上三角矩阵 A #&gt; [,1] [,2] #&gt; [1,] 1 2 #&gt; [2,] 0 3 A[row(A) &lt; col(A)] &lt;- 0 A #&gt; [,1] [,2] #&gt; [1,] 1 0 #&gt; [2,] 0 3 Householder 变换 https://www.wikiwand.com/en/Householder_transformation Givens 旋转 https://www.wikiwand.com/en/Givens_rotation 帽子矩阵在统计中的应用 回归与方差分析 (Hoaglin and Welsch 1978) 4.3 特殊函数 4.3.1 阶乘 阶乘 \\(n! = 1\\times 2\\times 3\\cdots n\\) 双阶乘 \\((2n+1)!! = 1 \\times 3\\times 5 \\times \\cdots \\times (2n+1), n = 0,1,2,\\cdots\\) factorial(5) # 阶乘 #&gt; [1] 120 seq(from = 1, to = 5, length.out = 3) #&gt; [1] 1 3 5 prod(seq(from = 1, to = 5, length.out = 3)) # 连乘 双阶乘 #&gt; [1] 15 seq(5) #&gt; [1] 1 2 3 4 5 cumprod(seq(5)) # 累积 #&gt; [1] 1 2 6 24 120 cumsum(seq(5)) # 累和 #&gt; [1] 1 3 6 10 15 此外还有 cummax 和 cummin 组合数 \\(C_{n}^{k} = \\frac{n(n-1)…(n-k+1)}{k!}\\) \\(C_{5}^{3} = \\frac{5 \\times 4 \\times 3}{3 \\times 2 \\times 1}\\) choose(5,3) #&gt; [1] 10 斯特林公式 4.3.2 伽马函数 \\(\\Gamma(x) = \\int_{0}^{\\infty} t^{x-1}\\exp(-t)dt\\) \\(\\Gamma(n) = (n-1)!, n \\in \\mathbb{Z}^{+}\\) gamma(2) #&gt; [1] 1 gamma(10) #&gt; [1] 362880 gamma2 &lt;- function(t,x){ t^(x-1)*exp(-t) } integrate(gamma2, lower = 0, upper = + Inf, x = 10) #&gt; 362880 with absolute error &lt; 0.025 psigamma(x, deriv) 表示 \\(\\psi(x)\\) 的 deriv 阶导数 \\(\\mathrm{digamma}(x) \\triangleq \\psi(x) = \\frac{d}{dx}{\\ln \\Gamma(x)} = \\Gamma&#39;(x) / \\Gamma(x)\\) # 例1 x &lt;- 2 eval(deriv(~ gamma(x), &quot;x&quot;))/gamma(x) #&gt; [1] 1 #&gt; attr(,&quot;gradient&quot;) #&gt; x #&gt; [1,] 0.423 # 与此等价 psigamma(2, 0) #&gt; [1] 0.423 digamma(x) # psi(x) 的一阶导数 #&gt; [1] 0.423 trigamma(x) # psi(x) 的二阶导数 #&gt; [1] 0.645 # 例2 eval(deriv(~ psigamma(x, 1), &quot;x&quot;)) #&gt; [1] 0.645 #&gt; attr(,&quot;gradient&quot;) #&gt; x #&gt; [1,] -0.404 # 与此等价 psigamma(2, 2) #&gt; [1] -0.404 # 注意与下面这个例子比较 dx2x &lt;- deriv(~ x^3, &quot;x&quot;) eval(dx2x) #&gt; [1] 8 #&gt; attr(,&quot;gradient&quot;) #&gt; x #&gt; [1,] 12 4.3.3 贝塔函数 \\(B(a,b) = \\Gamma(a)\\Gamma(b)/\\Gamma(a+b) = \\int_{0}^{1} t^{a-1} (1-t)^{b-1} dt\\) beta(1, 1) #&gt; [1] 1 beta(2, 3) #&gt; [1] 0.0833 beta2 &lt;- function(t, a, b) { t^(a - 1) * (1 - t)^(b - 1) } integrate(beta2, lower = 0, upper = 1, a = 2, b = 3) #&gt; 0.0833 with absolute error &lt; 9.3e-16 4.3.4 贝塞尔函数 besselI(x, nu, expon.scaled = FALSE) # 修正的第一类 besselK(x, nu, expon.scaled = FALSE) # 修正的第二类 besselJ(x, nu) # 第一类 besselY(x, nu) # 第二类 \\(\\nu\\) 贝塞尔函数的阶，可以是分数 expon.scaled 是否使用指数表示 nus &lt;- c(0:5, 10, 20) x &lt;- seq(0, 4, length.out = 501) plot(x, x, ylim = c(0, 6), ylab = &quot;&quot;, type = &quot;n&quot;, main = &quot;Bessel Functions I_nu(x)&quot;) for(nu in nus) lines(x, besselI(x, nu = nu), col = nu + 2) legend(0, 6, legend = paste(&quot;nu=&quot;, nus), col = nus + 2, lwd = 1) 4.4 统计分布 4.4.1 一元分布 三大抽样及其历史 4.4.2 多元分布 多元t分布函数 The multivariate \\(t\\) distribution (MVT) is given by \\[T(\\mathbf{a},\\mathbf{b},\\Sigma,\\nu)=\\frac{2^{1-\\frac{\\nu}{2}}}{\\Gamma(\\frac{\\nu}{2}) } \\int_{0}^{\\infty} s^{\\nu-1}e^{-\\frac{s^2}{2}} \\Phi(\\frac{s\\mathbf{a}}{\\sqrt{\\nu}},\\frac{s\\mathbf{b}}{\\sqrt{\\nu}},\\Sigma)ds\\] multivariate normal distribution function (MVN) \\[\\Phi(\\mathbf{a},\\mathbf{b},\\Sigma)=\\frac{1}{\\sqrt{|\\Sigma|(2\\pi)^m}} \\int_{a_1}^{b_1}\\!\\int_{a_2}^{b_2}\\!\\cdots\\!\\int_{a_m}^{b_m} e^{-\\frac{1}{2}x^\\top\\Sigma^{-1}x}dx\\] \\(x=(x_1,x_2,\\dots,x_m)^\\top,-\\infty \\le a_i \\le b_i \\le \\infty\\) for all \\(i\\) and \\(\\Sigma\\) is a positive semi-definite symmetric \\(m \\times m\\) matrix 多元\\(t\\)分布分位数计算 library(mvtnorm) library(matrixcalc) n &lt;- c(26, 24, 20, 33, 32) V &lt;- diag(1 / n) df &lt;- 130 C &lt;- matrix(c( 1, 1, 1, 0, 0, -1, 0, 0, 1, 0, 0, -1, 0, 0, 1, 0, 0, 0, -1, -1, 0, 0, -1, 0, 0 ), ncol = 5) cv &lt;- C %*% V %*% t(C) ## covariance matrix dv &lt;- t(1 / sqrt(diag(cv))) cr &lt;- cv * (t(dv) %*% dv) ## correlation matrix delta &lt;- rep(0, 5) Tn &lt;- qmvt(0.95, df = df, delta = delta, corr = cr, abseps = 0.0001, maxpts = 100000, tail = &quot;both&quot; ) Tn 计算多元正态分布的概率 sigma &lt;- read.csv(file = &quot;data/sigma.csv&quot;, header = F, sep = &quot;,&quot;) mat &lt;- matrix(0, nrow = nrow(sigma), ncol = ncol(sigma)) sigma &lt;- as.matrix(sigma) attributes(sigma) &lt;- attributes(mat) # str(sigma) # is.symmetric.matrix(sigma) # is.positive.definite(sigma) m &lt;- nrow(sigma) Fn &lt;- pmvnorm( lower = rep(-Inf, m), upper = rep(0, m), mean = rep(0, m), sigma = sigma ) Fn mvrnorm 函数来自 MASS 包，模拟多元正态分布的样本 参考文献 "],
["section-5.html", "第 5 章 文件操作", " 第 5 章 文件操作 https://github.com/r-lib/fs # 获取当前目录 getwd() # 当前目录的子目录 list.dirs() # 当前目录下的子目录和文件 dir() # 查看指定目录的子目录和文件 dir(path = &quot;./&quot;) # 只列出以字母R开头的子目录和文件 dir(path = &quot;./&quot;,pattern = &#39;^R&#39;) # 列出目录下所有目录和文件，包括隐藏文件 dir(path = &quot;./&quot;,all.files = TRUE) # 查看当前目录的子目录和文件，同dir()函数 list.files() list.files(&quot;.&quot;,all.files = TRUE) # 查看当前目录的权限 file.info(&quot;.&quot;) # 查看指定目录权限 file.info(&quot;./documents/python&quot;) # 当前目录下，创建一个目录 dir.create(&quot;create&quot;) list.dirs() # system(&quot;tree&quot;) "],
["section-6.html", "第 6 章 数据操作 6.1 集合运算 6.2 正则匹配 6.3 排序 6.4 索引 6.5 分组 6.6 apply 6.7 合并 6.8 映射 6.9 拆分 6.10 数据库", " 第 6 章 数据操作 6.1 集合运算 6.2 正则匹配 字符串处理 Handling Strings with R Gaston Sanchez 著 正则表达式 is ervrywhere，is 高级/hacker’s skill 技能 正则表达式速查表 – Python3 Online regex tester and debugger Regular expression operations 以 CRAN 日志数据为例 R 包开发者 library(magrittr) gsub( &quot; &lt;([^&lt;&gt;]*)&gt;&quot;, &quot;&quot;, lapply(.packages(TRUE), maintainer) %&gt;% unlist() ) %&gt;% unique() %&gt;% sort() %&gt;% tail(10) #&gt; [1] &quot;Thomas Lumley&quot; &quot;Thomas Petzoldt&quot; &quot;Tim Keitt&quot; #&gt; [4] &quot;Torsten Hothorn&quot; &quot;Trevor Hastie&quot; &quot;Vitalie Spinu&quot; #&gt; [7] &quot;Winston Chang&quot; &quot;Yihui Xie&quot; &quot;Yixuan Qiu&quot; #&gt; [10] &quot;Zuguang Gu&quot; # 网上有多少 R 包 pkg_repos &lt;- c(&quot;https://mirrors.tuna.tsinghua.edu.cn/CRAN/&quot;,&quot;https://inla.r-inla-download.org/R/stable&quot;,&quot;http://r-forge.r-project.org/&quot;) pkg &lt;- utils::available.packages(repos = pkg_repos) pkg &lt;- as.data.frame(pkg, stringsAsFactors = FALSE) pkg$Package download.packages(&quot;Rbooks&quot;, destdir = &quot;~/&quot;,repos = &quot;http://r-forge.r-project.org/&quot;) Github 活动记录 https://github.com/jonocarroll/butteRfly # install.packages(&quot;devtools&quot;) devtools::install_github(&quot;jonocarroll/butteRfly&quot;) my_socials &lt;- collate_socials(user = c(&quot;jonocarroll&quot;, &quot;carroll_jono&quot;, 4168169), socials = c(&quot;GitHub&quot;, &quot;Twitter&quot;, &quot;StackOverflow&quot;)) 6.3 排序 6.3.1 order 6.3.2 sort 6.4 索引 6.4.1 which 向量和矩阵中的操作 6.4.2 [[ # which [] 索引性能比较 n = 100000 x = runif(n) i = logical(n) i[sample(n, n/4)] = TRUE microbenchmark::microbenchmark(x[i], x[which(i)], times = 1000) 6.5 分组 by with 和 within 6.6 apply 6.6.1 lapply 6.6.2 sapply 6.6.3 parallel https://stackoverflow.com/questions/3505701/grouping-functions-tapply-by-aggregate-and-the-apply-family apropos(&quot;apply&quot;) #&gt; [1] &quot;apply&quot; &quot;dendrapply&quot; &quot;eapply&quot; &quot;kernapply&quot; &quot;lapply&quot; #&gt; [6] &quot;mapply&quot; &quot;rapply&quot; &quot;sapply&quot; &quot;tapply&quot; &quot;vapply&quot; 6.7 合并 6.7.1 aggregate 6.8 映射 6.8.1 Map 6.8.2 Reduce openxlsx 拆分、映射计算，合并 ## Load dependencies if (!require(&#39;openxlsx&#39;)) install.packages(&#39;openxlsx&#39;) library(&#39;openxlsx&#39;) ## Split data apart by a grouping variable; ## makes a named list of tables dat &lt;- split(mtcars, mtcars$cyl) dat ## Create a blank workbook wb &lt;- createWorkbook() ## Loop through the list of split tables as well as their names ## and add each one as a sheet to the workbook Map(function(data, name){ addWorksheet(wb, name) writeData(wb, name, data) }, dat, names(dat)) ## Save workbook to working directory saveWorkbook(wb, file = &quot;example.xlsx&quot;, overwrite = TRUE) 6.9 拆分 6.9.1 split 6.9.2 cut Z &lt;- stats::rnorm(10000) table(cut(Z, breaks = -6:6)) # 条形图 plot(cut(Z, breaks = -6:6)) # 落在区间 [-6，6] 内的点 sum(table(cut(Z, breaks = -6:6, labels = FALSE))) # 直方图 hist(Z, breaks = -6:6) aaa &lt;- c(1,2,3,4,5,2,3,4,5,6,7) cut(aaa, 3) cut(aaa, 3, dig.lab = 4, ordered = TRUE) ## one way to extract the breakpoints labs &lt;- levels(cut(aaa, 3)) cbind(lower = as.numeric( sub(&quot;\\\\((.+),.*&quot;, &quot;\\\\1&quot;, labs) ), upper = as.numeric( sub(&quot;[^,]*,([^]]*)\\\\]&quot;, &quot;\\\\1&quot;, labs) )) findInterval embed 6.10 数据库 RMariaDB: Implements a ‘DBI’-compliant interface to ‘MariaDB’ (https://mariadb.org/) and ‘MySQL’ (https://www.mysql.com/) databases. https://github.com/r-dbi/RMariaDB rio https://github.com/leeper/rio # 读取一系列同一格式的数据文件 read_list &lt;- function(list_of_datasets, read_func){ read_and_assign &lt;- function(dataset, read_func){ dataset_name &lt;- as.name(dataset) dataset_name &lt;- read_func(dataset) } # invisible is used to suppress the unneeded output output &lt;- invisible( sapply(list_of_datasets, read_and_assign, read_func = read_func, simplify = FALSE, USE.NAMES = TRUE)) # Remove the extension at the end of the data set names names_of_datasets &lt;- c(unlist(strsplit(list_of_datasets, &quot;[.]&quot;))[c(T, F)]) names(output) &lt;- names_of_datasets return(output) } data_files &lt;- list.files(pattern = &quot;.csv&quot;) # 提取文件名.csv格式文件 print(data_files) library(&quot;readr&quot;) library(&quot;tibble&quot;) list_of_data_sets &lt;- read_list(data_files, read_csv) glimpse(list_of_data_sets) "],
["graphics.html", "第 7 章 基础图形 7.1 plot 7.2 添加矩形网格线 7.3 旋转坐标抽标签 7.4 添加数学注释 7.5 标记特定的数据 7.6 文本越出绘图区域 7.7 抖动图", " 第 7 章 基础图形 7.1 plot set.seed(2018) n &lt;- 2^16 x &lt;- runif(n,0,1) delta &lt;- 0.01 len &lt;- diff(c(0,which(x &lt; delta),n+1))-1 ylim &lt;- seq( 0, 1800, by = 300) xlim &lt;- seq( 0, 100, by = 20) p &lt;- hist(len[len &lt; 101], breaks = -1:100+0.5, plot = FALSE) par(mar = c(2,2,.5,.5)) plot(p, xlab = &#39;间距&#39;, ylab = &#39;频数&#39;, axes = FALSE, col = &quot;lightblue&quot;, border = &quot;white&quot;, main = &quot;&quot;) axis( 1, labels = xlim, at = xlim, las = 1) # x 轴 axis( 2, labels = ylim, at = ylim, las = 0) # y 轴 box(col=&quot;gray&quot;) # 添加线性回归线 xx &lt;- seq.int(from = 0, to = 100, by = 1) xy &lt;- p$counts options(digits = 2) fit &lt;- lm(xy~xx) abline(fit, col = &#39;red&#39;) 图 7.1: 游程直方图 b = coef(fit) # mtext(paste0( &quot;Y = &quot;, paste0(paste0(b[1], b[2]),&quot;x&quot;) ), side = 3, cex = 2) 还你一个清爽的世界，统计之都文章 漫谈条形图 data(NCI60, package = &quot;ISLR&quot;) # 加载数据 myData &lt;- sort(table(NCI60$labs), decreasing = TRUE) par(mar = c(2, 7, 1, 1)) barCenters &lt;- barplot(myData, col = &quot;lightblue&quot;, axes = FALSE, axisnames = FALSE, horiz = TRUE, border = &quot;white&quot; ) text( y = barCenters, x = par(&quot;usr&quot;)[3], adj = 1, labels = names(myData), xpd = TRUE ) axis(1, labels = seq(0, 9, by = 1), at = seq(0, 9, by = 1), las = 1, col = &quot;gray&quot;) 图 7.2: 条形图 plot 作为一个泛型函数，对于不同的输入数据类型，会自动匹配不同的绘图函数，默认的有 methods(plot) #&gt; [1] plot.acf* plot.data.frame* plot.decomposed.ts* #&gt; [4] plot.default plot.dendrogram* plot.density* #&gt; [7] plot.ecdf plot.factor* plot.formula* #&gt; [10] plot.function plot.hclust* plot.histogram* #&gt; [13] plot.HoltWinters* plot.isoreg* plot.lm* #&gt; [16] plot.medpolish* plot.mlm* plot.numpy.ndarray* #&gt; [19] plot.ppr* plot.prcomp* plot.princomp* #&gt; [22] plot.profile.nls* plot.raster* plot.shingle* #&gt; [25] plot.spec* plot.stepfun plot.stl* #&gt; [28] plot.table* plot.trellis* plot.ts #&gt; [31] plot.tskernel* plot.TukeyHSD* #&gt; see &#39;?methods&#39; for accessing help and source code op &lt;- par(mfrow = c(3, 2), mar = c(2, 2, .5, .5)) # 分类散点图 plot(Sepal.Length ~ Sepal.Width, data = iris, col = Species, pch = 16) legend(&quot;topright&quot;, legend = unique(iris$Species), box.col = &quot;gray&quot;, pch = 16, col = unique(iris$Species) ) box(col = &quot;gray&quot;) # 气泡图 plot(Volume ~ Height, data = trees, pch = 16, cex = Girth / 8, col = rev(terrain.colors(nrow(trees), alpha = .5)) ) box(col = &quot;gray&quot;) # 折线图 plot(AirPassengers, col = &quot;lightblue&quot;) box(col = &quot;gray&quot;) # 柱形图 set.seed(123456) barPois &lt;- table(stats::rpois(1000, lambda = 5)) plot(barPois, col = &quot;lightblue&quot;, type = &quot;h&quot;, lwd = 10, main = &quot;&quot;) box(col = &quot;gray&quot;) # 马赛克图 # par(mar=c(2,2,.5,.5)) plot(HairEyeColor, col = &quot;lightblue&quot;, border = &quot;white&quot;, main = &quot;&quot;) # box(col=&quot;gray&quot;) # 矩阵图 自带 layout plot(iris[, -5], col = iris$Species, pch = 16) 图 7.3: 丰富的方法 图 7.3: 丰富的方法 par(op) raster 图形 library(raster) #&gt; Loading required package: sp #&gt; #&gt; Attaching package: &#39;raster&#39; #&gt; The following object is masked from &#39;package:magrittr&#39;: #&gt; #&gt; extract library(sp) library(spDataLarge) plot(elevation, asp = NA) 图 7.4: raster 图形 注意与 image 函数区别 # A prettier display of the volcano x &lt;- 10*(1:nrow(volcano)) y &lt;- 10*(1:ncol(volcano)) image(x, y, volcano, col = terrain.colors(100), axes = FALSE) contour(x, y, volcano, levels = seq(90, 200, by = 5), add = TRUE, col = &quot;peru&quot;) axis(1, at = seq(100, 800, by = 100)) axis(2, at = seq(100, 600, by = 100)) box() title(main = &quot;Maunga Whau Volcano&quot;, font.main = 4) 图 7.5: image 图形 残差图 # iris$Species 分三类 vec_mean &lt;- apply(iris[,-5],2,mean) vec_sd &lt;- apply(iris[,-5],2,sd) plot( seq(4) , vec_mean, ylim = range(c(vec_mean-vec_sd, vec_mean + vec_sd)), pch=19, xlab=&quot;Species&quot;, ylab=&quot;Mean +/- SD&quot;, main=&quot;Scatter plot with std.dev error bars&quot; ) arrows(seq(4), vec_mean-vec_sd, seq(4), vec_mean + vec_sd, length=0.05, angle=90, code=3) # seq( nlevels(iris$Species) ) 所谓高级就是一个 plot 就可以画出一幅图，它包括标题，坐标轴标签等等 (W. N. Venables and R Core Team 2018) 我们先来看看 graphics 包提供的绘图函数， 绘图功能使用手册， 如添加参考线、 标题、 标签和旋转轴标签等等 library(graphics) ls(&quot;package:graphics&quot;) #&gt; [1] &quot;abline&quot; &quot;arrows&quot; &quot;assocplot&quot; #&gt; [4] &quot;axis&quot; &quot;Axis&quot; &quot;axis.Date&quot; #&gt; [7] &quot;axis.POSIXct&quot; &quot;axTicks&quot; &quot;barplot&quot; #&gt; [10] &quot;barplot.default&quot; &quot;box&quot; &quot;boxplot&quot; #&gt; [13] &quot;boxplot.default&quot; &quot;boxplot.matrix&quot; &quot;bxp&quot; #&gt; [16] &quot;cdplot&quot; &quot;clip&quot; &quot;close.screen&quot; #&gt; [19] &quot;co.intervals&quot; &quot;contour&quot; &quot;contour.default&quot; #&gt; [22] &quot;coplot&quot; &quot;curve&quot; &quot;dotchart&quot; #&gt; [25] &quot;erase.screen&quot; &quot;filled.contour&quot; &quot;fourfoldplot&quot; #&gt; [28] &quot;frame&quot; &quot;grconvertX&quot; &quot;grconvertY&quot; #&gt; [31] &quot;grid&quot; &quot;hist&quot; &quot;hist.default&quot; #&gt; [34] &quot;identify&quot; &quot;image&quot; &quot;image.default&quot; #&gt; [37] &quot;layout&quot; &quot;layout.show&quot; &quot;lcm&quot; #&gt; [40] &quot;legend&quot; &quot;lines&quot; &quot;lines.default&quot; #&gt; [43] &quot;locator&quot; &quot;matlines&quot; &quot;matplot&quot; #&gt; [46] &quot;matpoints&quot; &quot;mosaicplot&quot; &quot;mtext&quot; #&gt; [49] &quot;pairs&quot; &quot;pairs.default&quot; &quot;panel.smooth&quot; #&gt; [52] &quot;par&quot; &quot;persp&quot; &quot;pie&quot; #&gt; [55] &quot;plot&quot; &quot;plot.default&quot; &quot;plot.design&quot; #&gt; [58] &quot;plot.function&quot; &quot;plot.new&quot; &quot;plot.window&quot; #&gt; [61] &quot;plot.xy&quot; &quot;points&quot; &quot;points.default&quot; #&gt; [64] &quot;polygon&quot; &quot;polypath&quot; &quot;rasterImage&quot; #&gt; [67] &quot;rect&quot; &quot;rug&quot; &quot;screen&quot; #&gt; [70] &quot;segments&quot; &quot;smoothScatter&quot; &quot;spineplot&quot; #&gt; [73] &quot;split.screen&quot; &quot;stars&quot; &quot;stem&quot; #&gt; [76] &quot;strheight&quot; &quot;stripchart&quot; &quot;strwidth&quot; #&gt; [79] &quot;sunflowerplot&quot; &quot;symbols&quot; &quot;text&quot; #&gt; [82] &quot;text.default&quot; &quot;title&quot; &quot;xinch&quot; #&gt; [85] &quot;xspline&quot; &quot;xyinch&quot; &quot;yinch&quot; 7.2 添加矩形网格线 矩形网格线是用做背景参考线的，常常是淡灰色的细密虚线，plot 函数的 panel.first 参数4 和 grid 函数 # 抄自 https://yihui.name/cn/2018/02/cohen-s-d/ n = 30 # 样本量（只是一个例子） x = seq(0, 12, 0.01) par(mar = c(4, 4, 0.2, 0.1)) plot(x/sqrt(n), 2 * (1 - pt(x, n - 1)), xlab = &quot;d = t / sqrt(n)&quot;, type = &quot;l&quot;, panel.first = grid()) abline(v = c(0.01, 0.2, 0.5, 0.8, 1.2, 2), lty = 2) 图 7.6: 添加背景参考线 7.3 旋转坐标抽标签 旋转坐标抽标签的例子来自手册《R FAQ》的第7章第27个问题 (Hornik 2017)，在基础图形中，旋转坐标轴标签需要 text() 而不是 mtext()，因为后者不支持par(&quot;srt&quot;) ## Increase bottom margin to make room for rotated labels par(mar = c(5, 4, .5, 2) + 0.1) ## Create plot with no x axis and no x axis label plot(1 : 8, xaxt = &quot;n&quot;, xlab = &quot;&quot;) ## Set up x axis with tick marks alone axis(1, labels = FALSE) ## Create some text labels labels &lt;- paste(&quot;Label&quot;, 1:8, sep = &quot; &quot;) ## Plot x axis labels at default tick marks text(1:8, par(&quot;usr&quot;)[3] - 0.5, srt = 45, adj = 1, labels = labels, xpd = TRUE) ## Plot x axis label at line 6 (of 7) mtext(side = 1, text = &quot;X Axis Label&quot;, line = 4) 图 7.7: 旋转坐标轴标签 srt = 45 表示文本旋转角度， xpd = TRUE 允许文本越出绘图区域，adj = 1 to place the right end of text at the tick marks；You can adjust the value of the 0.5 offset as required to move the axis labels up or down relative to the x axis. 7.4 添加数学注释 数学符号注释，图7.8 自定义坐标轴 (Murrell and Ihaka 2000)。 # 抄自 https://www.tandfonline.com/doi/pdf/10.1080/10618600.2000.10474900 par(mar = c(4, 4, 0.2, 0.1)) plot(c(1, 1e6), c(-pi, pi), type = &quot;n&quot;, axes = FALSE, ann = FALSE, log = &quot;x&quot;) axis(1, at = c(1, 1e2, 1e4, 1e6), labels = expression(1, 10^2, 10^4, 10^6)) axis(2, at = c(-pi, -pi / 2, 0, pi / 2, pi), labels = expression(-pi, -pi / 2, 0, pi / 2, pi)) text(1e3, 0, expression(italic(&quot;Customized Axes&quot;))) box() 图 7.8: 在自定义的坐标轴上添加合适的数学注释 7.5 标记特定的数据 散点图上，我们常常需要标记一些点 par(mar = c(4, 4, 0.2, 0.1)) # 抄自 StackOverflow https://stackoverflow.com/questions/51804892 data(&quot;iris&quot;) stripchart(Petal.Length ~ Species, data = iris, subset = Petal.Length &gt; 1.4, vertical = TRUE, method = &quot;jitter&quot;, ylim = c(1,7), pch = 16) stripchart(Petal.Length ~ Species, data = iris, subset = Petal.Length &lt; 1.4, vertical = TRUE, method = &quot;jitter&quot;, add = TRUE, col = &quot;red&quot;, pch = 17) 图 7.9: 用红色实心三角标记数据 stripchart 函数本质上还是 plot 函数5 7.6 文本越出绘图区域 7.7 抖动图 抖动散点图 mat &lt;- matrix(1:length(colors()), ncol = 9, byrow= TRUE) df &lt;- data.frame(col = colors(), x = as.integer(cut(1:length(colors()), 9)), y = rep(1:73, 9), stringsAsFactors=FALSE) par(mar = c(4, 4, 1, 0.1)) plot(y ~ jitter(x), data = df, col = df$col, pch=16, main = &quot;Visualizing colors() split in 9 groups&quot;, xlab = &quot;Group&quot;, ylab = &quot;Element of the group (min = 1, max = 73)&quot;, sub = &quot;x = 3, y = 1 means that it&#39;s the 2 * 73 + 1 = 147th color&quot;) 图 7.10: 抖动散点图 参考文献 "],
["ggplot.html", "第 8 章 高级图形", " 第 8 章 高级图形 Claus O. Wilke 新书：数据可视化基础 Fundamentals of Data Visualization 全 R/ggplot2 实现 ggplot2 有很多绘图函数 library(ggplot2) # packageDescription(&quot;ggplot2&quot;) grep(&#39;^(geom_)&#39;, ls(&#39;package:ggplot2&#39;), value = TRUE) #&gt; [1] &quot;geom_abline&quot; &quot;geom_area&quot; &quot;geom_bar&quot; #&gt; [4] &quot;geom_bin2d&quot; &quot;geom_blank&quot; &quot;geom_boxplot&quot; #&gt; [7] &quot;geom_col&quot; &quot;geom_contour&quot; &quot;geom_count&quot; #&gt; [10] &quot;geom_crossbar&quot; &quot;geom_curve&quot; &quot;geom_density&quot; #&gt; [13] &quot;geom_density_2d&quot; &quot;geom_density2d&quot; &quot;geom_dotplot&quot; #&gt; [16] &quot;geom_errorbar&quot; &quot;geom_errorbarh&quot; &quot;geom_freqpoly&quot; #&gt; [19] &quot;geom_hex&quot; &quot;geom_histogram&quot; &quot;geom_hline&quot; #&gt; [22] &quot;geom_jitter&quot; &quot;geom_label&quot; &quot;geom_line&quot; #&gt; [25] &quot;geom_linerange&quot; &quot;geom_map&quot; &quot;geom_path&quot; #&gt; [28] &quot;geom_point&quot; &quot;geom_pointrange&quot; &quot;geom_polygon&quot; #&gt; [31] &quot;geom_qq&quot; &quot;geom_qq_line&quot; &quot;geom_quantile&quot; #&gt; [34] &quot;geom_raster&quot; &quot;geom_rect&quot; &quot;geom_ribbon&quot; #&gt; [37] &quot;geom_rug&quot; &quot;geom_segment&quot; &quot;geom_sf&quot; #&gt; [40] &quot;geom_sf_label&quot; &quot;geom_sf_text&quot; &quot;geom_smooth&quot; #&gt; [43] &quot;geom_spoke&quot; &quot;geom_step&quot; &quot;geom_text&quot; #&gt; [46] &quot;geom_tile&quot; &quot;geom_violin&quot; &quot;geom_vline&quot; grep(&#39;^(stat_)&#39;, ls(&#39;package:ggplot2&#39;), value = TRUE) #&gt; [1] &quot;stat_bin&quot; &quot;stat_bin_2d&quot; &quot;stat_bin_hex&quot; #&gt; [4] &quot;stat_bin2d&quot; &quot;stat_binhex&quot; &quot;stat_boxplot&quot; #&gt; [7] &quot;stat_contour&quot; &quot;stat_count&quot; &quot;stat_density&quot; #&gt; [10] &quot;stat_density_2d&quot; &quot;stat_density2d&quot; &quot;stat_ecdf&quot; #&gt; [13] &quot;stat_ellipse&quot; &quot;stat_function&quot; &quot;stat_identity&quot; #&gt; [16] &quot;stat_qq&quot; &quot;stat_qq_line&quot; &quot;stat_quantile&quot; #&gt; [19] &quot;stat_sf&quot; &quot;stat_sf_coordinates&quot; &quot;stat_smooth&quot; #&gt; [22] &quot;stat_spoke&quot; &quot;stat_sum&quot; &quot;stat_summary&quot; #&gt; [25] &quot;stat_summary_2d&quot; &quot;stat_summary_bin&quot; &quot;stat_summary_hex&quot; #&gt; [28] &quot;stat_summary2d&quot; &quot;stat_unique&quot; &quot;stat_ydensity&quot; rattle 下载量时序图 library(cranlogs) library(ggthemes) pkgs_down &lt;- cran_downloads(package = &quot;rattle&quot;, from = Sys.Date() - 365 * 5, to = Sys.Date()) ggplot(pkgs_down, aes(x = date, y = count, colour = package)) + geom_line() + geom_point(size = 1.5) + scale_x_date(date_breaks = &quot;1 year&quot;, date_labels = &quot;%Y&quot;) + ylim(c(0, 1500)) + scale_colour_brewer(palette = &quot;Set1&quot;) + # scale_color_fivethirtyeight(&quot;&quot;) + # theme_fivethirtyeight() + labs( subtitle = paste(&quot;最近更新日期:&quot;, Sys.Date()), title = &quot;Rattle 最近5年每日下载量&quot;, caption = &quot; 数据源: http://cran-logs.rstudio.com/ &quot; ) + theme_minimal(base_size = 10.54, base_family = &quot;source-han-serif-cn&quot;) 给线条添加注释和标签，这个功能有时候比图例更加漂亮 # 出自 https://gist.github.com/EmilHvitfeldt/acb849a6135a21426c260850cf0f461b # Horizontal annotations with ggrepel and ggplot2 library(tidyverse) #&gt; ── Attaching packages ────────────────────────────────── tidyverse 1.2.1 ── #&gt; ✔ tibble 1.4.2 ✔ purrr 0.2.5 #&gt; ✔ tidyr 0.8.2 ✔ dplyr 0.7.7 #&gt; ✔ readr 1.1.1 ✔ stringr 1.3.1 #&gt; ✔ tibble 1.4.2 ✔ forcats 0.3.0 #&gt; ── Conflicts ───────────────────────────────────── tidyverse_conflicts() ── #&gt; ✖ tidyr::extract() masks magrittr::extract() #&gt; ✖ dplyr::filter() masks stats::filter() #&gt; ✖ dplyr::lag() masks stats::lag() #&gt; ✖ purrr::set_names() masks magrittr::set_names() library(ggrepel) data &lt;- tibble( x = seq_len(100), y = cumsum(rnorm(100)) ) anno_data &lt;- data %&gt;% filter(x %% 25 == 10) %&gt;% mutate(text = &quot;text&quot;) data %&gt;% ggplot(aes(x, y)) + geom_line() + geom_label_repel(aes(label = text), data = anno_data, direction = &quot;y&quot;, nudge_y = c(-5, 5, 5, 5) ) + theme_minimal() 图 8.1: 添加标签 为什么是 Grid Lattice 而不是 Trellis If you imagine that this pen is Trellis, then Lattice is not this pen. -- Paul Murrell (on the difference of Lattice (which eventually was called grid) and Trellis) DSC 2001, Wien (March 2001) 令人非常沮丧的是，很难用 Trellis graphics are a bit like hash functions: you can be close to the target, but get a far-off result. -- Dieter Menne (about problems with creating a suitable lattice panel function) R-help (August 2008) "],
["js.html", "第 9 章 动态图形 9.1 ECharts 9.2 D3", " 第 9 章 动态图形 基于 JS 动态库的 R 包 leaflet (Cheng, Karambelkar, and Xie 2018)，ggvis ， rbokeh (Hafen and Continuum Analytics, Inc. 2016) 和 plotly (Sievert et al. 2018) ，我比较喜欢 highcharter (Kunst 2017)，美观高效，还活跃开发中。 library(&quot;highcharter&quot;) data(diamonds, mpg, package = &quot;ggplot2&quot;) hchart(mpg, &quot;scatter&quot;, hcaes(x = displ, y = hwy, group = class)) library(rbokeh) figure(width = 600, height = 400) %&gt;% ly_hist(eruptions, data = faithful, breaks = 40, freq = FALSE) %&gt;% ly_density(eruptions, data = faithful) library(plotly) plot_ly(z = ~volcano, type = &quot;surface&quot;) 9.1 ECharts 基于 ECharts 4 开发的 R 包 (???) 和 (???) # install.packages(&quot;devtools&quot;) devtools::install_github(&quot;JohnCoene/echarts4r&quot;) devtools::install_github(&#39;cosname/recharts&#39;) 9.2 D3 R Interface to D3 Visualizations (???) devtools::install_github(&quot;rstudio/r2d3&quot;) 参考文献 "],
["section-10.html", "第 10 章 绘图工具 10.1 截图 10.2 Inkscape 10.3 转化 10.4 优化 10.5 裁剪 10.6 接口", " 第 10 章 绘图工具 图片导入，导出，转化，批量转化 导入 SVG 格式的图片, rsvg (Ooms 2018b) 批量转化 svg 文件为 pdf 文件 library(rsvg) tmp &lt;- &quot;figure/Ink&quot; # svgs 存放目录 input_paths &lt;- paste0(tmp, &quot;/&quot;, list.files(tmp)) output_paths &lt;- paste0(&quot;figure/pdf&quot;, &quot;/&quot;, gsub(&quot;svg&quot;, &quot;pdf&quot;, list.files(tmp))) for (i in seq(length(list.files(tmp)))) { rsvg_pdf(input_paths[i], file = output_paths[i]) } pdftools (Ooms 2018a) 用于文本提取，渲染和转化 PDF 文档 magick 的简单使用，如插入 Inkscape 图标，如图10.1 图 10.1: Inkscape 图标 magick Bindings to ImageMagick: the most comprehensive open-source image processing library available. Supports many common formats (png, jpeg, tiff, pdf, etc) and manipulations (rotate, scale, crop, trim, flip, blur, etc). All operations are vectorized via the Magick++ STL meaning they operate either on a single frame or a series of frames for working with layers, collages, or animation. In RStudio images are automatically previewed when printed to the console, resulting in an interactive editing environment. The latest version of the package includes a native graphics device for creating in-memory graphics or drawing onto images using pixel coordinates. 10.1 截图 webshot https://github.com/wch/webshot # 截图 install.packages(&quot;webshot&quot;) webshot::install_phantomjs() # 截网页 library(webshot) webshot(&quot;https://www.r-project.org/&quot;, &quot;r.png&quot;) webshot(&quot;https://www.r-project.org/&quot;, &quot;r.pdf&quot;) # Can also output to PDF # 截文档 rmdshot(&quot;document.rmd&quot;, &quot;document.png&quot;) # 截特定大小 GraphicsMagick (recommended) or ImageMagick installed # Can specify pixel dimensions for resize() webshot(&quot;https://www.r-project.org/&quot;, &quot;r-small.png&quot;) %&gt;% resize(&quot;400x&quot;) %&gt;% shrink() 10.2 Inkscape Inkscape is an open source drawing tool with capabilities similar to Illustrator, Freehand, and CorelDraw that uses the W3C standard scalable vector graphics format (SVG). Some supported SVG features include basic shapes, paths, text, markers, clones, alpha blending, transforms, gradients, and grouping. In addition, Inkscape supports Creative Commons meta-data, node-editing, layers, complex path operations, text-on-path, and SVG XML editing. It also imports several formats like EPS, Postscript, JPEG, PNG, BMP, and TIFF and exports PNG as well as multiple vector-based formats. Inkscape’s main motivations are to provide the Open Source community with a fully W3C compliant XML, SVG, and CSS2 drawing tool emphasizing a lightweight core with powerful features added as extensions, and the establishment of a friendly, open, community-oriented development processes. Inkscape6 是替代 Adobe Illustrator（简称 AI） 最佳工具，没有之一。开源免费，功能齐全，更新快，跨平台。尤其不用面临如图10.2所示的兼容性问题，说白了，就是厂家在不停地刷版本号，要用户掏钱升级，我早年间也是 Adobe 的忠实粉丝，通过校园先锋以学生身份买了好几套产品，后来看透了这一切，又找到了开源的 Inkscape ，现在我没有理由去升级 AI 了，我的电脑现在装的还都是 CS6 系列。 图 10.2: 兼容性错误 最后欣赏来自官网的几个作品7 图 10.3: 作品欣赏 图 10.3: 作品欣赏 10.3 转化 首先安装 ImageMagick 软件包中的 covert 程序 asy -f jpg test.asy 高质量大图，给定像素 convert -geometry 1000x3000 example.eps example.png 指定分辨率 convert -geometry 1000x3000 -density 300 -units PixelsPerInch example.eps example.png 这样不改变图像的像素数，只是给出一个每个像素应该显示多大的提示。 10.4 优化 optipng 是一个非常好的图片压缩、优化工具 现在，我们设置 chunk 选项 optipng 为非空(non-NULL)的值，例如，'' 去激活这个 hook （益辉称之为钩子，这里勾的是 optipng 这个图片优化工具） library(ggplot2) set.seed(123) qplot(rnorm(1e3), rnorm(1e3)) 图 10.4: 优化 同一幅图，但是没有优化 library(ggplot2) set.seed(123) qplot(rnorm(1e3), rnorm(1e3)) 图 10.5: 没有优化 同一幅图，但是使用最高级别的优化 (传递 -o7 参数给 optipng): library(ggplot2) set.seed(123) qplot(rnorm(1e3), rnorm(1e3)) 图 10.6: 最强优化 10.5 裁剪 pdfcrop 可将 PDF 图片中留白的部分裁去，再也不用纠结 par 了 图 10.7: pdfcrop 裁剪白边 10.6 接口 R提供了丰富的图形接口，包括 Tcl/Tk , Gtk, Shiny 等。John Chamber 在书 《Extending R》详细介绍了这一切 rattle/RGtk2: R Bindings for Gtk 2.8.0 and Above http://www.ggobi.org/rgtk2/ Rcmdr: tcl/tk shiny: radiant https://github.com/radiant-rstats/radiant install.packages(&quot;radiant&quot;, repos = &quot;https://radiant-rstats.github.io/minicran/&quot;) 参考文献 "],
["color.html", "第 11 章 配色 11.1 调色板 11.2 颜色空间", " 第 11 章 配色 君子爱色，取之有道：有些人功力深厚，黑白灰几乎打遍天下无敌手，如科波拉执导的《教父》、沃卓斯基执导的《黑客帝国》等等，但我还是要说，好色乃人之本性也，花花世界，岂能都是法印眼中的白骨！再说《红楼梦》里，芍药丛中，桃花树下，滴翠亭边，栊翠庵里，处处都是湘云、黛玉、宝钗、妙玉留下的诗歌。 黑西装、黑领带和白衬衫，让人一下子想到了电影《黑客帝国》，构建了整幅画轴，黑领带换黑领结和红玫瑰，转而又想到电影《教父》的主角维托·唐·科莱昂，黑白灰就占了电影的主色调。这么素的颜色怎么就能这么丰富呢？这就是配色的技艺了！ 11.1 调色板 首先选择一组合适的颜色，比如从桃色到梨色，选择6种颜色，以此为基础，可以借助grDevices::colorRampPalette函数扩充至想要的数目 # Colors from https://github.com/johannesbjork/LaCroixColoR color_vec &lt;- c(&quot;#FF3200&quot;, &quot;#E9A17C&quot;, &quot;#E9E4A6&quot;, &quot;#1BB6AF&quot;, &quot;#0076BB&quot;, &quot;#172869&quot;) n &lt;- 20 more_colors &lt;- (grDevices::colorRampPalette(color_vec))(n) 这里用 graphics::rect 函数展示这组颜色 # 代码来自 ?colorspace::rainbow_hcl pal &lt;- function(colorname, border = &quot;light gray&quot;, ...) { n &lt;- length(colorname) plot(0, 0, type = &quot;n&quot;, xlim = c(0, 1), ylim = c(0, 1), axes = FALSE, ... ) rect(0:(n - 1) / n, 0, 1:n / n, 1, col = colorname, border = border) } par(mar = rep(0, 4)) pal(more_colors, xlab = &quot;Colors from Peach to Pear&quot;, ylab = &quot;&quot;) 图 7.4: 桃色至梨色的渐变 早些时候我在统计之都论坛上发帖 – R语言绘图用调色板大全 https://d.cosx.org/d/419378-r 阐述色理 HCL RGB CMYK Adobe RGB sRGB P3广色域 2K 4K 5K 视网膜屏 普清 高清 超高清 全高清 显示器 打印机 照相机 为什么需要这么多颜色模式 知道颜色模式及其之间的转化 颜色空间及其区别 HCL and HSV color spaces 基于网页、人眼、打印机使用不同的颜色模式为何 哪里可以获取颜色 grDevices (R Core Team 2017) colorspace (Ihaka et al. 2018) RColorBrewer (Neuwirth 2014) 基本够用 取之有道 拿人家的颜色 一定要记得引用啊，我这里要是还有哪里没有引用到的一定要提出来 18个R包 所谓降龙十八掌 要想降住色魔，非得十八掌不可 11.2 颜色空间 确定一种颜色，我们需要知道 色相 饱和度 明度 颜色的三个属性， 11.2.1 RGB 红(red)、绿(green)、蓝(blue)是三原色 rgb(red, green, blue, alpha, names = NULL, maxColorValue = 1) 函数参数说明： red, blue, green, alpha 取值范围[0,M]，M 是 maxColorValue names 字符向量，给这组颜色值取名 maxColorValue 红，绿，蓝三色范围的最大值 The colour specification refers to the standard sRGB colorspace (IEC standard 61966). rgb 产生一种颜色，如 rgb(255, 0, 0, maxColorValue = 255) 的颜色是 &quot;#FF0000&quot; ，这是一串16进制数，每两个一组，那么一组有 \\(16^2 = 256\\) 种组合，整个一串有 \\(256^3 = 16777216\\) 种组合，这就是RGB表达的所有颜色。用色轮示意，如图 11.1 par(mar = rep(0,4)) pie(rep(1, times = 255), labels = &quot;&quot;, col = rainbow(255), border = FALSE) 图 11.1: RGB 色轮 colorRampPalette 自制调色板 op &lt;- par(mfrow = c(3, 1), mar = c(0.1, 0.1, 0.5, 0.1), xaxs = &quot;i&quot;, yaxs = &quot;i&quot;) n &lt;- 1000 mycolors &lt;- colorRampPalette(c(&quot;blue&quot;, &quot;orangeRed&quot;))(n) barplot(rep(1, times = n), col = mycolors, border = mycolors, axes = FALSE) mycolors &lt;- colorRampPalette(c(&quot;darkgreen&quot;, &quot;yellow&quot;, &quot;orangered&quot;))(n) barplot(rep(1, times = n), col = mycolors, border = mycolors, axes = FALSE) mycolors &lt;- colorRampPalette(c(&quot;blue&quot;, &quot;white&quot;, &quot;orangered&quot;), bias = 1.2)(n) barplot(rep(1, times = n), col = mycolors, border = mycolors, axes = FALSE) 图 11.2: colorRampPalette自制调色板 11.2.2 HSL 色相饱和度亮度 hue–saturation–luminance (HSL) 11.2.3 HSV Create a vector of colors from vectors specifying hue, saturation and value. 色相饱和度值 hsv(h = 1, s = 1, v = 1, alpha) This function creates a vector of colors corresponding to the given values in HSV space. rgb and rgb2hsv for RGB to HSV conversion; hsv函数通过设置色调、饱和度和亮度获得颜色，三个值都是0-1的相对量 par(mfcol = c(11, 121), mar = c(0, 0, 0, 0), xaxs = &quot;i&quot;, yaxs = &quot;i&quot;) x &lt;- seq(0, 10) / 10 ndx &lt;- expand.grid(x, x, x) mycolor &lt;- hsv(ndx[, 3], ndx[, 2], ndx[, 1]) for (i in 1:nrow(ndx)) { barplot(1, col = mycolor[i], border = mycolor[i], axes = FALSE) } 图 11.3: 色相、饱和度和亮度 RGB HSV HSL 都是不连续的颜色空间，缺点 11.2.4 HCL 基于感知的颜色空间替代RGB颜色空间 通过指定色相(hue)，色度(chroma)和亮度(luminance/lightness)，创建一组（种）颜色 hcl(h = 0, c = 35, l = 85, alpha, fixup = TRUE) 函数参数说明： h 颜色的色调，取值范围为[0,360]，0、120、240分别对应红色、绿色、蓝色 c 颜色的色度，其上界取决于色调和亮度 l 颜色的亮度，取值范围[0,100]，给定色调和色度，只有一部分子集可用 alpha 透明度，取值范围[0,1]，0 和1分别表示透明和不透明 This function corresponds to polar coordinates in the CIE-LUV color space 11.2.5 CMYK 印刷三原色：青 (cyan)、品红 (magenta)、黄 (yellow) 颜色模式转化 col2rgb 、rgb2hsv 和 rgb 函数 (R Core Team 2017) hex2RGB 函数 (Ihaka et al. 2018) col2hcl函数 (Wickham 2018) col2HSV (Sanchez 2013) col2hex (Sumner 2016) 这里应该有个思维导图 col2rgb(&quot;lightblue&quot;) # color to RGB #&gt; [,1] #&gt; red 173 #&gt; green 216 #&gt; blue 230 scales::col2hcl(&quot;lightblue&quot;) # color to HCL #&gt; [1] &quot;#ADD8E6FF&quot; palr::col2hex(&quot;lightblue&quot;) # color to HEX #&gt; [1] &quot;#ADD8E6FF&quot; colortools::col2HSV(&quot;lightblue&quot;) # color to HSV #&gt; [1] &quot;#ADD8E6&quot; rgb(173,216,230,maxColorValue = 255) # RGB to HEX #&gt; [1] &quot;#ADD8E6&quot; colorspace::hex2RGB(&quot;#ADD8E6&quot;) # HEX to RGB #&gt; R G B #&gt; [1,] 0.678 0.847 0.902 rgb(.678,.847,.902,maxColorValue = 1) # RGB to HEX #&gt; [1] &quot;#ADD8E6&quot; rgb2hsv(173,216,230,maxColorValue = 255) # RGB to HSV #&gt; [,1] #&gt; h 0.541 #&gt; s 0.248 #&gt; v 0.902 选色为什么这么难 op &lt;- par(mar = c(1, 2, 1, 0), mfrow = c(3, 2)) set.seed(1234) barplot(sample(seq(8), 8, replace = FALSE), col = palette(), border = &quot;white&quot;) set.seed(1234) barplot(sample(seq(8), 8, replace = FALSE), col = heat.colors(8), border = &quot;white&quot;) set.seed(1234) barplot(sample(seq(8), 8, replace = FALSE), col = gray.colors(8), border = &quot;white&quot;) set.seed(1234) barplot(sample(seq(8), 8, replace = FALSE), col = &quot;lightblue&quot;, border = &quot;white&quot;) barplot(sample(seq(8), 8, replace = FALSE), col = colorspace::sequential_hcl(8), border = &quot;white&quot;) barplot(sample(seq(8), 8, replace = FALSE), col = colorspace::diverge_hcl(8, h = c(130, 43), c = 100, l = c(70, 90)), border = &quot;white&quot; ) 图 11.4: 源起 par(op) 色相与阴影相比是无关紧要的，色相对于标记和分类很有用，但表示（精细的）空间数据或形状的效果较差。颜色是改善图形的好工具，但糟糕的配色方案 (color schemes) 可能会导致比灰度调色板更差的效果。(Stauffer et al. 2009) 黑、白、灰，看似有三种颜色，其实只有一种颜色，黑和白只是灰色的两极，那么如何设置灰色梯度，使得人眼比较好区分它们呢？这样获得的调色板适用于什么样的绘图环境呢？ R预置的灰色有224种，挑出其中的调色板 grep( &quot;^gr(a|e)y&quot; , grep(&quot;gr(a|e)y&quot; , colors() ,value = TRUE),value = TRUE,invert = TRUE) #&gt; [1] &quot;darkgray&quot; &quot;darkgrey&quot; &quot;darkslategray&quot; &quot;darkslategray1&quot; #&gt; [5] &quot;darkslategray2&quot; &quot;darkslategray3&quot; &quot;darkslategray4&quot; &quot;darkslategrey&quot; #&gt; [9] &quot;dimgray&quot; &quot;dimgrey&quot; &quot;lightgray&quot; &quot;lightgrey&quot; #&gt; [13] &quot;lightslategray&quot; &quot;lightslategrey&quot; &quot;slategray&quot; &quot;slategray1&quot; #&gt; [17] &quot;slategray2&quot; &quot;slategray3&quot; &quot;slategray4&quot; &quot;slategrey&quot; gray_colors &lt;- paste0(rep(c(&quot;slategray&quot;, &quot;darkslategray&quot;), each = 4), seq(4)) op &lt;- par(mar = c(0, 0, 3, 0)) pal(gray_colors, main = toString(gray_colors), cex.main = .9) 图 11.5: 灰度调色板 par(op) gray 与 grey 是一样的，类似 color 和 colour 的关系，可能是美式和英式的差别，且看 all.equal( col2rgb( paste0(&quot;gray&quot;,seq(100) ) ), col2rgb( paste0( &quot;grey&quot;, seq(100) ) ) ) #&gt; [1] TRUE gray100 代表白色，gray0 代表黑色，提取灰色调色板，去掉首尾部分是必要的 op &lt;- par(mfrow = c(2,1), mar=c(0,0,2,0)) n &lt;- 10 # 提取 n 种灰色 pal(paste0(&quot;gray&quot;, round( seq( from = 29, to = 89, length.out = n ) ) ), main = &quot;custom color palette&quot;) pal(gray.colors(10, start = .3, end = .9), main = &quot;gray.colors function&quot;) 图 11.6: 提取10种灰色做调色板 par(op) 比较 viridis 和 Spectral 两块调色板，如图 11.7 所示，可见 Spectral 的可识别性高些 dat &lt;- as.data.frame(cbind(rep(1948 + seq(12), each = 12), rep(seq(12), 12), AirPassengers)) colnames(dat) &lt;- c(&quot;year&quot;, &quot;month&quot;, &quot;passengers&quot;) library(ggplot2) library(colormap) library(gridExtra) viridis &lt;- ggplot(data = dat, aes(as.factor(year), as.factor(month))) + geom_point(pch = 15, size = 8, aes(color = passengers)) + scale_color_colormap(colormap = colormaps$viridis) + labs(x = &quot;Year&quot;, y = &quot;Month&quot;, colour = &quot;Passengers&quot;) + theme_minimal() Spectral &lt;- ggplot(data = dat, aes(as.factor(year), as.factor(month))) + geom_point(aes(colour = passengers), pch = 15, size = 8) + scale_colour_distiller(palette = &quot;Spectral&quot;) + labs(x = &quot;Year&quot;, y = &quot;Month&quot;, colour = &quot;Passengers&quot;) + theme_minimal() grid.arrange(viridis, Spectral, ncol = 2) 图 11.7: viridis 和 Spectral对比 再举栗子，图11.8是正负例对比，其中好在哪里呢？这张图要表达美国黄石国家公园的老忠实泉间歇喷发的时间规律，那么好的标准就是层次分明，以突出不同颜色之间的时间差异。这个差异，还要看起来不那么费眼睛，越一目了然越好。 erupt &lt;- ggplot(faithfuld, aes(waiting, eruptions, fill = density)) + geom_raster() + scale_x_continuous(NULL, expand = c(0, 0)) + scale_y_continuous(NULL, expand = c(0, 0)) + theme(legend.position = &quot;none&quot;) erupt1 &lt;- erupt + scale_fill_gradientn(colours = gray.colors(7)) erupt2 &lt;- erupt + scale_fill_distiller(palette = &quot;Spectral&quot;) erupt3 &lt;- erupt + scale_fill_gradientn(colours = terrain.colors(7)) erupt4 &lt;- erupt + scale_fill_colormap(colormap = colormaps$RdBu) grid.arrange(erupt1, erupt2, erupt3, erupt4, ncol = 2) 图 11.8: 美国黄石国家公园的老忠实泉 RColorBrewer 包 提供了有序 (Sequential) 、定性 (Qualitative) 和发散 (Diverging) 三类调色板，一般来讲，分别适用于连续或有序分类变量、无序分类变量、两类分层对比变量的绘图。再加上强大的 ggplot2 包内置的对颜色处理的函数，如 scale_alpha_* 、 scale_colour_* 和 scale_fill_* 等，详见： ls(&quot;package:ggplot2&quot;,pattern = &quot;scale_col(ou|o)r_&quot;) #&gt; [1] &quot;scale_color_brewer&quot; &quot;scale_color_continuous&quot; #&gt; [3] &quot;scale_color_discrete&quot; &quot;scale_color_distiller&quot; #&gt; [5] &quot;scale_color_gradient&quot; &quot;scale_color_gradient2&quot; #&gt; [7] &quot;scale_color_gradientn&quot; &quot;scale_color_grey&quot; #&gt; [9] &quot;scale_color_hue&quot; &quot;scale_color_identity&quot; #&gt; [11] &quot;scale_color_manual&quot; &quot;scale_color_viridis_c&quot; #&gt; [13] &quot;scale_color_viridis_d&quot; &quot;scale_colour_brewer&quot; #&gt; [15] &quot;scale_colour_continuous&quot; &quot;scale_colour_date&quot; #&gt; [17] &quot;scale_colour_datetime&quot; &quot;scale_colour_discrete&quot; #&gt; [19] &quot;scale_colour_distiller&quot; &quot;scale_colour_gradient&quot; #&gt; [21] &quot;scale_colour_gradient2&quot; &quot;scale_colour_gradientn&quot; #&gt; [23] &quot;scale_colour_grey&quot; &quot;scale_colour_hue&quot; #&gt; [25] &quot;scale_colour_identity&quot; &quot;scale_colour_manual&quot; #&gt; [27] &quot;scale_colour_ordinal&quot; &quot;scale_colour_viridis_c&quot; #&gt; [29] &quot;scale_colour_viridis_d&quot; ls(&quot;package:ggplot2&quot;,pattern = &quot;scale_fill_&quot;) #&gt; [1] &quot;scale_fill_brewer&quot; &quot;scale_fill_continuous&quot; #&gt; [3] &quot;scale_fill_date&quot; &quot;scale_fill_datetime&quot; #&gt; [5] &quot;scale_fill_discrete&quot; &quot;scale_fill_distiller&quot; #&gt; [7] &quot;scale_fill_gradient&quot; &quot;scale_fill_gradient2&quot; #&gt; [9] &quot;scale_fill_gradientn&quot; &quot;scale_fill_grey&quot; #&gt; [11] &quot;scale_fill_hue&quot; &quot;scale_fill_identity&quot; #&gt; [13] &quot;scale_fill_manual&quot; &quot;scale_fill_ordinal&quot; #&gt; [15] &quot;scale_fill_viridis_c&quot; &quot;scale_fill_viridis_d&quot; 除之前提到的 grDevices 包(R Core Team 2017) 、colorspace 包 (Ihaka et al. 2018)和 RColorBrewer 包 (Neuwirth 2014) 之外，此处还收录 yarrr 包(Phillips 2017) 、dichromat 包(Lumley 2016) 、colormap 包(Karambelkar 2016)、viridis 包(Garnier 2018)、pals 包(Wright 2018) 、ColorPalette 包(Ambroselli 2015)、colorRamps包 (Keitt 2012)、colortools包(Sanchez 2013) ，此外还有 palr 包(Sumner 2016) 就不一一收录了 # 代码来自 ?palettes demo.pal &lt;- function(n, border = if (n &lt; 32) &quot;light gray&quot; else NA, main = paste(&quot;color palettes: alpha = 1, n=&quot;, n), ch.col = c(&quot;rainbow(n, start=.7, end=.1)&quot;, &quot;heat.colors(n)&quot;, &quot;terrain.colors(n)&quot;, &quot;topo.colors(n)&quot;, &quot;cm.colors(n)&quot;,&quot;gray.colors(n, start = 0.3, end = 0.9)&quot;)) { nt &lt;- length(ch.col) i &lt;- 1:n; j &lt;- n / nt; d &lt;- j/6; dy &lt;- 2*d plot(i, i+d, type = &quot;n&quot;, axes = FALSE, ylab = &quot;&quot;,xlab = &quot;&quot;, main = main) for (k in 1:nt) { rect(i-.5, (k-1)*j+ dy, i+.4, k*j, col = eval(parse(text = ch.col[k])), border = border) text(2*j, k * j + dy/4, ch.col[k]) } } n &lt;- if(.Device == &quot;postscript&quot;) 64 else 16 # Since for screen, larger n may give color allocation problem op &lt;- par(mar=c(0,0,2,0)) demo.pal(n) 图 11.9: grDevices调色板1 par(op) op &lt;- par(mfrow =c(33,1),mar=c(0,0,.8,0)) for( i in seq(32)) { pal( colors()[ (1+20*(i-1)) : (20*i) ] ,main = paste(1+20*(i-1),&quot;to&quot;, 20*i)) } pal( colors()[ 641 : 657 ], main = &quot;641 to 657&quot;) 图 11.10: grDevices调色板2 par(op) library(ColorPalette) op &lt;- par(mfrow=c(4,1),mar=c(0,0,2,0)) pal(generateMonochromaticColors(&quot;lightblue&quot;, 16),main = &quot;generateMonochromaticColors&quot;) pal(complementColors(&quot;lightblue&quot;, 16),main = &quot;complementColors&quot;) pal(tetradicColors(&quot;lightblue&quot;,16),main = &quot;tetradicColors&quot;) pal(triadicColors(&quot;lightblue&quot;,16), main = &quot;triadicColors&quot;) 图 11.11: ColorPalette调色板 par(op) library(colorRamps) op &lt;- par(mfrow=c(6,1),mar=c(0,0,2,0)) n &lt;- 16 pal(matlab.like(n),main = &quot;matlab.like&quot;) pal(matlab.like2(n),main = &quot;matlab.like2&quot;) pal(blue2green2red(n),main = &quot;blue2green2red&quot;) pal(primary.colors(n), main = &quot;primary.colors&quot;) pal(ygobb(n), main = &quot;ygobb&quot;) pal(rgb.tables(n), main = &quot;rgb.tables&quot;) 图 11.12: colorRamps调色板 par(op) library(viridisLite) n &lt;- 16 op &lt;- par(mfrow=c(4,1),mar=c(0,0,2,0)) pal(magma(n, alpha = 1, begin = 0, end = 1)) pal(inferno(n, alpha = 1, begin = 0, end = 1)) pal(plasma(n, alpha = 1, begin = 0, end = 1)) pal(viridis(n, alpha = 1, begin = 0, end = 1)) 图 11.13: viridis调色板 par(op) op &lt;- par(mfrow=c(2,1),mar=c(0,3,2,0)) library(pals) pals::pal.bands(coolwarm, parula, ocean.haline, cubicl, kovesi.rainbow, ocean.phase, brewer.paired(12), stepped, main=&quot;Colormap suggestions&quot;) # Qualtitative pals::pal.bands(brewer.accent(8), brewer.dark2(8), brewer.paired(12), brewer.pastel1(9), brewer.pastel2(8), brewer.set1(9), brewer.set2(8), brewer.set3(10), labels=c(&quot;brewer.accent&quot;, &quot;brewer.dark2&quot;, &quot;brewer.paired&quot;, &quot;brewer.pastel1&quot;, &quot;brewer.pastel2&quot;, &quot;brewer.set1&quot;, &quot;brewer.set2&quot;, &quot;brewer.set3&quot;), main=&quot;Brewer qualitative&quot;) par(op) op &lt;- par(mfrow=c(2,1),mar=c(0,3,2,0)) # Sequential pals::pal.bands(brewer.blues, brewer.bugn, brewer.bupu, brewer.gnbu, brewer.greens, brewer.greys, brewer.oranges, brewer.orrd, brewer.pubu, brewer.pubugn, brewer.purd, brewer.purples, brewer.rdpu, brewer.reds, brewer.ylgn, brewer.ylgnbu, brewer.ylorbr, brewer.ylorrd, main=&quot;Brewer sequential&quot;) # Diverging pals::pal.bands(brewer.brbg, brewer.piyg, brewer.prgn, brewer.puor, brewer.rdbu, brewer.rdgy, brewer.rdylbu, brewer.rdylgn, brewer.spectral, main=&quot;Brewer diverging&quot;) par(op) colortools::pals() 图 11.14: colortools调色板1 colortools::wheel(colortools::pals(&quot;fish&quot;)[1], bg = &quot;white&quot;) 图 11.15: colortools调色板2 library(colorspace) ## a few useful diverging HCL palettes op &lt;- par(mar = c(0,0,2,0), mfrow = c(16, 2)) pal(diverge_hcl(16), main = &quot;diverging HCL palettes&quot;) pal(diverge_hcl(16, h = c(246, 40), c = 96, l = c(65, 90))) pal(diverge_hcl(16, h = c(130, 43), c = 100, l = c(70, 90))) pal(diverge_hcl(16, h = c(180, 70), c = 70, l = c(90, 95))) pal(diverge_hcl(16, h = c(180, 330), c = 59, l = c(75, 95))) pal(diverge_hcl(16, h = c(128, 330), c = 98, l = c(65, 90))) pal(diverge_hcl(16, h = c(255, 330), l = c(40, 90))) pal(diverge_hcl(16, c = 100, l = c(50, 90), power = 1)) ## sequential palettes pal(sequential_hcl(16), main= &quot;sequential palettes&quot;) pal(heat_hcl(16, h = c(0, -100), l = c(75, 40), c = c(40, 80), power = 1)) pal(terrain_hcl(16, c = c(65, 0), l = c(45, 95), power = c(1/3, 1.5))) pal(heat_hcl(16, c = c(80, 30), l = c(30, 90), power = c(1/5, 1.5))) ## compare base and colorspace palettes ## (in color and desaturated) ## diverging red-blue colors pal(diverge_hsv(16), main = &quot;diverging red-blue colors&quot;) pal(diverge_hcl(16, c = 100, l = c(50, 90))) pal(desaturate(diverge_hsv(16))) pal(desaturate(diverge_hcl(16, c = 100, l = c(50, 90)))) ## diverging cyan-magenta colors pal(cm.colors(16), main = &quot;diverging cyan-magenta colors&quot;) pal(diverge_hcl(16, h = c(180, 330), c = 59, l = c(75, 95))) pal(desaturate(cm.colors(16))) pal(desaturate(diverge_hcl(16, h = c(180, 330), c = 59, l = c(75, 95)))) ## heat colors pal(heat.colors(16), main = &quot;heat colors&quot;) pal(heat_hcl(16)) pal(desaturate(heat.colors(16))) pal(desaturate(heat_hcl(16))) ## terrain colors pal(terrain.colors(16), main = &quot;terrain colors&quot;) pal(terrain_hcl(16)) pal(desaturate(terrain.colors(16))) pal(desaturate(terrain_hcl(16))) pal(rainbow_hcl(16, start = 30, end = 300), main = &quot;dynamic&quot;) pal(rainbow_hcl(16, start = 60, end = 240), main = &quot;harmonic&quot;) pal(rainbow_hcl(16, start = 270, end = 150), main = &quot;cold&quot;) pal(rainbow_hcl(16, start = 90, end = -30), main = &quot;warm&quot;) 图 11.16: colorspace调色板 par(op) op &lt;- par(mar=c(0,4,0,0)) RColorBrewer::display.brewer.all() 图 11.17: RColorBrewer调色板 par(op) yarrr::piratepal(palette = &quot;all&quot;) 图 11.18: yarrr调色板 library(dichromat) op &lt;- par(mar=c(0,0,2,0),mfrow = c(9,2)) for(i in seq(17)){ pal(colorschemes[[i]], main = names(colorschemes)[i]) } par(op) 图 11.19: dichromat调色板适用于色盲人群 library(colormap) color_map &lt;- function(colorname, border = &quot;light gray&quot;){ col &lt;- colormap_pal(colormap=colorname)(25) n &lt;- length(col) plot(0, 0, type=&quot;n&quot;, xlim = c(0, 1), ylim = c(0, 1), axes = FALSE, xlab = &quot;&quot;, ylab = &quot;&quot;) rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border) text(.5,.5,labels = colorname) } op &lt;- par(mfrow = c(22,2),mar = c(0, 0, 1, 0)) invisible( lapply(unlist(colormaps),color_map) ) 图 11.20: colormap调色板 par(op) 参考文献 "],
["fonts.html", "第 12 章 字体 12.1 CJK 字体 12.2 showtext 12.3 xkcd 12.4 fontcm 12.5 tikzDevice 12.6 TikZ 和 PGF 12.7 matplotlib", " 第 12 章 字体 12.1 CJK 字体 windows 下，支持 pdf，cairo_pdf 和 svg 设备，如 cairo_pdf(file = &quot;cjk.pdf&quot;,width=3,height=1) library(grid) grid.text(&quot;\\u4F60\\u597D&quot;, y = 2 / 3, gp = gpar(fontfamily = &quot;CNS1&quot;) ) grid.text( &quot;is &#39;hello&#39; in (Traditional) Chinese&quot;, y = 1 / 3 ) 图 12.1: CJK 字体支持 参考文献 https://cran.r-project.org/doc/Rnews/Rnews_2006-2.pdf Non-Standard Fonts in PostScript and PDF Graphics 一节 grDevices 包提供了如下函数，用于 postscript 和 pdf 图形设备，嵌入字体借助了 Ghostscript 其下载地址 https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs923/gs923w64.exe 以及 PDF 阅读器 MuPDF https://www.mupdf.com/ postscriptFonts(...) pdfFonts(...) embedFonts 字体设置包括自定义中文字体、英文字体和数学公式。 启用showtext 包处理中文，在网页版文档中，png 图片中的字体会变很小 12.2 showtext showtext 包(Qiu 2015)可以调用系统字体，图12.2使用5号思源宋体，英文和数字使用 serif 字体。详细的使用文档可以看 showtext 的开发页面 library(ggplot2) ggplot(iris, aes(Sepal.Length, Sepal.Width)) + geom_point(aes(colour = Species)) + scale_colour_brewer(palette = &quot;Set1&quot;) + labs( title = &quot;鸢尾花数据的散点图&quot;, x = &quot;萼片长度&quot;, y = &quot;萼片宽度&quot;, colour = &quot;鸢尾花类别&quot; ) + theme_minimal(base_size = 10.54, base_family = &quot;source-han-serif-cn&quot;) + theme( legend.text = element_text(family = &quot;serif&quot;, size = 10.54), axis.text = element_text(family = &quot;serif&quot;, size = 10.54) ) 图 12.2: showtext包处理图里的中文 用 ggplot2 画个简单地图，地图数据在 mapdata 包 (Richard A. Becker and Ray Brownrigg. 2018)，如图 12.3 所示 library(maps) library(mapdata) FijiMap &lt;- map_data(&quot;worldHires&quot;, region = &quot;Fiji&quot;) ggplot(FijiMap, aes(x = long, y = lat)) + geom_map(map = FijiMap, aes(map_id = region), size = .2) + geom_point(data = quakes, aes(x = long, y = lat, colour = mag), pch = 16) + xlim(160, 195) + scale_colour_distiller(palette = &quot;Spectral&quot;) + scale_y_continuous(breaks = (-18:18) * 5) + coord_map(&quot;ortho&quot;, orientation = c(-10, 180, 0)) + labs(colour = &quot;震级&quot;, x = &quot;经度&quot;, y = &quot;纬度&quot;, title = &quot;斐济地震带&quot;) + theme_minimal() + theme( title = element_text(family = &quot;source-han-sans-cn&quot;), axis.title = element_text(family = &quot;source-han-serif-cn&quot;), legend.title = element_text(family = &quot;source-han-sans-cn&quot;), legend.position = c(1, 0), legend.justification = c(1, 0) ) 图 12.3: 斐济地震带 用 base plot 画地图，如图 12.4 所示 library(mapproj) data(unemp) data(county.fips) colors &lt;- c(&quot;#F1EEF6&quot;, &quot;#D4B9DA&quot;, &quot;#C994C7&quot;, &quot;#DF65B0&quot;, &quot;#DD1C77&quot;, &quot;#980043&quot;) unemp$colorBuckets &lt;- as.numeric(cut(unemp$unemp, c(0, 2, 4, 6, 8, 10, 100))) leg.txt &lt;- c(&quot;&lt;2%&quot;, &quot;2-4%&quot;, &quot;4-6%&quot;, &quot;6-8%&quot;, &quot;8-10%&quot;, &quot;&gt;10%&quot;) cnty.fips &lt;- county.fips$fips[match( map(&quot;county&quot;, plot = FALSE)$names, county.fips$polyname )] colorsmatched &lt;- unemp$colorBuckets[match(cnty.fips, unemp$fips)] par(mar = c(0, 0, 2, 0)) # draw map map(&quot;county&quot;, col = colors[colorsmatched], fill = TRUE, resolution = 0, lty = 0, projection = &quot;polyconic&quot; ) map(&quot;state&quot;, col = &quot;white&quot;, fill = FALSE, add = TRUE, lty = 1, lwd = 0.2, projection = &quot;polyconic&quot; ) title(&quot;unemployment by county, 2009&quot;) legend(&quot;top&quot;, leg.txt, horiz = TRUE, fill = colors) 图 12.4: 2009年美国各城镇失业率 12.3 xkcd 这篇文章主要使用 ggplot2 包(Wickham 2016)绘图，为了好玩我们还使用 xkcd 字体，先下载和加载 xkcd 包(Torres-Manzanera 2018)，它提供一个 gg 风格的图层theme_xkcd()，图 12.5 是一个简单使用 xkcd 字体的例子 library(extrafont) #&gt; Registering fonts with R library(xkcd) ggplot(aes(mpg, wt), data = mtcars) + geom_point() + theme_xkcd() 图 12.5: xkcd 风的图 安装手写体字体 sudo apt install fonts-humor-sans gsfonts library(ggplot2) library(extrafont) # font_import(pattern=&quot;[H/h]umor&quot;) ### Already have read in fonts (see previous answer on how to do this) # loadfonts() ### Set up the trial dataset data &lt;- NULL data$x &lt;- seq(1, 10, 0.1) data$y1 &lt;- sin(data$x) data$y2 &lt;- cos(data$x) data$xaxis &lt;- -1.5 data &lt;- as.data.frame(data) ### XKCD theme theme_xkcd &lt;- theme( panel.background = element_rect(fill = &quot;white&quot;), axis.ticks = element_line(colour = NA), panel.grid = element_line(colour = &quot;white&quot;), axis.text.y = element_text(colour = NA), axis.text.x = element_text(colour = &quot;black&quot;), text = element_text(size = 16, family = &quot;Humor Sans&quot;) ) ### Plot the chart ggplot(data = data, aes(x = x, y = y1)) + geom_line(aes(y = y2), position = &quot;jitter&quot;) + geom_line(colour = &quot;white&quot;, size = 3, position = &quot;jitter&quot;) + geom_line(colour = &quot;red&quot;, size = 1, position = &quot;jitter&quot;) + geom_text(family = &quot;Humor Sans&quot;, x = 6, y = -1.2, label = &quot;A SIN AND COS CURVE&quot;) + geom_line(aes(y = xaxis), position = position_jitter(h = 0.005), colour = &quot;black&quot;) + scale_x_continuous( breaks = c(2, 5, 6, 9), labels = c(&quot;YARD&quot;, &quot;STEPS&quot;, &quot;DOOR&quot;, &quot;INSIDE&quot;) ) + labs(x = &quot;&quot;, y = &quot;&quot;) + theme_xkcd 图 12.6: XKCD 漫画风 12.4 fontcm 安装 fontcm 包(Chang, Kryukov, and Murrell 2014)处理数学公式，下载 fontcm 包8 和相关字体，使用 fontcm 包，一个小 demo 如下，这里已经使用 cairo_pdf 设备保存图片了，如果用 pdf 设备保存会更加难看 library(fontcm) p &lt;- qplot(c(1, 5), c(1, 5)) + xlab(&quot;Made with CM fonts&quot;) + ylab(&quot;Made with CM fonts&quot;) + ggtitle(&quot;Made with CM fonts&quot;) # 公式 eq &lt;- &quot;italic(sum(frac(1, n*&#39;!&#39;), n==0, infinity) == lim(bgroup(&#39;(&#39;, 1 + frac(1, n), &#39;)&#39;)^n, n %-&gt;% infinity))&quot; # 默认字体 p1 &lt;- p + annotate(&quot;text&quot;, x = 3, y = 3, parse = TRUE, label = eq) # fig 1 # 使用 CM Roman 字体 p2 &lt;- p + annotate(&quot;text&quot;, x = 3, y = 3, parse = TRUE, family = &quot;CM Roman&quot;, label = eq ) + theme( text = element_text(size = 16, family = &quot;CM Roman&quot;), axis.title.x = element_text(face = &quot;italic&quot;), axis.title.y = element_text(face = &quot;bold&quot;) ) library(gridExtra) grid.arrange(p1,p2, nrow = 1, ncol = 2) 图 12.7: fontcm 处理数学公式 使用 ghostscript 对 pdf 设备保存的图形嵌入数学字体（此嵌入字体的方法对 cairo_pdf 保存的图形无效），最终效果如图 12.8 所示， pdf(file = &#39;figures/ggplot_cm.pdf&#39;,width = 8,height = 4) grid.arrange(p1,p2, nrow = 1, ncol = 2) dev.off() # 嵌入字体 extrafont::embed_fonts(&quot;figures/ggplot_cm.pdf&quot;, outfile = &quot;figures/ggplot_cm_embed.pdf&quot;) 图 12.8: fontcm 处理数学公式 12.5 tikzDevice 先测试一下 tikzDevice::tikzTest() #&gt; #&gt; Active compiler: #&gt; //home/travis/.TinyTeX/bin/x86_64-linux/xelatex #&gt; XeTeX 3.14159265-2.6-0.99999 (TeX Live 2018) #&gt; kpathsea version 6.3.0 #&gt; Measuring dimensions of: A #&gt; Running command: &#39;//home/travis/.TinyTeX/bin/x86_64-linux/xelatex&#39; -interaction=batchmode -halt-on-error -output-directory &#39;/tmp/Rtmpexw1wY/tikzDevice4dec714c91c1&#39; &#39;/tmp/Rtmpexw1wY/tikzDevice4dec714c91c1/tikzStringWidthCalc.tex&#39; #&gt; [1] 7.5 tikz 源于 LaTeX 宏包，在 R 语言绘图的世界里，对基础图形有很好的支持，如图 12.9 所示，坐标轴标签，标题，图例等位置都支持数学公式，既然含有数学公式，就得设置 dev = 'tikz' 和 fig.ext = 'tex'，并且只产生 PDF 格式图片，除非研究一个钩子（见 common.R 文件），遇到这种情况再将 PDF 转化为 PNG 格式 x &lt;- rnorm(10) y &lt;- x + rnorm(5, sd = 0.25) model &lt;- lm(y ~ x) rsq &lt;- summary(model)$r.squared rsq &lt;- signif(rsq, 4) plot(x, y, main = &quot;Hello \\\\LaTeX!&quot;, xlab = &quot;$x$&quot;, ylab = &quot;$y$&quot;, sub = &quot;$\\\\mathcal{N}(\\\\mathbf{x};\\\\mu,\\\\Sigma)$&quot;) abline(model, col = &quot;red&quot;) mtext(paste(&quot;Linear model: $R^{2}=&quot;, rsq, &quot;$&quot;), line = 0.5) legend(&quot;bottomright&quot;, legend = paste0(&quot;$y = &quot;, round(coef(model)[2], 3), &quot;x +&quot;, round(coef(model)[1], 3), &quot;$&quot; ), bty = &quot;n&quot;) 或者单独保存成 pdf 图片和 png 图片，然后插入 图 12.9: tikz 之线性回归 再把代码贴上 cat(readLines(&quot;code/tikz-linear-regression.R&quot;, encoding = &quot;UTF-8&quot;), sep = &quot;\\n&quot;) #&gt; x &lt;- rnorm(10) #&gt; y &lt;- x + rnorm(5, sd = 0.25) #&gt; model &lt;- lm(y ~ x) #&gt; rsq &lt;- summary(model)$r.squared #&gt; rsq &lt;- signif(rsq, 4) #&gt; plot(x, y, main = &quot;Hello \\\\LaTeX!&quot;, xlab = &quot;$x$&quot;, ylab = &quot;$y$&quot;, #&gt; sub = &quot;$\\\\mathcal{N}(\\\\mathbf{x};\\\\mu,\\\\Sigma)$&quot;) #&gt; abline(model, col = &quot;red&quot;) #&gt; mtext(paste(&quot;Linear model: $R^{2}=&quot;, rsq, &quot;$&quot;), line = 0.5) #&gt; legend(&quot;bottomright&quot;, legend = paste0(&quot;$y = &quot;, #&gt; round(coef(model)[2], 3), #&gt; &quot;x +&quot;, #&gt; round(coef(model)[1], 3), #&gt; &quot;$&quot; #&gt; ), #&gt; bty = &quot;n&quot;) 虽然复杂图片也可直接用 tikz 制作但是，尺寸等细节不好调整（我还没找到合适的方法），比较合适的做法可能是，独立制作图，然后作为图片插入，以一个颇具复杂度的图片为例，如图 12.10 所示 cat(readLines(&quot;code/tikz-persp-3d.R&quot;, encoding = &quot;UTF-8&quot;), sep = &quot;\\n&quot;) #&gt; # 代码来自 http://www.ejwagenmakers.com/misc/Plotting_3d_in_R.pdf #&gt; # 3-D plots #&gt; mu1 &lt;- 0 # setting the expected value of x1 #&gt; mu2 &lt;- 0 # setting the expected value of x2 #&gt; s11 &lt;- 10 # setting the variance of x1 #&gt; s12 &lt;- 15 # setting the covariance between x1 and x2 #&gt; s22 &lt;- 10 # setting the variance of x2 #&gt; rho &lt;- 0.5 # setting the correlation coefficient between x1 and x2 #&gt; x1 &lt;- seq(-10, 10, length = 41) # generating the vector series x1 #&gt; x2 &lt;- x1 # copying x1 to x2 #&gt; f &lt;- function(x1, x2) { #&gt; term1 &lt;- 1 / (2 * pi * sqrt(s11 * s22 * (1 - rho^2))) #&gt; term2 &lt;- -1 / (2 * (1 - rho^2)) #&gt; term3 &lt;- (x1 - mu1)^2 / s11 #&gt; term4 &lt;- (x2 - mu2)^2 / s22 #&gt; term5 &lt;- -2 * rho * ((x1 - mu1) * (x2 - mu2)) / (sqrt(s11) * sqrt(s22)) #&gt; term1 * exp(term2 * (term3 + term4 - term5)) #&gt; } # setting up the function of the multivariate normal density #&gt; z &lt;- outer(x1, x2, f) # calculating the density values #&gt; nrz &lt;- nrow(z) #&gt; ncz &lt;- ncol(z) #&gt; # Create a function interpolating colors in the range of specified colors #&gt; # jet.colors &lt;- colorRampPalette( c(&quot;blue&quot;, &quot;green&quot;) ) #&gt; # Generate the desired number of colors from this palette #&gt; nbcol &lt;- 100 #&gt; # color &lt;- jet.colors(nbcol) #&gt; color &lt;- viridisLite::viridis(100) #&gt; # Compute the z-value at the facet centres #&gt; zfacet &lt;- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz] #&gt; # Recode facet z-values into color indices #&gt; facetcol &lt;- cut(zfacet, nbcol) #&gt; # persp 坐标轴标签不支持表达式 ?persp #&gt; #&gt; # 使用 tikzDevice 打造出版级的效果图 #&gt; # library(tikzDevice) #&gt; # tf &lt;- file.path(getwd(), &quot;figures/binormal.tex&quot;) #&gt; # tikz(tf, width = 6, height = 5.5, pointsize = 30, standAlone = TRUE) #&gt; op &lt;- par(mar = c(2, 3, 3, 0.5)) #&gt; persp(x1, x2, z, #&gt; xlab = &quot;$x_{1}$&quot;, #&gt; ylab = &quot;$x_{2}$&quot;, #&gt; zlab = &quot;$f(\\\\mathsf{x})$&quot;, #&gt; main = &quot;Two dimensional Normal Distribution&quot;, #&gt; col = color[facetcol], border = NA, theta = 30, phi = 20, #&gt; r = 50, d = 0.1, expand = 0.5, ltheta = 90, lphi = 180, #&gt; shade = 0.1, ticktype = &quot;detailed&quot;, nticks = 5, box = TRUE #&gt; ) # produces the 3-D plot #&gt; # adding a text line to the graph #&gt; mtext(&quot;$\\\\mu_1 = 0,\\\\mu_2 = 0,\\\\sigma_{11} = 10,\\\\sigma_{22} = 10,\\\\sigma_{12} = 15, \\\\rho = 0.5$&quot;, side = 3) #&gt; mtext(&quot;$f(\\\\mathsf{x}) = \\\\frac{1}{2\\\\pi\\\\sqrt{\\\\sigma_{11}\\\\sigma_{22}(1-\\\\rho^2)}}\\\\exp\\\\big\\\\{-\\\\frac{1}{2(1-\\\\rho^2)}[\\\\frac{(x_1 - \\\\mu_1)^2}{\\\\sigma_{11}} - 2\\\\rho\\\\frac{(x_1 - \\\\mu_1)(x_2 - \\\\mu_2)}{\\\\sqrt{\\\\sigma_{11}}\\\\sqrt{\\\\sigma_{22}}} + \\\\frac{(x_2 - \\\\mu_2)^2}{\\\\sigma_{22}}]\\\\big\\\\}$&quot;, side = 1) #&gt; par(op) #&gt; # dev.off() #&gt; # tinytex::latexmk(file = &quot;figures/binormal.tex&quot;) 此外还有一个重要原因，tikz 图形绘制起来比较慢，尤其是线条密集型的图片，这样过于耗时，放在 travis 上编译不合适。如图 12.10 图 12.10: tikz 之复杂公式 12.6 TikZ 和 PGF 如图所示，模板存放在 code/tikz/tikz2pdf.tex names(knitr::knit_engines$get()) #&gt; [1] &quot;awk&quot; &quot;bash&quot; &quot;coffee&quot; &quot;gawk&quot; &quot;groovy&quot; #&gt; [6] &quot;haskell&quot; &quot;lein&quot; &quot;mysql&quot; &quot;node&quot; &quot;octave&quot; #&gt; [11] &quot;perl&quot; &quot;psql&quot; &quot;Rscript&quot; &quot;ruby&quot; &quot;sas&quot; #&gt; [16] &quot;scala&quot; &quot;sed&quot; &quot;sh&quot; &quot;stata&quot; &quot;zsh&quot; #&gt; [21] &quot;highlight&quot; &quot;Rcpp&quot; &quot;tikz&quot; &quot;dot&quot; &quot;c&quot; #&gt; [26] &quot;fortran&quot; &quot;fortran95&quot; &quot;asy&quot; &quot;cat&quot; &quot;asis&quot; #&gt; [31] &quot;stan&quot; &quot;block&quot; &quot;block2&quot; &quot;js&quot; &quot;css&quot; #&gt; [36] &quot;sql&quot; &quot;go&quot; &quot;python&quot; &quot;julia&quot; &quot;theorem&quot; #&gt; [41] &quot;lemma&quot; &quot;definition&quot; &quot;corollary&quot; &quot;proposition&quot; &quot;example&quot; #&gt; [46] &quot;exercise&quot; &quot;proof&quot; &quot;remark&quot; &quot;solution&quot; \\begin{tikzpicture}[scale=.7] \\draw [fill=gray!30,very thick] (0,-1) rectangle (5,1); \\draw [very thick] (5, 0) -- (13,0); \\node [below] at (2,-1) {\\large Hello}; \\node [below, align=center] at (0,-1) {\\large Two\\\\ lines}; \\end{tikzpicture} 一幅纯 tikz 代码绘制的图形，代码如下 cat(readLines(&quot;code/tikz/mini-demo.tex&quot;, encoding = &quot;UTF-8&quot;), sep = &quot;\\n&quot;) #&gt; \\documentclass[tikz]{standalone} #&gt; \\usepackage{tikz} #&gt; \\begin{document} #&gt; \\begin{tikzpicture}[domain=0:4] #&gt; \\draw[very thin,color=gray] (-0.1,-1.1) grid (3.9,3.9); #&gt; \\draw[-&gt;] (-0.2,0) -- (4.2,0) node[right] {$x$}; #&gt; \\draw[-&gt;] (0,-1.2) -- (0,4.2) node[above] {$f(x)$}; #&gt; \\draw[color=red] plot (\\x,\\x) node[right] {$f(x) =x$}; #&gt; % \\x r 表示弧度 #&gt; \\draw[color=blue] plot (\\x,{cos(\\x r)}) node[right] {$f(x) = \\cos x$}; #&gt; \\draw[color=green] plot (\\x,{(\\x r)^0.1*sin(\\x r)}) node[right] {$f(x) = x^{\\frac{1}{10}} \\sin x$}; #&gt; \\draw[color=orange] plot (\\x,{0.05*exp(\\x)}) node[right] {$f(x) = \\frac{1}{20} \\mathrm e^x$}; #&gt; \\end{tikzpicture} #&gt; \\end{document} 图 12.11: 一幅迷你 tikz 图形 par(mar = c(4.5, 4, .1, .1)) hist(rnorm(1000), main=&#39;&#39;, xlab=&#39;$x$ (how the fonts look like here?)&#39;, ylab=&#39;$\\\\hat{f}(x) = \\\\frac{1}{nh}\\\\sum_{i=1}^n \\\\cdots$&#39;) PGF 包含 TikZ 其它图形，获取 tex 文件， dvisvgm 将 DVI 格式图片转化为 SVG 格式 x &lt;- rnorm(10) y &lt;- x + rnorm(5, sd = 0.25) model &lt;- lm(y ~ x) rsq &lt;- summary(model)$r.squared rsq &lt;- signif(rsq, 4) plot(x, y, main = &quot;Hello \\\\LaTeX!&quot;, xlab = &quot;$x$&quot;, ylab = &quot;$y$&quot;) abline(model, col = &quot;red&quot;) mtext(paste(&quot;Linear model: $R^{2}=&quot;, rsq, &quot;$&quot;), line = 0.5) legend(&quot;bottomright&quot;, legend = paste(&quot;$y = &quot;, round(coef(model)[2], 3), &quot;x +&quot;, round(coef(model)[1], 3), &quot;$&quot;, sep = &quot;&quot; ), bty = &quot;n&quot;) ImageMagick 的 convert 工具将 PDF 格式图片转化为 PNG 格式 图 12.12: 线性回归 PDF 转 PNG 安装 dvisvgm 的命令 tlmgr install dvisvgm，安装 ImageMagick 的命令 sudo apt install imagemagick 12.7 matplotlib 先安装 matplotlib 模块 sudo apt install python3-matplotlib from __future__ import unicode_literals import numpy as np import matplotlib matplotlib.rcParams[&#39;text.usetex&#39;] = True matplotlib.rcParams[&#39;text.latex.unicode&#39;] = True import matplotlib.pyplot as plt plt.switch_backend(&#39;agg&#39;) # Very Important in R Markdown t = np.linspace(0.0, 1.0, 100) s = np.cos(4 * np.pi * t) + 2 fig, ax = plt.subplots(figsize=(6, 4), tight_layout=True) ax.plot(t, s) ax.set_xlabel(r&#39;\\textbf{time (s)}&#39;) # ax.set_ylabel(r&#39;\\textit{Velocity}(\\N{DEGREE SIGN}/sec)&#39;, fontsize=16) ax.set_ylabel(r&#39;\\textit{Velocity}($^{\\circ}$/sec)&#39;, fontsize=16) ax.set_title(r&#39;\\TeX\\ is Number $\\displaystyle\\sum_{n=1}^\\infty&#39; r&#39;\\frac{-e^{i\\pi}}{2^n}$!&#39;, fontsize=16, color=&#39;r&#39;) plt.show() 安装基本的包 tlmgr install psnfss type1cm ucs tex4ht ncntrsbk pgf xcolor helvetic preview dvisvgm dvipng dvips standalone subfig tocloft tocbibind sourcecodepro alegreya ctex fandol 参考文献 "],
["animotion.html", "第 13 章 动画 13.1 JS 动画 13.2 svg 动画 13.3 mapmate", " 第 13 章 动画 13.1 JS 动画 13.2 svg 动画 svgViewR https://aaronolsen.github.io/tutorials/visualization3d.html 13.3 mapmate devtools::install_github(&quot;leonawicz/mapmate&quot;) rgl 真三维 "],
["optimation.html", "第 14 章 数值优化 14.1 测试函数", " 第 14 章 数值优化 14.1 测试函数 \\[f(x,y) = 3*(1-x)*\\mathrm{e}^{-x^2 - (y+1)^2} - 10*(\\frac{x}{5} - x^3 - y^5)*\\mathrm{e}^{-x^2-y^2} - \\frac{1}{3}*\\mathrm{e}^{-(x+1)^2-y^2}\\] 多元函数求导 符号微分，表达式微分 符号求导，表达式求导 peaks_fun &lt;- expression(3*(1-x)*exp^(-x^2 - (y+1)^2) - 10*(x/5 - x^3 - y^5)*exp^(-x^2-y^2) -1/3*exp^(-(x+1)^2-y^2)) D(peaks_fun, &quot;x&quot;) #&gt; -(3 * (1 - x) * (exp^(-x^2 - (y + 1)^2) * (log(exp) * (2 * x))) + #&gt; 3 * exp^(-x^2 - (y + 1)^2) + (10 * (1/5 - 3 * x^2) * exp^(-x^2 - #&gt; y^2) - 10 * (x/5 - x^3 - y^5) * (exp^(-x^2 - y^2) * (log(exp) * #&gt; (2 * x)))) - 1/3 * (exp^(-(x + 1)^2 - y^2) * (log(exp) * #&gt; (2 * (x + 1))))) D(peaks_fun, &quot;y&quot;) #&gt; -(3 * (1 - x) * (exp^(-x^2 - (y + 1)^2) * (log(exp) * (2 * (y + #&gt; 1)))) - (10 * (x/5 - x^3 - y^5) * (exp^(-x^2 - y^2) * (log(exp) * #&gt; (2 * y))) + 10 * (5 * y^4) * exp^(-x^2 - y^2)) - 1/3 * (exp^(-(x + #&gt; 1)^2 - y^2) * (log(exp) * (2 * y)))) An R package for optimization using genetic algorithms 复合函数求极值 f &lt;- function(y){ g &lt;- function(x){ integrate(function(t){ -sqrt(t)*exp(-t^2) },lower = 0,upper = x)$value } integrate(function(s){ g(s)*exp(-s) },lower = 0,upper = y)$value } # optimize(f,c(0,10),maximum = FALSE) # optimize(f,c(0,10),maximum = FALSE) x &lt;- seq(from=0,to=100,length.out = 100) fval &lt;- rep(0,100) for(i in seq(100)){ fval[i] &lt;- f(x[i]) } plot(fval~x) integrate(function(t){-sqrt(t)*exp(-t^2)},lower = 0,upper = 20)$value "],
["section-15.html", "第 15 章 随机模拟 15.1 随机数 15.2 随机过程 15.3 分布式", " 第 15 章 随机模拟 15.1 随机数 产生重复的随机数，octave 实现，随机数生成的详细介绍请看统计之都文章 随机数生成及其在统计模拟中的应用 %% copy from https://stackoverflow.com/questions/13735096/python-vs-octave-random-generator function state = mtstate(seed) state = uint32(zeros(625,1)); state(1) = uint32(seed); for i=1:623, tmp = uint64(1812433253)*uint64(bitxor(state(i),bitshift(state(i),-30)))+i; state(i+1) = uint32(bitand(tmp,uint64(intmax(&#39;uint32&#39;)))); end state(625) = 1; end rand(&#39;state&#39;,mtstate(4)); rand(1,5) rand(&#39;state&#39;,mtstate(4)); rand(1,5) #&gt; ans = #&gt; #&gt; 0.96703 0.54723 0.97268 0.71482 0.69773 #&gt; #&gt; ans = #&gt; #&gt; 0.96703 0.54723 0.97268 0.71482 0.69773 dqrng: Fast Pseudo Random Number Generators 15.2 随机过程 15.2.1 随机游走 15.2.2 遍历定理 15.2.3 M-H 算法 15.2.4 Gibbs 算法 15.2.5 HMC 算法 汉密尔顿蒙特卡罗算法 15.3 分布式 15.3.1 Rmpi 安装配置 http://www.stats.uwo.ca/faculty/yu/Rmpi/ 15.3.2 Rhpc https://prs.ism.ac.jp/~nakama/Rhpc/ Function of apply style using ‘MPI’ provides better ‘HPC’ environment on R. And this package supports long vector, can deal with slightly big data. "],
["bayes.html", "第 16 章 贝叶斯计算 16.1 BUGS 软件 16.2 Stan 框架", " 第 16 章 贝叶斯计算 从 WinBUGS 到 OpenBUGS，从 JAGS 到 Stan，BUGS 的发展从未停止过，Stan9 是一个统计建模和高性能统计计算平台。 16.1 BUGS 软件 最大后验估计，贝叶斯分层模型 16.2 Stan 框架 安装 git clone --depth=1 --branch=develop --recursive git@github.com:stan-dev/rstan.git # 若中间断了，则执行下一行 git submodule update --init --recursive # 安装新版 StanHeaders path_rstan &lt;- &quot;/home/xyhuang/softwares/rstan/&quot; devtools::install(file.path(path_rstan, &quot;StanHeaders&quot;), args = &quot;--preclean&quot;) cd rstan # rstan 包目录 make build # build R包 make check # 检查R包 make install # 安装R包 LOO for non-factorized normal models Playing with negative binomial multilevel models in Stan An Introduction to Greta tensoflow and stan 16.2.1 PyStan 接口 # 整合 Python 语言到 R Mrakdown import pystan import numpy as np import matplotlib.pyplot as plt schools_code = &quot;&quot;&quot; data { int&lt;lower=0&gt; J; // number of schools real y[J]; // estimated treatment effects real&lt;lower=0&gt; sigma[J]; // s.e. of effect estimates } parameters { real mu; real&lt;lower=0&gt; tau; real eta[J]; } transformed parameters { real theta[J]; for (j in 1:J) theta[j] = mu + tau * eta[j]; } model { eta ~ normal(0, 1); y ~ normal(theta, sigma); } &quot;&quot;&quot; schools_dat = {&#39;J&#39;: 8, &#39;y&#39;: [28, 8, -3, 7, -1, 1, 18, 12], &#39;sigma&#39;: [15, 10, 16, 11, 9, 11, 10, 18]} sm = pystan.StanModel(model_code = schools_code) fit = sm.sampling(data = schools_dat, iter = 1000, chains = 4) print(fit) eta = fit.extract(permuted=True)[&#39;eta&#39;] np.mean(eta, axis=0) ## if matplotlib is installed (optional, not required), a visual summary and ## traceplot are available # fit.plot() # plt.show() 16.2.2 RStan 接口 Stan 提供的R语言接口 rstan 包 (Guo, Gabry, and Goodrich 2018) 及其扩展 StanHeaders 包 (Goodrich et al. 2018) 、bayesplot包 (???) 、brms 包 (Bürkner 2017)、 rstanarm 包 (???)以及 rstan 的 wiki10 及其在空间广义线性混合效应模型的参数估计和预测中的应用。 加载 rstan,如果你的电脑配置有多核处理器，内存也充足，那么可以考虑使用并行方式去估计你的模型参数， library(rstan) rstan_options(auto_write = TRUE) options(mc.cores = parallel::detectCores()) schools_dat &lt;- list(J = 8, y = c(28, 8, -3, 7, -1, 1, 18, 12), sigma = c(15, 10, 16, 11, 9, 11, 10, 18)) fit &lt;- stan(file = &#39;data/8schools.stan&#39;, data = schools_dat, iter = 1000, chains = 4) print(fit) plot(fit) pairs(fit, pars = c(&quot;mu&quot;, &quot;tau&quot;, &quot;lp__&quot;)) la &lt;- extract(fit, permuted = TRUE) # return a list of arrays mu &lt;- la$mu ### return an array of three dimensions: iterations, chains, parameters a &lt;- extract(fit, permuted = FALSE) ### use S3 functions as.array (or as.matrix) on stanfit objects a2 &lt;- as.array(fit) m &lt;- as.matrix(fit) print(fit, digits = 1) schools_dat &lt;- read_rdump(&#39;data/8schools.rdump&#39;) source(&#39;data/8schools.rdump&#39;) fit &lt;- stan(file = &#39;data/8schools.stan&#39;, iter = 1000, chains = 4) Bayesian Data Analysis https://github.com/avehtari/BDA_R_demos Bayesian Data Analysis, 3rd ed by Gelman, Carlin, Stern, Dunson, Vehtari, and Rubin (BDA3). An Introduction to State Space Time Series Analysis https://github.com/sinhrks/stan-statespace Stan models for state space time series Draft introduction to probability and inference aimed at the Stan manual. https://github.com/betanalpha/stan_intro Bayesian Modeling using Stan Define Stan models using glmer-style (lme4) formulas https://github.com/rmcelreath/glmer2stan Examples of working and non-working models State space models (dynamic linear models, hidden Markov models) implemented in Stan https://github.com/jrnold/ssmodels-in-stan State Space Models in Stan https://jrnold.github.io/ssmodels-in-stan/ Conditional autoregressive models in Stan https://github.com/mbjoseph/CARstan Implementation of B-Splines in Stan https://github.com/milkha/Splines_in_Stan 相依对数正态模型 https://magesblog.com/post/correlated-lognormal-chain-ladder-model/ 参考文献 "],
["r-inla.html", "第 17 章 近似推断 17.1 高斯-马尔科夫随机场 17.2 贝叶斯近似推断", " 第 17 章 近似推断 INLA 材料 A gentle INLA tutorial https://www.precision-analytics.ca/blog-1/inla A Gentle Stan vs. INLA Comparison http://www.martinmodrak.cz/2018/02/02/a-gentle-stan-vs.-inla-comparison/ 探讨算法比较 http://discourse.mc-stan.org/t/blog-a-gentle-stan-to-inla-comparison/3205 GPstuff: Gaussian process models for Bayesian analysis http://research.cs.aalto.fi/pml/software/gpstuff/ GPstuff: 高斯过程模型与空间数据分析工具箱(Vanhatalo et al. 2013) 适用于 Matlab/Octave 和 R 17.1 高斯-马尔科夫随机场 17.2 贝叶斯近似推断 随机偏微分方程，高维积分，拉普拉斯近似 参考文献 "],
["spatial.html", "第 18 章 空间数据 18.1 分析与可视化", " 第 18 章 空间数据 18.1 分析与可视化 Here is a review of existing methods. sf library(sf) Intro to Geospatial Data with R http://www.datacarpentry.org/r-raster-vector-geospatial/ PrevMap library(PrevMap) 案例 library(HSAR) data(Beijingdistricts) library(spdep) plot(Beijingdistricts,border=&quot;light grey&quot;) # extract the area of each district library(rgeos) library(classInt) library(RColorBrewer) Beijingdistricts$geo.area &lt;- gArea(Beijingdistricts,byid=TRUE) / 1000000 x &lt;- Beijingdistricts$geo.area breaks &lt;- classIntervals(x,4,&quot;fisher&quot;)$brks groups &lt;- cut(x,breaks,include.lowest=TRUE,labels=FALSE) palette &lt;- brewer.pal(4, &quot;Blues&quot;) plot(Beijingdistricts,col=palette[groups],border=&quot;grey&quot;) # extract the district level spatial weights matrix nb.list &lt;- poly2nb(Beijingdistricts,queen=FALSE) mat.list &lt;- nb2mat(nb.list,style=&quot;W&quot;) M &lt;- as(mat.list,&quot;dgCMatrix&quot;) 空间数据分析 to think about, not sure if needed but then this would be a good place to point out why our book might have advantages over other books. Compare with: - Bivand, R., Pebesma, E., Gomez-Rubio, V. (2013): Applied spatial data analysis with R. - Blangiardo, M. &amp; Cameletti, M. (2015): Spatial and spatio-temporal Bayesian models with R - INLA. - Brunsdon, C. &amp; Comber, L. (2015): An introduction to R for spatial analysis and mapping. - Dorman, M. (2014): Learning R for geospatial analysis. - Hijmans, R. (2016): Spatial data analysis and modeling with R. http://rspatial.org/intr/index.html (haven’t read it but might be more suitable for beginners, however, it does not consider sf; additionally, it provides more code than text, and hence, probably less explanations than our book) - Quiang, S. (2016): Environmental and Ecological Statistics with R (not really a competitor, I have ordered a copy, this book is really about modeling, and I would rather prefer the Zuur et al. books over it) - Wegmann, M., Leutner, B., Dech, S. (2016): Remote Sensing and GIS for ecologists: Using Open Source Software. - Zuur, A., Ieno, E., Saveliev, A. (2017): Beginner’s guide to spatial, temporal and spatial-temporal ecological data analysis with R-INLA. Put the competing books into categories, e.g., introduction to spatial analysis (Brundsdon, Dorman, Hijmans), advanced spatial analysis (Bivand), topical spatial analysis (Quiang, Wegmann), (mainly) spatial modeling (Bivand, Blangiardo, Hijmans, Quiang, Zuur). Point out where our book fits in and which gap it is filling -&gt; somewhere between advanced (but not that hard) and spatial modeling with a broad range of topics (not just one like ecology). We try to address a broad audiecence with an interest in spatial data, and how things can be get done, not just theoretically but in an applied way. On the other hand, we embed the shown methods into the bigger field of GIScience, provide context and refer to further literature for the interested reader. "],
["network.html", "第 19 章 网络数据 19.1 分析与可视化 19.2 gephi", " 第 19 章 网络数据 We describe our methods in this chapter. 19.1 分析与可视化 http://www.htmlwidgets.org/ R 与 JavaScript https://github.com/rich-iannone/DiagrammeR 分析 https://github.com/igraph/python-igraph 与 https://github.com/igraph/rigraph 19.2 gephi "],
["glm.html", "第 20 章 广义线性模型 20.1 线性模型 20.2 参数估计 20.3 高维问题", " 第 20 章 广义线性模型 通过先回顾线性模型相关知识，过渡到广义线性模型 20.1 线性模型 20.1.1 参数估计 20.1.2 最小二乘 20.1.3 最大似然 20.2 参数估计 20.2.1 最小二乘估计 glm 20.2.2 广义最小二乘估计 gls 20.2.3 最大似然估计 20.3 高维问题 Statistical Inference and Sure Independence Screening via Ball Statistics Ball SIS: Sure Independence Screening SIS "],
["mixed-model.html", "第 21 章 混合效应模型 21.1 方差分析 21.2 线性混合效应模型 21.3 广义线性混合效应模型 21.4 空间广义线性混合效应模型 21.5 参数估计 21.6 高维问题", " 第 21 章 混合效应模型 21.1 方差分析 估计 21.2 线性混合效应模型 lme4: An R package for fitting and analyzing linear, nonlinear and generalized linear mixed models. github http://lme4.r-forge.r-project.org/ 21.3 广义线性混合效应模型 材料 fitting mixed models with (temporal) correlations in R 时间相依的结构的 GLMMs及其实现 作者 Github 主页 https://bbolker.github.io/mixedmodels-misc/notes/corr_braindump.html Broadening Your Statistical Horizons: Generalized Linear Models and Multilevel Models https://bookdown.org/roback/bookdown-bysh/ 21.4 空间广义线性混合效应模型 21.5 参数估计 21.5.1 限制极大似然估计 21.5.2 profile 似然估计 21.5.3 贝叶斯估计 21.6 高维问题 "],
["gam.html", "第 22 章 广义可加模型 22.1 一般广义可加模型 22.2 广义可加混合效应模型 22.3 高维问题", " 第 22 章 广义可加模型 22.1 一般广义可加模型 22.2 广义可加混合效应模型 Repo for tutorial/paper on mixed-effect GAMs (General Additive Models with Mixed-Effect Smooths) https://github.com/noamross/mixed-effect-gams 22.3 高维问题 "],
["command-line.html", "A 命令行 A.1 软件包管理器 A.2 LaTeX 包管理器 A.3 查看文件 A.4 挂载共享文件夹 A.5 tar 压缩文件 A.6 cp 到共享文件夹 A.7 文件操作 A.8 Git 命令 A.9 安装软件 A.10 Ubuntu 14.04.5 A.11 CentOS 7/ TinyTeX A.12 安装 Fedora 27 A.13 安装 R 包 A.14 Docker A.15 机器学习 or 深度学习 A.16 自然语言处理 A.17 书单 A.18 主页 A.19 博客", " A 命令行 A.1 软件包管理器 A.1.1 添加和删除 PPA sudo add-apt-repository -y ppa:opencpu/imagemagick sudo add-apt-repository --remove ppa:opencpu/imagemagick A.1.2 清理修复软件包 sudo aptitude install build-essential # 修复依赖问题 sudo apt update # 更新资源列表 sudo apt-get upgrade # 更新软件包 apt list --upgradable # 列出可升级的包 sudo apt clean sudo apt autoremove sudo apt-get autoclean # 删除已卸的软件的备份 sudo apt-get clean # 删除已装或已卸的软件的备份 A.1.3 搜索查询安装 # 搜索 apt-cache search octave | grep octave # 查询 apt show octave # 安装 sudo apt install octave sudo apt-get install lsb-core lsb_release -a A.2 LaTeX 包管理器 LaTeX 包管理器说的其实是 tlmgr (TeXLive Manager) base::system(&#39;xelatex --version&#39;, intern = TRUE) #&gt; [1] &quot;XeTeX 3.14159265-2.6-0.99999 (TeX Live 2018)&quot; #&gt; [2] &quot;kpathsea version 6.3.0&quot; #&gt; [3] &quot;Copyright 2018 SIL International, Jonathan Kew and Khaled Hosny.&quot; #&gt; [4] &quot;There is NO warranty. Redistribution of this software is&quot; #&gt; [5] &quot;covered by the terms of both the XeTeX copyright and&quot; #&gt; [6] &quot;the Lesser GNU General Public License.&quot; #&gt; [7] &quot;For more information about these matters, see the file&quot; #&gt; [8] &quot;named COPYING and the XeTeX source.&quot; #&gt; [9] &quot;Primary author of XeTeX: Jonathan Kew.&quot; #&gt; [10] &quot;Compiled with ICU version 61.1; using 61.1&quot; #&gt; [11] &quot;Compiled with zlib version 1.2.11; using 1.2.11&quot; #&gt; [12] &quot;Compiled with FreeType2 version 2.9.0; using 2.9.0&quot; #&gt; [13] &quot;Compiled with Graphite2 version 1.3.11; using 1.3.11&quot; #&gt; [14] &quot;Compiled with HarfBuzz version 1.7.6; using 1.7.6&quot; #&gt; [15] &quot;Compiled with libpng version 1.6.34; using 1.6.34&quot; #&gt; [16] &quot;Compiled with poppler version 0.63.0&quot; #&gt; [17] &quot;Compiled with fontconfig version 2.11.0; using 2.11.0&quot; base::system(&#39;tlmgr info --list --only-installed --data name,size&#39;, intern = TRUE) #&gt; [1] &quot;alegreya,52436992&quot; #&gt; [2] &quot;amscls,323584&quot; #&gt; [3] &quot;amsfonts,7696384&quot; #&gt; [4] &quot;amsmath,196608&quot; #&gt; [5] &quot;babel,3346432&quot; #&gt; [6] &quot;bibtex,208896&quot; #&gt; [7] &quot;bibtex.x86_64-linux,167936&quot; #&gt; [8] &quot;booktabs,8192&quot; #&gt; [9] &quot;caption,217088&quot; #&gt; [10] &quot;changepage,16384&quot; #&gt; [11] &quot;cm,1392640&quot; #&gt; [12] &quot;colortbl,12288&quot; #&gt; [13] &quot;ctex,733184&quot; #&gt; [14] &quot;dehyph,233472&quot; #&gt; [15] &quot;dvipdfmx,163840&quot; #&gt; [16] &quot;dvipdfmx.x86_64-linux,999424&quot; #&gt; [17] &quot;dvipng,0&quot; #&gt; [18] &quot;dvipng.x86_64-linux,1073152&quot; #&gt; [19] &quot;dvips,380928&quot; #&gt; [20] &quot;dvips.x86_64-linux,376832&quot; #&gt; [21] &quot;dvisvgm,0&quot; #&gt; [22] &quot;dvisvgm.x86_64-linux,5492736&quot; #&gt; [23] &quot;ec,5918720&quot; #&gt; [24] &quot;environ,8192&quot; #&gt; [25] &quot;etex,45056&quot; #&gt; [26] &quot;etoolbox,49152&quot; #&gt; [27] &quot;euenc,57344&quot; #&gt; [28] &quot;fancyvrb,73728&quot; #&gt; [29] &quot;fandol,34922496&quot; #&gt; [30] &quot;filehook,36864&quot; #&gt; [31] &quot;fontspec,311296&quot; #&gt; [32] &quot;framed,24576&quot; #&gt; [33] &quot;geometry,45056&quot; #&gt; [34] &quot;glyphlist,98304&quot; #&gt; [35] &quot;graphics,126976&quot; #&gt; [36] &quot;graphics-cfg,8192&quot; #&gt; [37] &quot;graphics-def,86016&quot; #&gt; [38] &quot;gsftopk,8192&quot; #&gt; [39] &quot;gsftopk.x86_64-linux,94208&quot; #&gt; [40] &quot;helvetic,2433024&quot; #&gt; [41] &quot;hyperref,962560&quot; #&gt; [42] &quot;hyphen-base,98304&quot; #&gt; [43] &quot;ifluatex,8192&quot; #&gt; [44] &quot;ifmtarg,4096&quot; #&gt; [45] &quot;iftex,4096&quot; #&gt; [46] &quot;ifxetex,4096&quot; #&gt; [47] &quot;inconsolata,1302528&quot; #&gt; [48] &quot;jknapltx,77824&quot; #&gt; [49] &quot;knuth-lib,192512&quot; #&gt; [50] &quot;kpathsea,208896&quot; #&gt; [51] &quot;kpathsea.x86_64-linux,163840&quot; #&gt; [52] &quot;l3kernel,1171456&quot; #&gt; [53] &quot;l3packages,159744&quot; #&gt; [54] &quot;latex,1675264&quot; #&gt; [55] &quot;latex-bin,0&quot; #&gt; [56] &quot;latex-bin.x86_64-linux,16384&quot; #&gt; [57] &quot;latex-fonts,249856&quot; #&gt; [58] &quot;latexconfig,40960&quot; #&gt; [59] &quot;latexmk,380928&quot; #&gt; [60] &quot;latexmk.x86_64-linux,4096&quot; #&gt; [61] &quot;lm,43601920&quot; #&gt; [62] &quot;lm-math,737280&quot; #&gt; [63] &quot;lualibs,741376&quot; #&gt; [64] &quot;luaotfload,5771264&quot; #&gt; [65] &quot;luaotfload.x86_64-linux,4096&quot; #&gt; [66] &quot;luatex,151552&quot; #&gt; [67] &quot;luatex.x86_64-linux,26660864&quot; #&gt; [68] &quot;makeindex,36864&quot; #&gt; [69] &quot;makeindex.x86_64-linux,151552&quot; #&gt; [70] &quot;mathpazo,167936&quot; #&gt; [71] &quot;mathspec,45056&quot; #&gt; [72] &quot;mdwtools,126976&quot; #&gt; [73] &quot;metafont,147456&quot; #&gt; [74] &quot;metafont.x86_64-linux,696320&quot; #&gt; [75] &quot;mfware,16384&quot; #&gt; [76] &quot;mfware.x86_64-linux,593920&quot; #&gt; [77] &quot;microtype,430080&quot; #&gt; [78] &quot;ms,49152&quot; #&gt; [79] &quot;natbib,135168&quot; #&gt; [80] &quot;ncntrsbk,1249280&quot; #&gt; [81] &quot;oberdiek,2879488&quot; #&gt; [82] &quot;paralist,16384&quot; #&gt; [83] &quot;parskip,8192&quot; #&gt; [84] &quot;pdfcrop,40960&quot; #&gt; [85] &quot;pdfcrop.x86_64-linux,8192&quot; #&gt; [86] &quot;pdftex,266240&quot; #&gt; [87] &quot;pdftex.x86_64-linux,2191360&quot; #&gt; [88] &quot;pgf,5386240&quot; #&gt; [89] &quot;placeins,4096&quot; #&gt; [90] &quot;plain,1376256&quot; #&gt; [91] &quot;preview,57344&quot; #&gt; [92] &quot;psnfss,450560&quot; #&gt; [93] &quot;rsfs,143360&quot; #&gt; [94] &quot;sauerj,32768&quot; #&gt; [95] &quot;scheme-infraonly,0&quot; #&gt; [96] &quot;setspace,24576&quot; #&gt; [97] &quot;sourcecodepro,7499776&quot; #&gt; [98] &quot;subfig,32768&quot; #&gt; [99] &quot;tetex,520192&quot; #&gt; [100] &quot;tetex.x86_64-linux,77824&quot; #&gt; [101] &quot;tex,0&quot; #&gt; [102] &quot;tex-ini-files,32768&quot; #&gt; [103] &quot;tex.x86_64-linux,385024&quot; #&gt; [104] &quot;tex4ht,33165312&quot; #&gt; [105] &quot;tex4ht.x86_64-linux,299008&quot; #&gt; [106] &quot;texlive.infra,1007616&quot; #&gt; [107] &quot;texlive.infra.x86_64-linux,352256&quot; #&gt; [108] &quot;times,1372160&quot; #&gt; [109] &quot;tipa,4489216&quot; #&gt; [110] &quot;titling,8192&quot; #&gt; [111] &quot;tocbibind,12288&quot; #&gt; [112] &quot;tocloft,36864&quot; #&gt; [113] &quot;tools,368640&quot; #&gt; [114] &quot;trimspaces,4096&quot; #&gt; [115] &quot;ttfutils,897024&quot; #&gt; [116] &quot;ttfutils.x86_64-linux,1765376&quot; #&gt; [117] &quot;tufte-latex,110592&quot; #&gt; [118] &quot;type1cm,8192&quot; #&gt; [119] &quot;ucs,2883584&quot; #&gt; [120] &quot;ulem,24576&quot; #&gt; [121] &quot;unicode-data,2322432&quot; #&gt; [122] &quot;units,8192&quot; #&gt; [123] &quot;upquote,4096&quot; #&gt; [124] &quot;url,16384&quot; #&gt; [125] &quot;xcolor,81920&quot; #&gt; [126] &quot;xecjk,532480&quot; #&gt; [127] &quot;xetex,24576&quot; #&gt; [128] &quot;xetex.x86_64-linux,26107904&quot; #&gt; [129] &quot;xetexconfig,4096&quot; #&gt; [130] &quot;xifthen,8192&quot; #&gt; [131] &quot;xkeyval,114688&quot; #&gt; [132] &quot;xunicode,208896&quot; #&gt; [133] &quot;zapfding,98304&quot; #&gt; [134] &quot;zhnumber,57344&quot; # or tinytex::tlmgr(c(&quot;info&quot;, &quot;--list&quot;, &quot;--only-installed&quot;, &quot;--data&quot;, &quot;name,size&quot;)) A.2.1 安装和更新 # 就近选择 CTAN 镜像站点 tlmgr option repository https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/tlnet tlmgr option repository http://mirror.ctan.org/systems/texlive/tlnet # 可更新的 TeX 包列表 tlmgr update --list # 更新所有已经安装的 TeX 包 tlmgr update --all # 更新 tlmgr 管理器本身 tlmgr update --self # 安装 tlmgr install ctex fandol # 列出套装 tlmgr list schemes tlmgr list collections # 列出已经安装的 TeX 包 tlmgr list --only-installed A.3 查看文件 head -n 100 clientip.csv # 查看文件前100行 tail -n 20 clientip.csv # 查看文件后20行 A.4 挂载共享文件夹 sudo mount -t vboxsf -o uid=1000,gid=1000 Downloads /home/share sudo chmod -R 777 ./share 给目录添加权限 A.5 tar 压缩文件 tar -cjf clientip.tar.bz2 clientip.csv A.6 cp 到共享文件夹 sudo cp /home/cloud/clientip.tar.bz2 ./ sudo cp /home/cloud/clientipSQL.tar.bz2 ./ sudo cp /home/cloud/clientip.csv ./ # 复制到当前文件夹下 sudo cp /home/cloud/clientip.SQL ./ 安装 GPG 公钥（只限Win/Mac） tlmgr --repository http://www.preining.info/tlgpg/ install tlgpg A.6.1 搜索 tlmgr search *what* 参数 *what* 是正则表达式 # tlmgr search --file tikz.sty tinytex::tlmgr_search(&#39;tikz.sty&#39;) #&gt; tlmgr search --file --global &#39;tikz.sty&#39; 这样，我们就可以知道要使用 \\usepackage{tikz} 就得先安装 pgf 包，此外，管道命令也是支持的 tlmgr search --file font | grep math 查询 CTAN 仓库列表 tlmgr repository list A.7 文件操作 Linux 命令行工具是非常强大的11。 A.7.1 查看文件 ls -a 列出目录下所有文件 ls -1 一行显示一个文件或文件夹 ls -l 按从 aA-zZ 的顺序列出所有文件以及所属权限 ls -rl 相比于 ls -l 文件是逆序排列 ls -lh 列出文件或文件夹（不包含子文件夹）的大小 ls -ld 列出当前目录本身，而不是其所包含的内容 A.7.2 新建和删除 创建文件夹 mkdir images 创建文件用 touch 如 touch .Rprofile # 删除文件夹及子文件夹，递归删除 rm -rf images/ # 删除文件 rm .Rprofile A.7.3 解压和压缩 tar 解压 tar -xzvf R-3.5.1.tar.gz 其中，-v 显示解压后的文件 tar 压缩 tar -czvf rstan.tar.gz rstan/ 当前目录下，将 rstan/ 目录压缩为 rstan.tar.gz 文件 A.7.4 移动文件 在当前目录下 # 移动文件夹 images 下的所有文件到 figures 文件夹下 mv images/* figures/ # images 文件夹移动到 figures 文件夹下 mv images/ figures/ # 移动特定的文件 mv images/*.png figures/ 同一目录下有两个文件 R-3.5.1.tar.gz 未下载完整 和 R-3.5.1.tar.gz.1 完全下载 # 删除 R-3.5.1.tar.gz rm R-3.5.1.tar.gz # 重命名 R-3.5.1.tar.gz.1 mv R-3.5.1.tar.gz.1 R-3.5.1.tar.gz A.7.5 查看文件大小 当前目录下各文件夹的大小， -h 表示人类可读的方式显示，如 Kb、Mb、Gb，-d 表示目录深度 du --human-readable --max-depth=1 ./ du -h -d 1 ./ # 对当前目录下的文件/夹 按大小排序 du -sh * | sort -nr A.8 Git 命令 A.8.1 删除子模块 https://stackoverflow.com/questions/1260748/how-do-i-remove-a-submodule/ A.8.2 合并上流 commit git clone --depth=5 https://github.com/XiangyunHuang/cosx.org.git git submodule update --init --recursive # 查看远程分支 cd cosx.org git remote -v origin https://github.com/XiangyunHuang/cosx.org.git (fetch) origin https://github.com/XiangyunHuang/cosx.org.git (push) # 添加上流分支 git remote add upstream https://github.com/cosname/cosx.org.git git remote -v origin https://github.com/XiangyunHuang/cosx.org.git (fetch) origin https://github.com/XiangyunHuang/cosx.org.git (push) upstream https://github.com/cosname/cosx.org.git (fetch) upstream https://github.com/cosname/cosx.org.git (push) # 获取上流 commit 并且合并到我的 master 分支 git fetch upstream git merge upstream/master master git push origin master A.8.3 大文件支持 sudo apt install git-lfs git lfs install git lfs track &quot;*.psd&quot; git add .gitattributes git commit -m &quot;track *.psd files using Git LFS&quot; git push origin master A.8.4 新建分支 git checkout -b stan # 新建 stan 分支 git branch -v # 查看本地分支 stan 前有个星号标记 git pull --rebase git@github.com:XiangyunHuang/cosx.org.git master # 同步到远程分支 stan git push --set-upstream origin stan git push origin master:stan git add . git commit -m &quot;balabala&quot; git push --set-upstream origin stan A.8.5 创建站点 基于 GitHub Pages 创建站点用于存放图片和数据 在Github上创建一个空的仓库，命名为 uploads，没有 readme.md 和 LICENSE 在本地创建目录 uploads 切换到 uploads 目录下 git init git checkout -b gh-pages git remote add origin https://github.com/XiangyunHuang/home.git 添加图片或者数据，并且 git add 和 commit 后 git push --set-upstream origin gh-pages 这样仓库 home 只包含 gh-pages 分支 数据地址即为 https://xiangyunhuang.github.io/home/data/eqList2018_05_18.xls A.8.6 回车换行 CR (Carriage Return) 表示回车，LF (Line Feed) 表示换行，Windows 下用回车加换行表示下一行，UNIX/Linux 采用换行符 (LF) 表示下一行，MAC OS 则采用回车符 (CR) 表示下一行 git config --global core.autocrlf false 添加子模块 git submodule add git://github.com/jgm/pandoc-templates.git templates 克隆项目 git clone --depth=10 --branch=master --recursive \\ git@github.com:XiangyunHuang/pandoc4everything.git 配置账户 git config --global user.email &quot;email&quot; git config --global user.name &quot;username&quot; touch .git-credentials echo &quot;https://username:password@github.com&quot; &gt;&gt; .git-credentials git config --global credential.helper store 往空的 Github 仓库添加本地文件 git init git remote add origin https://github.com/XiangyunHuang/notesdown.git git add -A git commit -m &quot;balabala&quot; git push -u origin master 本地新建仓库推送至远程分支 git remote add origin https://github.com/XiangyunHuang/notesdown.git git add . git commit -m &quot;init cos-art&quot; # 此时远程仓库 notesdown 还没有 cos-art 分支 git push origin master:cos-art 位于 Github Git Community Book 中译本 A.8.7 创建PR git pull --rebase git@github.com:yihui/xaringan.git master # then force push to your master branch 参考 https://github.com/yihui/xaringan/pull/107 I don’t recommend you to use your master branch for pull requests, because all commits will be squashed before merging, e.g. c2c2055 Then you will have some trouble with syncing your master branch with the master branch here (your choices are (1) delete your repo and fork again; or (2) force push; either option is not good). For pull requests, I recommend that you always use different branches for different pull requests. A.9 安装软件 A.9.1 R 在 Ubuntu/Debian 系统上安装最新开发版，请看 https://cran.r-project.org/bin/linux/debian/index.html sudo apt-add-repository -y &quot;deb http://cran.rstudio.com/bin/linux/ubuntu `lsb_release -cs`/&quot; sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 sudo apt-get update sudo apt-get install r-base-dev R 自3.5以来出现大的不同 sudo apt-add-repository -y &quot;deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/&quot; # 或者就近的镜像站点 sudo apt-add-repository -y &quot;deb https://mirrors.tuna.tsinghua.edu.cn/CRAN/bin/linux/ubuntu bionic-cran35/&quot; # 必须导入 key sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 sudo apt-get update sudo apt-get install r-base r-base-dev # 添加二进制编译好的R包仓库，有些R包依赖复杂，编译时间长 # R 3.5.0 系列 二进制 R 包 sudo add-apt-repository ppa:marutter/c2d4u3.5 sudo apt-get update 查询 PATH 环境变量包含的软件路径 strsplit(Sys.getenv(&quot;PATH&quot;),split = .Platform$path.sep) %&gt;% unlist #&gt; [1] &quot;//home/travis/.TinyTeX/bin/x86_64-linux&quot; #&gt; [2] &quot;/home/travis/.rvm/gems/ruby-2.4.1/bin&quot; #&gt; [3] &quot;/home/travis/.rvm/gems/ruby-2.4.1@global/bin&quot; #&gt; [4] &quot;/home/travis/.rvm/rubies/ruby-2.4.1/bin&quot; #&gt; [5] &quot;/home/travis/.rvm/bin&quot; #&gt; [6] &quot;/home/travis/R-bin/bin&quot; #&gt; [7] &quot;/home/travis/bin&quot; #&gt; [8] &quot;/home/travis/.local/bin&quot; #&gt; [9] &quot;/opt/pyenv/shims&quot; #&gt; [10] &quot;/home/travis/.phpenv/shims&quot; #&gt; [11] &quot;/home/travis/perl5/perlbrew/bin&quot; #&gt; [12] &quot;/home/travis/.nvm/versions/node/v8.12.0/bin&quot; #&gt; [13] &quot;/home/travis/.kiex/elixirs/elixir-1.3.2/bin&quot; #&gt; [14] &quot;/home/travis/.kiex/bin&quot; #&gt; [15] &quot;/home/travis/gopath/bin&quot; #&gt; [16] &quot;/home/travis/.gimme/versions/go1.7.4.linux.amd64/bin&quot; #&gt; [17] &quot;/usr/local/phantomjs/bin&quot; #&gt; [18] &quot;/usr/local/phantomjs&quot; #&gt; [19] &quot;/usr/local/neo4j-3.2.7/bin&quot; #&gt; [20] &quot;/usr/local/cmake-3.9.2/bin&quot; #&gt; [21] &quot;/usr/local/clang-5.0.0/bin&quot; #&gt; [22] &quot;/usr/local/sbin&quot; #&gt; [23] &quot;/usr/local/bin&quot; #&gt; [24] &quot;/usr/sbin&quot; #&gt; [25] &quot;/usr/bin&quot; #&gt; [26] &quot;/sbin&quot; #&gt; [27] &quot;/bin&quot; #&gt; [28] &quot;/opt/ghc/bin&quot; #&gt; [29] &quot;/home/travis/.phpenv/bin&quot; #&gt; [30] &quot;/opt/pyenv/bin&quot; #&gt; [31] &quot;/home/travis/.yarn/bin&quot; Windows 下安装指导见《R语言忍者秘笈》的第二章12 推荐没事多翻翻官网 FAQ 文档 以及6本自带的手册 An Introduction to R (R-intro) includes information on data types, programming elements, statistical modeling and graphics. This document is based on the Notes on S-PLUS by Bill Venables and David Smith. 介绍数据类型，编程基础，统计模型和图形 Writing R Extensions (R-exts) currently describes the process of creating R add-on packages, writing R documentation, R’s system and foreign language interfaces, and the R API. 描述创建扩展包、写R包文档的过程，介绍 R 系统，外部语言接口以及 R 的API R Data Import/Export (R-data) is a guide to importing and exporting data to and from R. 从 R 导入和导出数据 The R Language Definition (R-lang), a first version of the Kernighan &amp; Ritchie of R, explains evaluation, parsing, object oriented programming, computing on the language, and so forth. 介绍 R 语言程序设计，解释计算、解析、面向对象编程以及计算 R Installation and Administration (R-admin). R 安装和管理 R Internals (R-ints) is a guide to R’s internal structures. (Added in R 2.4.0.) R 内部结构指南 Hadley Wickham 正在写文档介绍 Documentation for R’s internal C API 从源码编译 R 的需求在哪呢？ 爱折腾的极客：玩配置，学习 make 相关工具和 Linux 世界的依赖 追求性能：如 LFS 支持 和 Intel MKL 加速 环境限制：CentOS 6/7 或者红帽系统，自带的 R 版本比较落后 微软提供的一套 MSR （这里不需要编译） 现在很多东西都讲究 docker 化，直接往 CentOS 系统上编译安装最新版 R 会越来越少，这里给个例子，在 docker 内安装 R 和扩展包，Dockerfile 的内容如下 cat(readLines(&quot;docs/Dockerfile&quot;, encoding = &quot;UTF-8&quot;) ,sep = &quot;\\n&quot;) #&gt; FROM rocker/geospatial:latest #&gt; #&gt; MAINTAINER Xiangyun Huang &lt;xiangyunfaith@outlook.com&gt; #&gt; #&gt; # System dependencies for required R packages #&gt; RUN apt-get update \\ #&gt; &amp;&amp; apt-get install -y --no-install-recommends \\ #&gt; imagemagick \\ #&gt; optipng \\ #&gt; curl \\ #&gt; dieharder \\ #&gt; libdieharder3 \\ #&gt; libdieharder-dev \\ #&gt; libpoppler-cpp-dev \\ #&gt; python-dev \\ #&gt; python-pip \\ #&gt; python-tk \\ #&gt; octave \\ #&gt; proj-bin \\ #&gt; libpaper-utils \\ #&gt; libatlas3-base \\ #&gt; build-essential \\ #&gt; python-wheel \\ #&gt; pstoedit \\ #&gt; &amp;&amp; pip install numpy \\ #&gt; matplotlib #&gt; #&gt; # TinyTeX for PDF #&gt; RUN mkdir ~/.fonts \\ #&gt; &amp;&amp; curl -o ~/.fonts/Inconsolata-Bold.ttf https://raw.githubusercontent.com/google/fonts/master/ofl/inconsolata/Inconsolata-Bold.ttf \\ #&gt; &amp;&amp; curl -o ~/.fonts/Inconsolata-Regular.ttf https://raw.githubusercontent.com/google/fonts/master/ofl/inconsolata/Inconsolata-Regular.ttf \\ #&gt; &amp;&amp; fc-cache -fv ~/.fonts \\ #&gt; &amp;&amp; git clone --depth=1 --branch=master https://github.com/XiangyunHuang/bookdown-chinese.git \\ #&gt; &amp;&amp; cd bookdown-chinese \\ #&gt; &amp;&amp; tlmgr update --all --self \\ #&gt; &amp;&amp; tlmgr install $(cat TeXLive.pkgs | tr &#39;\\n&#39; &#39; &#39;) || true \\ #&gt; &amp;&amp; Rscript -e &quot;devtools::install_github(&#39;leonawicz/mapmate&#39;)&quot; \\ #&gt; &amp;&amp; Rscript -e &quot;devtools::install_github(&#39;dgrtwo/gganimate&#39;)&quot; \\ #&gt; &amp;&amp; Rscript -e &quot;bookdown::render_book(&#39;index.Rmd&#39;)&quot; #&gt; #&gt; RUN mkdir /liftrroot/ #&gt; WORKDIR /liftrroot/ 这种方式可以安装到最新版的 R，同时省去了自己配置安装过程中的麻烦，只是系统自带的 texlive 还是比较旧，如何安装 tlmgr 管理器，安装新的 TeX 包到之前的位置值得考虑，主要目的是为中文的 R Markdown 文档服务。 Pandoc 提供的 LaTeX 文类，是希望用户在 YAML 指定 CJKmainfont 等，显式地安装系统中文字体供使用，楷体和宋体，文泉驿黑体都是系统自带的。要我说可以用思源黑体和宋体，或者自己拷贝一份中文字体到 ~/.fonts 然后刷新，就是添加这样一段代码，这种做法使用最广 RUN mkdir ~/.fonts \\ &amp;&amp; curl -o ~/.fonts/Inconsolata-Bold.ttf https://raw.githubusercontent.com/google/fonts/master/ofl/inconsolata/Inconsolata-Bold.ttf \\ &amp;&amp; curl -o ~/.fonts/Inconsolata-Regular.ttf https://raw.githubusercontent.com/google/fonts/master/ofl/inconsolata/Inconsolata-Regular.ttf \\ &amp;&amp; fc-cache -fv ~/.fonts \\ 文泉驿字体 wqy-unibit-fonts wqy-microhei-fonts wqy-zenhei-fonts 安装 Microsoft R Open https://mran.microsoft.com/documents/rro/installation#revorinst-lin 安装 Machine Learning Server 在线安装 离线安装 A.9.2 GCC CentOS 7 默认版本是 gcc-4.8.5 sudo yum install centos-release-scl-rh sudo yum install devtoolset-4-gcc devtoolset-4-gcc-c++ source /opt/rh/devtoolset-4/enable options(BioC_mirror=&quot;https://mirrors.tuna.tsinghua.edu.cn/bioconductor&quot;) options(&quot;repos&quot; = c(CRAN=&quot;https://mirrors.tuna.tsinghua.edu.cn/CRAN/&quot;)) # gcc 4.8.2 rpm --import http://linuxsoft.cern.ch/cern/slc6X/x86_64/RPM-GPG-KEY-cern wget -O /etc/yum.repos.d/slc6-devtoolset.repo http://linuxsoft.cern.ch/cern/devtoolset/slc6-devtoolset.repo sudo yum install devtoolset-2-toolchain sudo yum install devtoolset-2-gcc devtoolset-2-gcc-c++ source /opt/rh/devtoolset-2/enable A.9.3 Python Python 版本和位置 Sys.which(&quot;python&quot;) #&gt; python #&gt; &quot;/usr/bin/python&quot; system2(&quot;python&quot;, args = &quot;--version&quot;, stderr = TRUE) #&gt; Warning in system2(&quot;python&quot;, args = &quot;--version&quot;, stderr = TRUE): setting #&gt; stdout = TRUE #&gt; [1] &quot;Python 2.7.6&quot; 升级 Python sudo add-apt-repository ppa:fkrull/deadsnakes-python2.7 sudo apt-get update 可用的 python 模块 help(&#39;modules&#39;) #&gt; #&gt; Please wait a moment while I gather a list of all available modules... #&gt; #&gt; BaseHTTPServer asyncore imghdr serial #&gt; Bastion atexit imp sets #&gt; CDROM audiodev importlib setuptools #&gt; CGIHTTPServer audioop imputil sgmllib #&gt; Canvas axi inspect sha #&gt; Cheetah base64 io shelve #&gt; ConfigParser bdb itertools shlex #&gt; Cookie binascii json shutil #&gt; DLFCN binhex jsonpatch signal #&gt; Dialog bisect jsonpointer site #&gt; DocXMLRPCServer boto keyword sitecustomize #&gt; FileDialog bsddb landscape six #&gt; FixTk bz2 lib2to3 smtpd #&gt; HTMLParser bzrlib linecache smtplib #&gt; IN cPickle linuxaudiodev sndhdr #&gt; MimeWriter cProfile locale socket #&gt; OpenSSL cStringIO logging spwd #&gt; PAM calendar lsb_release sqlite3 #&gt; Queue cgi macpath sre #&gt; ScrolledText cgitb macurl2path sre_compile #&gt; SimpleDialog chardet mailbox sre_constants #&gt; SimpleHTTPServer chunk mailcap sre_parse #&gt; SimpleXMLRPCServer cloudinit markupbase ssl #&gt; SocketServer cmath marshal stat #&gt; StringIO cmd math statvfs #&gt; TYPES code matplotlib string #&gt; Tix codecs md5 stringold #&gt; Tkconstants codeop mercurial stringprep #&gt; Tkdnd collections mhlib strop #&gt; Tkinter colorsys mimetools struct #&gt; UserDict commands mimetypes subprocess #&gt; UserList compileall mimify sunau #&gt; UserString compiler miniterm sunaudio #&gt; _LWPCookieJar configobj mmap svg_regex #&gt; _MozillaCookieJar contextlib modulefinder svg_transform #&gt; __builtin__ cookielib mpl_toolkits symbol #&gt; __future__ copy multifile symtable #&gt; _abcoll copy_reg multiprocessing sys #&gt; _ast cqlsh mutex sysconfig #&gt; _bisect cqlshlib netrc syslog #&gt; _bsddb crcmod new tabnanny #&gt; _codecs crypt nis tarfile #&gt; _codecs_cn csv nntplib telnetlib #&gt; _codecs_hk ctypes ntpath tempfile #&gt; _codecs_iso2022 curl nturl2path termios #&gt; _codecs_jp curses numbers test #&gt; _codecs_kr datetime numpy textwrap #&gt; _codecs_tw dateutil oauth this #&gt; _collections dbhash opcode thread #&gt; _csv dbm operator threading #&gt; _ctypes deb822 optparse time #&gt; _ctypes_test debconf os timeit #&gt; _curses debian os2emxpath tkColorChooser #&gt; _curses_panel debian_bundle ossaudiodev tkCommonDialog #&gt; _elementtree decimal parser tkFileDialog #&gt; _functools difflib pdb tkFont #&gt; _hashlib dircache pickle tkMessageBox #&gt; _heapq dis pickletools tkSimpleDialog #&gt; _hotshot distutils pip toaiff #&gt; _io doctest pipes token #&gt; _json dumbdbm pkg_resources tokenize #&gt; _locale dummy_thread pkgutil trace #&gt; _lsprof dummy_threading platform traceback #&gt; _md5 easy_install plistlib ttk #&gt; _multibytecodec email popen2 tty #&gt; _multiprocessing encodings poplib turtle #&gt; _osx_support errno posix twisted #&gt; _pyio exceptions posixfile types #&gt; _random fcntl posixpath unicodedata #&gt; _sha filecmp pprint unittest #&gt; _sha256 fileinput prettytable urllib #&gt; _sha512 fnmatch profile urllib2 #&gt; _socket formatter pstats urllib3 #&gt; _sqlite3 fpectl pty urlparse #&gt; _sre fpformat pwd user #&gt; _ssl fractions py_compile uu #&gt; _strptime ftplib pyclbr uuid #&gt; _struct functools pycurl validate #&gt; _symtable future_builtins pydoc virtualenv #&gt; _sysconfigdata gc pydoc_data virtualenv_support #&gt; _sysconfigdata_nd gdbm pyexpat warnings #&gt; _testcapi genericpath pylab wave #&gt; _threading_local getopt pyparsing weakref #&gt; _tkinter getpass pytz webbrowser #&gt; _warnings gettext quopri wheel #&gt; _weakref glob random whichdb #&gt; _weakrefset google_compute_engine re wsgiref #&gt; _yaml grp readline xapian #&gt; abc gzip repr xdrlib #&gt; aifc hashlib requests xml #&gt; antigravity heapq resource xmllib #&gt; anydbm hgext rexec xmlrpclib #&gt; apt hgext3rd rfc822 xxsubtype #&gt; apt_inst hmac rlcompleter yaml #&gt; apt_pkg hotshot robotparser yocto_css #&gt; aptsources htmlentitydefs rpytools zipfile #&gt; argparse htmllib runpy zipimport #&gt; array httplib sched zlib #&gt; ast ihooks scour zope #&gt; asynchat imaplib select #&gt; #&gt; Enter any module name to get more help. Or, type &quot;modules spam&quot; to search #&gt; for modules whose descriptions contain the word &quot;spam&quot;. A.9.4 Lapack 编译 lapack 以及 lapacke，这一步比较麻烦，首先当然是进入 lapack-3.7.1 文件夹，然后根据平台的特点，将 INSTALL 目录下对应的 make.inc.XXX 复制一份到 lapack-3.7.1目录下，并命名为 make.inc, 这里我复制的是 INSTALL/make.inc.gfortran，因为我这里用的是 gfortran 编译器。 因为 lapack 以来于 blas 库，所以需要对 lapack-3.7.1/Makefile 做如下修改 #lib: lapacklib tmglib lib: blaslib variants lapacklig tmglib 再执行 make # 编译所有的 lapack 文件 cd lapacke # 进入 lapacke 文件夹，这个文件夹包含 lapack 的 C 语言接口文件 make # 编译 lapacke cp include/*.h /usr/local/include # 将 lapacke 的头文件复制到系统头文件目录 cd .. # 返回到 lapack-3.7.1 目录 cp *.a /usr/local/lib # 将生成的所有库文件复制到系统库目录 A.9.5 Octave Octave 官网 http://www.gnu.org/software/octave/ sudo apt-add-repository -y ppa:octave/stable sudo apt-get update sudo apt-get install -y octave 安装指南分别有 MacOS https://wiki.octave.org/Octave_for_macOS Windows http://wiki.octave.org/Octave_for_Microsoft_Windows Debian https://wiki.octave.org/Octave_for_Debian_systems 查看安装的版本 Sys.which(&quot;octave&quot;) #&gt; octave #&gt; &quot;/usr/bin/octave&quot; system(&quot;octave --version&quot;) A.9.6 Pandoc 在 Pandoc 的开发仓库 GitHub 上下载 deb 包13 sudo apt-get install gdebi-core sudo gdebi pandoc-2.2.2.1-1-amd64.deb A.9.7 RStudio 安装 RStudio 或者 RStudio Server 请看官网介绍 https://www.rstudio.com/products/rstudio/download/ http://docs.rstudio.com/ide/server-pro/ 在 RStudio 官网14 下载最新的 RStudio 桌面版/服务器版 wget https://download2.rstudio.org/rstudio-server-1.1.456-amd64.deb sudo gdebi rstudio-server-1.1.456-amd64.deb 设置 rstudio server 端口，在文件 /etc/rstudio/rserver.conf 下，设置 www-port=8080 获取机器的 IP 地址，如 192.168.106.3 ip addr 修改 rserver.conf 文件后需要重启才会生效，重启 rstudio server sudo rstudio-server stop sudo rstudio-server start 从本地浏览器登陆 RStudio Server 网址 http://192.168.106.3:8080/ A.9.8 Calibre 将 epub 转化为 mobi 格式 sudo -v &amp;&amp; wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | sudo sh /dev/stdin A.9.9 HUGO 在开发仓库下载最新发布的 deb 文件 https://github.com/gohugoio/hugo/releases wget https://github.com/gohugoio/hugo/releases/download/v0.45/hugo_0.45_Linux-64bit.deb sudo gdebi hugo_0.45_Linux-64bit.deb A.9.10 zsh Zshell 是一个比 bash 更好用的终端 在 CentOS/Fedora 下 sudo yum update &amp;&amp; sudo yum -y install zsh git sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot; A.9.11 TinyTeX Travis 安装 益辉通过 Travis 每天更新 TinyTeX，我们下载这个版本 curl -fLo /tmp/texlive.tar.gz https://travis-bin.yihui.name/tinytex.tar.gz 解压到当前用户的根目录 tar xzf /tmp/tinytex.tar.gz -C ~ .TinyTeX 修改 .bashrc 文件将 TinyTeX 的位置添加到系统路径里 export PATH=/$HOME/.TinyTeX/bin/x86_64-linux:$PATH 更新 .bashrc 使得修改生效 source .bashrc 更新 TeX 包和 tlmgr 管理器 tlmgr update --all --self 安装一些 TeX 包支持中文文档编译 tlmgr install ctex fandol 已安装的字体 font_db &lt;- base::system(&quot;fc-list :lang=en-us | sort&quot;, intern = TRUE) font_name &lt;- unique(do.call(rbind,strsplit(font_db,split = &quot;:&quot;))[,2]) substr(font_name, 2, nchar(font_name)) #&gt; [1] &quot;DejaVu Sans&quot; &quot;DejaVu Sans Mono&quot; #&gt; [3] &quot;DejaVu Serif&quot; &quot;Liberation Mono&quot; #&gt; [5] &quot;Liberation Sans&quot; &quot;Liberation Sans Narrow&quot; #&gt; [7] &quot;Liberation Serif&quot; &quot;URW Gothic L&quot; #&gt; [9] &quot;URW Bookman L&quot; &quot;Century Schoolbook L&quot; #&gt; [11] &quot;Nimbus Sans L&quot; &quot;Nimbus Roman No9 L&quot; #&gt; [13] &quot;Nimbus Mono L&quot; &quot;URW Palladio L&quot; #&gt; [15] &quot;URW Chancery L&quot; tinytex::tl_pkgs() #&gt; tlmgr info --list --only-installed --data name #&gt; [1] &quot;alegreya&quot; &quot;amscls&quot; &quot;amsfonts&quot; #&gt; [4] &quot;amsmath&quot; &quot;babel&quot; &quot;bibtex&quot; #&gt; [7] &quot;bibtex&quot; &quot;booktabs&quot; &quot;caption&quot; #&gt; [10] &quot;changepage&quot; &quot;cm&quot; &quot;colortbl&quot; #&gt; [13] &quot;ctex&quot; &quot;dehyph&quot; &quot;dvipdfmx&quot; #&gt; [16] &quot;dvipdfmx&quot; &quot;dvipng&quot; &quot;dvipng&quot; #&gt; [19] &quot;dvips&quot; &quot;dvips&quot; &quot;dvisvgm&quot; #&gt; [22] &quot;dvisvgm&quot; &quot;ec&quot; &quot;environ&quot; #&gt; [25] &quot;etex&quot; &quot;etoolbox&quot; &quot;euenc&quot; #&gt; [28] &quot;fancyvrb&quot; &quot;fandol&quot; &quot;filehook&quot; #&gt; [31] &quot;fontspec&quot; &quot;framed&quot; &quot;geometry&quot; #&gt; [34] &quot;glyphlist&quot; &quot;graphics&quot; &quot;graphics-cfg&quot; #&gt; [37] &quot;graphics-def&quot; &quot;gsftopk&quot; &quot;gsftopk&quot; #&gt; [40] &quot;helvetic&quot; &quot;hyperref&quot; &quot;hyphen-base&quot; #&gt; [43] &quot;ifluatex&quot; &quot;ifmtarg&quot; &quot;iftex&quot; #&gt; [46] &quot;ifxetex&quot; &quot;inconsolata&quot; &quot;jknapltx&quot; #&gt; [49] &quot;knuth-lib&quot; &quot;kpathsea&quot; &quot;kpathsea&quot; #&gt; [52] &quot;l3kernel&quot; &quot;l3packages&quot; &quot;latex&quot; #&gt; [55] &quot;latex-bin&quot; &quot;latex-bin&quot; &quot;latex-fonts&quot; #&gt; [58] &quot;latexconfig&quot; &quot;latexmk&quot; &quot;latexmk&quot; #&gt; [61] &quot;lm&quot; &quot;lm-math&quot; &quot;lualibs&quot; #&gt; [64] &quot;luaotfload&quot; &quot;luaotfload&quot; &quot;luatex&quot; #&gt; [67] &quot;luatex&quot; &quot;makeindex&quot; &quot;makeindex&quot; #&gt; [70] &quot;mathpazo&quot; &quot;mathspec&quot; &quot;mdwtools&quot; #&gt; [73] &quot;metafont&quot; &quot;metafont&quot; &quot;mfware&quot; #&gt; [76] &quot;mfware&quot; &quot;microtype&quot; &quot;ms&quot; #&gt; [79] &quot;natbib&quot; &quot;ncntrsbk&quot; &quot;oberdiek&quot; #&gt; [82] &quot;paralist&quot; &quot;parskip&quot; &quot;pdfcrop&quot; #&gt; [85] &quot;pdfcrop&quot; &quot;pdftex&quot; &quot;pdftex&quot; #&gt; [88] &quot;pgf&quot; &quot;placeins&quot; &quot;plain&quot; #&gt; [91] &quot;preview&quot; &quot;psnfss&quot; &quot;rsfs&quot; #&gt; [94] &quot;sauerj&quot; &quot;scheme-infraonly&quot; &quot;setspace&quot; #&gt; [97] &quot;sourcecodepro&quot; &quot;subfig&quot; &quot;tetex&quot; #&gt; [100] &quot;tetex&quot; &quot;tex&quot; &quot;tex-ini-files&quot; #&gt; [103] &quot;tex&quot; &quot;tex4ht&quot; &quot;tex4ht&quot; #&gt; [106] &quot;texlive&quot; &quot;texlive&quot; &quot;times&quot; #&gt; [109] &quot;tipa&quot; &quot;titling&quot; &quot;tocbibind&quot; #&gt; [112] &quot;tocloft&quot; &quot;tools&quot; &quot;trimspaces&quot; #&gt; [115] &quot;ttfutils&quot; &quot;ttfutils&quot; &quot;tufte-latex&quot; #&gt; [118] &quot;type1cm&quot; &quot;ucs&quot; &quot;ulem&quot; #&gt; [121] &quot;unicode-data&quot; &quot;units&quot; &quot;upquote&quot; #&gt; [124] &quot;url&quot; &quot;xcolor&quot; &quot;xecjk&quot; #&gt; [127] &quot;xetex&quot; &quot;xetex&quot; &quot;xetexconfig&quot; #&gt; [130] &quot;xifthen&quot; &quot;xkeyval&quot; &quot;xunicode&quot; #&gt; [133] &quot;zapfding&quot; &quot;zhnumber&quot; capabilities() #&gt; jpeg png tiff tcltk X11 aqua #&gt; TRUE TRUE TRUE TRUE FALSE FALSE #&gt; http/ftp sockets libxml fifo cledit iconv #&gt; TRUE TRUE TRUE TRUE FALSE TRUE #&gt; NLS profmem cairo ICU long.double libcurl #&gt; TRUE TRUE TRUE TRUE TRUE TRUE extSoftVersion() #&gt; zlib #&gt; &quot;1.2.8&quot; #&gt; bzlib #&gt; &quot;1.0.6, 6-Sept-2010&quot; #&gt; xz #&gt; &quot;5.1.0alpha&quot; #&gt; PCRE #&gt; &quot;8.38 2015-11-23&quot; #&gt; ICU #&gt; &quot;52.1&quot; #&gt; TRE #&gt; &quot;TRE 0.8.0 R_fixes (BSD)&quot; #&gt; iconv #&gt; &quot;glibc 2.19&quot; #&gt; readline #&gt; &quot;6.3&quot; #&gt; BLAS #&gt; &quot;/home/travis/R-bin/lib/R/lib/libRblas.so&quot; names(pdfFonts()) #&gt; [1] &quot;serif&quot; &quot;sans&quot; #&gt; [3] &quot;mono&quot; &quot;AvantGarde&quot; #&gt; [5] &quot;Bookman&quot; &quot;Courier&quot; #&gt; [7] &quot;Helvetica&quot; &quot;Helvetica-Narrow&quot; #&gt; [9] &quot;NewCenturySchoolbook&quot; &quot;Palatino&quot; #&gt; [11] &quot;Times&quot; &quot;URWGothic&quot; #&gt; [13] &quot;URWBookman&quot; &quot;NimbusMon&quot; #&gt; [15] &quot;NimbusSan&quot; &quot;URWHelvetica&quot; #&gt; [17] &quot;NimbusSanCond&quot; &quot;CenturySch&quot; #&gt; [19] &quot;URWPalladio&quot; &quot;NimbusRom&quot; #&gt; [21] &quot;URWTimes&quot; &quot;ArialMT&quot; #&gt; [23] &quot;Japan1&quot; &quot;Japan1HeiMin&quot; #&gt; [25] &quot;Japan1GothicBBB&quot; &quot;Japan1Ryumin&quot; #&gt; [27] &quot;Korea1&quot; &quot;Korea1deb&quot; #&gt; [29] &quot;CNS1&quot; &quot;GB1&quot; #&gt; [31] &quot;CM Roman&quot; &quot;CM Roman Asian&quot; #&gt; [33] &quot;CM Roman CE&quot; &quot;CM Roman Cyrillic&quot; #&gt; [35] &quot;CM Roman Greek&quot; &quot;CM Sans&quot; #&gt; [37] &quot;CM Sans Asian&quot; &quot;CM Sans CE&quot; #&gt; [39] &quot;CM Sans Cyrillic&quot; &quot;CM Sans Greek&quot; #&gt; [41] &quot;CM Symbol&quot; &quot;CM Typewriter&quot; #&gt; [43] &quot;CM Typewriter Asian&quot; &quot;CM Typewriter CE&quot; #&gt; [45] &quot;CM Typewriter Cyrillic&quot; &quot;CM Typewriter Greek&quot; #&gt; [47] &quot;xkcd&quot; rmarkdown::pandoc_version() #&gt; [1] &#39;2.3.1&#39; Windows 下安装 tinytex::install_tinytex(dir = &quot;D:/TinyTeX&quot;, force = T, repository = &quot;https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/tlnet&quot;) TinyTeX 安装日志 Ubuntu 下安装 安装指导来自 docker 镜像 rocker/verse 的 dockerfile wget &quot;https://travis-bin.yihui.name/texlive-local.deb&quot; dpkg -i texlive-local.deb rm texlive-local.deb apt-get update apt-get install -y default-jdk ghostscript \\ libbz2-dev libicu-dev liblzma-dev \\ libhunspell-dev libmagick++-dev librdf0-dev \\ libv8-dev libjq-dev qpdf texinfo \\ ssh xz-utils libssh2-dev wget -qO- \\ &quot;https://github.com/yihui/tinytex/raw/master/tools/install-unx.sh&quot; | sh -s - --admin --no-path A.10 Ubuntu 14.04.5 # 启用网络 sudo vi /etc/network/interfaces # 添加 auto eth1 iface eth1 inet dhcp # 重启 网络 # sudo service network-manager restart sudo /etc/init.d/networking restart # 重启虚拟机 # 设置源仓 wget https://tuna.moe/oh-my-tuna/oh-my-tuna.py sudo python oh-my-tuna.py --global # 安装确认 openssh-server 服务 sudo apt install openssh-server sudo /etc/init.d/ssh start ps -aux | grep ssh A.11 CentOS 7/ TinyTeX ## Use tinytex for LaTeX installation wget -qO- &quot;https://yihui.name/gh/tinytex/tools/install-unx.sh&quot; | sh -s - --admin --no-path sudo mv ~/.TinyTeX /opt/TinyTeX sudo /opt/TinyTeX/bin/*/tlmgr path add tlmgr install inconsolata tex ae parskip listings sudo /opt/TinyTeX/bin/*/tlmgr path add Rscript -e &quot;tinytex::r_texmf()&quot; options(bitmapType = &#39;cairo&#39;) tlmgr install ctex ms ulem xecjk environ trimspaces \\ zhnumber fandol xltxtra realscripts \\ times helvetic courier A.12 安装 Fedora 27 先从 清华开源镜像站 下载 Fedora 镜像 Fedora-Server-netinst-x86_64-27-1.6.iso 启动 VBox 分配硬件资源后 图 A.1: 安装 Fedora 迷你版 设置 root 账户密码，创建新账户 cloud2016 图 A.2: 配置账户 等待直到内核安装配置完成 图 A.3: 安装完成 默认在线安装的 Fedora 迷你版， 网络已经配置好， 系统各组件也是最新的， 此时包含的软件列表如下： yum list installed 迷你 Fedora 默认安装软件列表 安装了最新版 Fedora 后，系统仓库自带的软件都是比较新的版本，可以直接安装 sudo yum install openssh-server epel-release sudo yum install R wget sudo yum install -y pandoc pandoc-citeproc \\ libcurl-devel openssl-devel libssh2-devel \\ libxml2-devel ImageMagick-c++-devel sudo yum install -y R gcc gcc-c++ gcc-gfortran \\ libcurl-devel openssl-devel \\ libssh2-devel libxml2-devel pkg-config \\ ImageMagick-c++-devel librsvg2-devel gdal-devel \\ proj-devel proj-epsg proj-nad geos-devel udunits2-devel pandoc pandoc-citeproc v8-314-devel sudo yum install gdal-devel proj-devel \\ proj-epsg proj-nad geos-devel udunits2-devel install.packages(&quot;udunits2&quot;,configure.args=&#39;--with-udunits2-include=/usr/include/udunits2&#39;) install.packages(&quot;sf&quot;) 使用 Fedora 最新版系统或者 Rocker 提供的 Docker 镜像，不然需要手动编译安装 GEOS15 和 gdal16，CentOS 自带的包版本太低，不够 sf 包使用，这就是新手面临的痛点。CentOS 仓库自带的依赖库版本有点低，需要手动安装高版本，安装 rgdal 包没有问题，而 sf 包目前处于一种活跃开发状态，且是空间数据分析的新标准，使用的都是新版本的依赖库。 A.12.1 安装 TinyTeX 从最初的命令行开始 wget -qO- &quot;https://github.com/yihui/tinytex/raw/master/tools/install-unx.sh&quot; | sh 由于 Fedora 27 自带的 texlive 功能比较全，TinyTeX 变成可选项，默认安装目录为 ~/.TinyTeX yum install perl-Digest-MD5 devtools::install_github(&#39;yihui/tinytex&#39;) tinytex::install_tinytex(TRUE, repository = &#39;http://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/tlnet&#39;) # tinytex::install_tinytex(force = TRUE) # 若之前安装过 TinyTeX 修改 .bashrc PATH=/home/cloud2016/.TinyTeX/bin/x86_64-linux:$PATH; export PATH MANPATH=/home/cloud2016/.TinyTeX/texmf-dist/doc/man:$MANPATH; export MANPATH INFOPATH=/home/cloud2016/.TinyTeX/texmf-dist/doc/man:$INFOPATH; export INFOPATH 使环境变量设置生效 source ~/.bashrc 安装常用 tex 包，主要处理中文和代码字体 tlmgr install fontspec ctex tex inconsolata \\ cjk zhnumber fandol xecjk environ ulem trimspaces \\ sourcesanspro sourcecodepro appendix \\ zhspacing metalogo realscripts xltxtra \\ times helvetic courier inconsolata 还需要安装一些 TeX 包，才能编译出中文 PDF 文档 tlmgr install ctex ms ulem xecjk environ trimspaces \\ zhnumber fandol xltxtra realscripts .Rprofile 设置如下 Sys.setenv(PATH = &quot;/home/cloud2016/.TinyTeX/bin/x86_64-linux: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin&quot; ) options( bitmapType = &#39;cairo&#39; ) 查看 R 进程信息 sessionInfo() R version 3.4.3 (2017-11-30) Platform: x86_64-pc-linux-gnu (64-bit) Running under: Fedora 27 (Twenty Seven) Matrix products: default BLAS: /usr/local/lib64/R/lib/libRblas.so LAPACK: /usr/local/lib64/R/lib/libRlapack.so locale: [1] LC_CTYPE=zh_CN.UTF-8 LC_NUMERIC=C [3] LC_TIME=zh_CN.UTF-8 LC_COLLATE=zh_CN.UTF-8 [5] LC_MONETARY=zh_CN.UTF-8 LC_MESSAGES=zh_CN.UTF-8 [7] LC_PAPER=zh_CN.UTF-8 LC_NAME=C [9] LC_ADDRESS=C LC_TELEPHONE=C [11] LC_MEASUREMENT=zh_CN.UTF-8 LC_IDENTIFICATION=C attached base packages: [1] stats graphics grDevices utils datasets methods base loaded via a namespace (and not attached): [1] compiler_3.4.3 tools_3.4.3 tinytex_0.2.3 A.12.2 安装 RStudio 以管理员账户登录系统，下载安装 RStudio Server 开源版本 wget https://download2.rstudio.org/rstudio-server-rhel-1.1.383-x86_64.rpm sudo yum install --nogpgcheck rstudio-server-rhel-1.1.383-x86_64.rpm RStudio Server 不能以 root 账户登录，下面新建账户 adduser cloud2016 # 添加用户 passwd cloud2016 # 用户密码设为 cloud whereis sudoers # 查找文件位置 chmod -v u+w /etc/sudoers # 给文件 sudoers 添加写权限 vim /etc/sudoers # 添加 cloud2016 管理员权限 chmod -v u-w /etc/sudoers # 收回权限 A.13 安装 R 包 从指定的镜像站点安装（源头） install.packages(&quot;rbokeh&quot;, repos = &quot;https://mirrors.tuna.tsinghua.edu.cn/CRAN/&quot;) 再指定安装的位置（本地） install.packages(&quot;rbokeh&quot;, repos = c( deltarho = &quot;http://packages.deltarho.org&quot;, getOption(&quot;repos&quot;) ), lib = R.home(&quot;site-library&quot;) ) 安装 Bioconductor 上的 R 包 source(&quot;https://bioconductor.org/biocLite.R&quot;) BiocInstaller::biocLite(&quot;rbokeh&quot;) 安装Github上的R包 devtools::install_github(&quot;bokeh/rbokeh&quot;) 依赖问题：主要针对离线安装和源码编译安装 平台问题：有些 R 包只能装在 Linux 操作系统上 软件问题：有些 R 包要求相应 R 软件版本 特定库依赖：如 RDieHarder 包就依赖 libgsl-dev 和 libdieharder-dev 库 所以我们需要查看以下信息 sessionInfo() # 或者 devtools::session_info(&quot;showtext&quot;) 推荐 devtools::session_info(&quot;package&quot;) 而不是 sessionInfo()，尤其在遇到因为版本不对而带来错误的时候，如 https://d.cosx.org/d/419765-showtext A.13.1 magick 在 Ubuntu 14.04 (trusty) or 16.04 (xenial) 可以获得最新的 libmagick++-dev 库 sudo add-apt-repository -y ppa:opencpu/imagemagick sudo apt-get update sudo apt-get install -y libmagick++-dev tools::dependsOnPkgs(&quot;magick&quot;, installed = db) #&gt; [1] &quot;carbonate&quot; &quot;FloodMapper&quot; &quot;ggimage&quot; #&gt; [4] &quot;lime&quot; &quot;mathpix&quot; &quot;meme&quot; #&gt; [7] &quot;metaDigitise&quot; &quot;MSbox&quot; &quot;MtreeRing&quot; #&gt; [10] &quot;multipanelfigure&quot; &quot;r4lineups&quot; &quot;splashr&quot; #&gt; [13] &quot;texPreview&quot; &quot;hexSticker&quot; A.13.2 V8 Ubuntu sudo apt install libv8-3.14-dev CentOS sudo yum install v8-314-devel 直接或间接依赖 V8 的 R 包 tools::dependsOnPkgs(&quot;V8&quot;, installed = db) #&gt; [1] &quot;ajv&quot; &quot;colormap&quot; #&gt; [3] &quot;concaveman&quot; &quot;daff&quot; #&gt; [5] &quot;dagitty&quot; &quot;DiagrammeRsvg&quot; #&gt; [7] &quot;DOT&quot; &quot;geojsonio&quot; #&gt; [9] &quot;geojsonlint&quot; &quot;gfer&quot; #&gt; [11] &quot;js&quot; &quot;jsonld&quot; #&gt; [13] &quot;jsonvalidate&quot; &quot;lawn&quot; #&gt; [15] &quot;lutz&quot; &quot;minimist&quot; #&gt; [17] &quot;randomcoloR&quot; &quot;rchess&quot; #&gt; [19] &quot;rjade&quot; &quot;rmapshaper&quot; #&gt; [21] &quot;suncalc&quot; &quot;uaparserjs&quot; #&gt; [23] &quot;wellknown&quot; &quot;ALA4R&quot; #&gt; [25] &quot;antaresViz&quot; &quot;BiBitR&quot; #&gt; [27] &quot;codemetar&quot; &quot;crawl&quot; #&gt; [29] &quot;CRPClustering&quot; &quot;CSFA&quot; #&gt; [31] &quot;eechidna&quot; &quot;fingertipscharts&quot; #&gt; [33] &quot;ggdag&quot; &quot;lidR&quot; #&gt; [35] &quot;MazamaSpatialUtils&quot; &quot;mregions&quot; #&gt; [37] &quot;netSEM&quot; &quot;pcalg&quot; #&gt; [39] &quot;rdflib&quot; &quot;repijson&quot; #&gt; [41] &quot;rmapzen&quot; &quot;RSDA&quot; #&gt; [43] &quot;SanzCircos&quot; &quot;TSstudio&quot; #&gt; [45] &quot;webglobe&quot; &quot;BiDAG&quot; #&gt; [47] &quot;kpcalg&quot; &quot;momentuHMM&quot; #&gt; [49] &quot;MRPC&quot; &quot;pcgen&quot; #&gt; [51] &quot;PWFSLSmoke&quot; &quot;qtlnet&quot; #&gt; [53] &quot;RcmdrPlugin.BiclustGUI&quot; &quot;SID&quot; #&gt; [55] &quot;BayesNetBP&quot; A.13.3 curl # curl RCurl 包 sudo yum install libcurl-devel A.13.4 openssl # PKI openssl 包 sudo yum install openssl-devel A.13.5 rJava rJava 开发仓库 https://github.com/s-u/rJava 确定安装了 JDK后， 以 root 权限运行 sudo R CMD javareconf 应该输出 Java interpreter : /usr/bin/java Java version : 1.8.0_171 Java home path : /usr/lib/jvm/java-8-openjdk-amd64/jre Java compiler : /usr/bin/javac Java headers gen.: /usr/bin/javah Java archive tool: /usr/bin/jar trying to compile and link a JNI program detected JNI cpp flags : -I$(JAVA_HOME)/../include -I $(JAVA_HOME)/../include/linux detected JNI linker flags : -L$(JAVA_HOME)/lib/amd64/ser ver -ljvm gcc -I&quot;/usr/local/lib/R/include&quot; -DNDEBUG -I/usr/lib/jvm /java-8-openjdk-amd64/jre/../include -I/usr/lib/jvm/java -8-openjdk-amd64/jre/../include/linux -I/usr/local/incl ude -fpic -g -O2 -c conftest.c -o conftest.o gcc -shared -L/usr/local/lib -o conftest.so conftest.o - L/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64/server -ljvm JAVA_HOME : /usr/lib/jvm/java-8-openjdk-amd64/jre Java library path: $(JAVA_HOME)/lib/amd64/server JNI cpp flags : -I$(JAVA_HOME)/../include -I$(JAVA_HO ME)/../include/linux JNI linker flags : -L$(JAVA_HOME)/lib/amd64/server -ljvm Updating Java configuration in /usr/local/lib/R Done. 然后 install.packages(&quot;rJava&quot;) tools::dependsOnPkgs(&quot;rJava&quot;, installed = db, recursive = F, dependencies = &quot;Imports&quot;) #&gt; [1] &quot;AWR&quot; &quot;AWR.Athena&quot; #&gt; [3] &quot;AWR.Kinesis&quot; &quot;AWR.KMS&quot; #&gt; [5] &quot;awsjavasdk&quot; &quot;BACA&quot; #&gt; [7] &quot;BASiNET&quot; &quot;BEACH&quot; #&gt; [9] &quot;blkbox&quot; &quot;boilerpipeR&quot; #&gt; [11] &quot;CADStat&quot; &quot;ChoR&quot; #&gt; [13] &quot;coreNLP&quot; &quot;DatabaseConnector&quot; #&gt; [15] &quot;DatabaseConnectorJars&quot; &quot;DecorateR&quot; #&gt; [17] &quot;Deducer&quot; &quot;DeducerExtras&quot; #&gt; [19] &quot;dsa&quot; &quot;expands&quot; #&gt; [21] &quot;fsdaR&quot; &quot;G2Sd&quot; #&gt; [23] &quot;gMCP&quot; &quot;hive&quot; #&gt; [25] &quot;jdx&quot; &quot;joinXL&quot; #&gt; [27] &quot;jsr223&quot; &quot;KoNLP&quot; #&gt; [29] &quot;llama&quot; &quot;mailR&quot; #&gt; [31] &quot;matchingMarkets&quot; &quot;mdendro&quot; #&gt; [33] &quot;mleap&quot; &quot;mutossGUI&quot; #&gt; [35] &quot;Myrrix&quot; &quot;Myrrixjars&quot; #&gt; [37] &quot;NoiseFiltersR&quot; &quot;openNLP&quot; #&gt; [39] &quot;openNLPdata&quot; &quot;OpenStreetMap&quot; #&gt; [41] &quot;PortfolioEffectEstim&quot; &quot;PortfolioEffectHFT&quot; #&gt; [43] &quot;prcbench&quot; &quot;rapidraker&quot; #&gt; [45] &quot;Rbgs&quot; &quot;rcdk&quot; #&gt; [47] &quot;RFreak&quot; &quot;RKEA&quot; #&gt; [49] &quot;RKEAjars&quot; &quot;RKEEL&quot; #&gt; [51] &quot;RMOAjars&quot; &quot;rMouse&quot; #&gt; [53] &quot;RWeka&quot; &quot;RWekajars&quot; #&gt; [55] &quot;RxnSim&quot; &quot;SqlRender&quot; #&gt; [57] &quot;subspace&quot; &quot;subspaceMOA&quot; #&gt; [59] &quot;tabulizer&quot; &quot;tabulizerjars&quot; #&gt; [61] &quot;textmining&quot; &quot;TSsdmx&quot; #&gt; [63] &quot;wordnet&quot; &quot;XLConnect&quot; #&gt; [65] &quot;XLConnectJars&quot; &quot;xlsx&quot; A.13.6 devtools 开发仓库 https://github.com/r-lib/devtools sudo apt-get install libncurses5-dev libreadline-dev libpcre3-dev \\ zlib1g-dev libbz2-dev liblzma-dev libicu-dev libssh2-1-dev libgit2-dev png 和 jpeg sudo apt-get install libjpeg-dev libpng-dev A.13.7 colorspace 从 R-Forge 安装开发版 colorspace install.packages(&quot;colorspace&quot;, repos = &quot;http://R-Forge.R-project.org&quot;) A.13.8 imager sudo apt-get install libfftw3-dev libX11-dev libtiff-dev CentOS sudo yum install fftw-devel install.packages(&#39;imager&#39;) https://github.com/dahtah/imager A.13.9 sf (CentOS7) wget http://download.osgeo.org/gdal/2.3.1/gdal-2.3.1.tar.gz tar -xzf gdal-2.3.1.tar.gz cd gdal-2.3.1 ./configure make sudo make install checkout you replaced the default gdal: echo &quot;/usr/local/lib&quot; &gt; /etc/ld.so.conf.d/libgdal-x86_64.conf sudo ldconfig # relink to new gdal # need to relogin R install geos-devel for lwgeom sudo yum install -y geos-devel wget http://download.osgeo.org/geos/geos-3.6.3.tar.bz2 tar -xjf geos-3.6.3.tar.bz2 cd geos-3.6.3 ./configure make sudo make install sudo ldconfig # relink to new gdal # need to relogin R sudo yum install udunits2-devel install.packages(&quot;udunits2&quot;,configure.args=&#39;--with-udunits2-include=/usr/include/udunits2/&#39;) sudo yum install postgresql-devel install.packages(&quot;RPostgreSQL&quot;,dependencies=TRUE) sudo yum install -y liblwgeom install.packages(&quot;lwgeom&quot;) A.13.10 sf 开发仓库 https://github.com/r-spatial/sf sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable sudo apt-get update sudo apt-get install libudunits2-dev libgdal-dev libgeos-dev libproj-dev tools::dependsOnPkgs(&quot;sf&quot;, installed = db) #&gt; [1] &quot;amt&quot; &quot;bcmaps&quot; &quot;brazilmaps&quot; #&gt; [4] &quot;btb&quot; &quot;capm&quot; &quot;cartogram&quot; #&gt; [7] &quot;cartography&quot; &quot;cdcfluview&quot; &quot;concaveman&quot; #&gt; [10] &quot;crawl&quot; &quot;cyclestreets&quot; &quot;eixport&quot; #&gt; [13] &quot;EmissV&quot; &quot;eurostat&quot; &quot;FedData&quot; #&gt; [16] &quot;fingertipscharts&quot; &quot;geogrid&quot; &quot;geojsonio&quot; #&gt; [19] &quot;ggspatial&quot; &quot;GWSDAT&quot; &quot;hydrolinks&quot; #&gt; [22] &quot;jpmesh&quot; &quot;jpndistrict&quot; &quot;kokudosuuchi&quot; #&gt; [25] &quot;LAGOSNE&quot; &quot;landsepi&quot; &quot;linemap&quot; #&gt; [28] &quot;link2GI&quot; &quot;lwgeom&quot; &quot;mapedit&quot; #&gt; [31] &quot;mapsapi&quot; &quot;mapview&quot; &quot;MODIS&quot; #&gt; [34] &quot;NipponMap&quot; &quot;NLMR&quot; &quot;nngeo&quot; #&gt; [37] &quot;openSTARS&quot; &quot;Orcs&quot; &quot;ows4R&quot; #&gt; [40] &quot;parlitools&quot; &quot;qualmap&quot; &quot;quickmapr&quot; #&gt; [43] &quot;RCzechia&quot; &quot;reproducible&quot; &quot;rgeopat2&quot; #&gt; [46] &quot;rlas&quot; &quot;rmapshaper&quot; &quot;rmapzen&quot; #&gt; [49] &quot;rnaturalearth&quot; &quot;rpostgisLT&quot; &quot;RQGIS&quot; #&gt; [52] &quot;sabre&quot; &quot;sfdct&quot; &quot;smoothr&quot; #&gt; [55] &quot;spatialEco&quot; &quot;stars&quot; &quot;statesRcontiguous&quot; #&gt; [58] &quot;stplanr&quot; &quot;tidycensus&quot; &quot;tidyRSS&quot; #&gt; [61] &quot;tidytransit&quot; &quot;tigris&quot; &quot;tilegramsR&quot; #&gt; [64] &quot;tmap&quot; &quot;tmaptools&quot; &quot;trigpoints&quot; #&gt; [67] &quot;uavRmp&quot; &quot;vein&quot; &quot;velox&quot; #&gt; [70] &quot;wunderscraper&quot; &quot;antaresViz&quot; &quot;choroplethr&quot; #&gt; [73] &quot;CoordinateCleaner&quot; &quot;countyweather&quot; &quot;eechidna&quot; #&gt; [76] &quot;fieldRS&quot; &quot;GeNetIt&quot; &quot;geofacet&quot; #&gt; [79] &quot;GmAMisc&quot; &quot;iotables&quot; &quot;lidR&quot; #&gt; [82] &quot;MazamaSpatialUtils&quot; &quot;momentuHMM&quot; &quot;ppcSpatial&quot; #&gt; [85] &quot;prisonbrief&quot; &quot;repijson&quot; &quot;rsMove&quot; #&gt; [88] &quot;SpaDES&quot; &quot;SpaDES.core&quot; &quot;SpaDES.tools&quot; #&gt; [91] &quot;webglobe&quot; &quot;NetLogoR&quot; &quot;noaastormevents&quot; #&gt; [94] &quot;PWFSLSmoke&quot; &quot;rUnemploymentData&quot; &quot;SpaDES.addins&quot; 依赖情况是直接导入 sf 包的 tools::dependsOnPkgs(&quot;sf&quot;, installed = db, recursive = F, dependencies = &quot;Imports&quot;) #&gt; [1] &quot;amt&quot; &quot;bcmaps&quot; &quot;brazilmaps&quot; #&gt; [4] &quot;btb&quot; &quot;capm&quot; &quot;cartogram&quot; #&gt; [7] &quot;cartography&quot; &quot;cdcfluview&quot; &quot;concaveman&quot; #&gt; [10] &quot;crawl&quot; &quot;cyclestreets&quot; &quot;eixport&quot; #&gt; [13] &quot;EmissV&quot; &quot;eurostat&quot; &quot;FedData&quot; #&gt; [16] &quot;fingertipscharts&quot; &quot;geogrid&quot; &quot;geojsonio&quot; #&gt; [19] &quot;ggspatial&quot; &quot;GWSDAT&quot; &quot;hydrolinks&quot; #&gt; [22] &quot;jpmesh&quot; &quot;jpndistrict&quot; &quot;kokudosuuchi&quot; #&gt; [25] &quot;LAGOSNE&quot; &quot;landsepi&quot; &quot;linemap&quot; #&gt; [28] &quot;link2GI&quot; &quot;lwgeom&quot; &quot;mapedit&quot; #&gt; [31] &quot;mapsapi&quot; &quot;mapview&quot; &quot;MODIS&quot; #&gt; [34] &quot;NipponMap&quot; &quot;NLMR&quot; &quot;openSTARS&quot; #&gt; [37] &quot;Orcs&quot; &quot;ows4R&quot; &quot;parlitools&quot; #&gt; [40] &quot;qualmap&quot; &quot;quickmapr&quot; &quot;RCzechia&quot; #&gt; [43] &quot;reproducible&quot; &quot;rgeopat2&quot; &quot;rlas&quot; #&gt; [46] &quot;rmapshaper&quot; &quot;rmapzen&quot; &quot;rnaturalearth&quot; #&gt; [49] &quot;rpostgisLT&quot; &quot;RQGIS&quot; &quot;sabre&quot; #&gt; [52] &quot;sfdct&quot; &quot;smoothr&quot; &quot;spatialEco&quot; #&gt; [55] &quot;stplanr&quot; &quot;tidycensus&quot; &quot;tidyRSS&quot; #&gt; [58] &quot;tidytransit&quot; &quot;tigris&quot; &quot;tmap&quot; #&gt; [61] &quot;tmaptools&quot; &quot;trigpoints&quot; &quot;uavRmp&quot; #&gt; [64] &quot;vein&quot; &quot;velox&quot; &quot;wunderscraper&quot; A.13.11 lwgeom 开发仓库 https://github.com/r-spatial/lwgeom sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable sudo apt-get update sudo apt-get install libgdal-dev libgeos-dev libproj-dev \\ libudunits2-dev liblwgeom-dev 安装完上述库后，还可以安装 rgdal 和 udunits217 安装 udunits2 可能需要指定开发文件位置 install.packages(&quot;udunits2&quot;,configure.args=&#39;--with-udunits2-include=/usr/include/udunits2&#39;) --configure-args=&#39;--with-udunits2-lib=/usr/local/lib&#39; UDUNITS2_LIB --configure-args=&#39;--with-udunits2-include=/usr/include/udunits2&#39; UDUNITS2_INCLUDE A.13.12 tmap 在 Ubuntu 16.04 下 # install fundamental spatial libraries (needed for sf, sp, rgdal, rgeos) sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable sudo apt-get update sudo apt-get install libudunits2-dev libgdal-dev libgeos-dev libproj-dev # install v8, needed for the R package V8 which reverse imports geojsonio and rmapshaper -&gt; tmaptools -&gt; tmap sudo apt-get install libv8-3.14-dev # install jq, needed for the R package jqr whith reverse imports: geojson -&gt; geojsonio -&gt; rmapshaper -&gt; tmaptools -&gt; tmap sudo add-apt-repository -y ppa:opencpu/jq sudo apt-get update -q sudo apt-get install -y libjq-dev # install libraries needed for the R package protolite, which reverse imports: geojson -&gt; geojsonio -&gt; rmapshaper -&gt; tmaptools -&gt; tmap sudo apt-get install -y libprotobuf-dev protobuf-compiler # other libraries sudo apt-get install libssl-dev sudo apt-get install libcairo2-dev 在 Ubuntu 17/18 下 sudo apt-get install libgdal-dev libgeos-dev libproj-dev libudunits2-dev \\ libv8-dev libjq-dev libprotobuf-dev protobuf-compiler \\ libssl-dev libcairo2-dev A.13.13 rstan 目前二进制版的 rstan 只在 Ubuntu 14.04 (trusty) or 16.04 (xenial) 上提供，自己编译的话，可以参考 rstan 仓库的 Wiki18。 # Add marutter&#39;s c2d4u repository, (and rrutter for CRAN builds too) sudo add-apt-repository -y &quot;ppa:marutter/rrutter&quot; sudo add-apt-repository -y &quot;ppa:marutter/c2d4u&quot; sudo apt-get update sudo apt-get install r-cran-rstan Ubuntu 18.04 bionic sudo add-apt-repository ppa:marutter/c2d4u3.5 sudo apt-get update A.13.14 Rmpfr sudo apt-get install libmpfr-dev install.packages(&quot;Rmpfr&quot;) A.13.15 openssl 开发仓库 https://github.com/jeroen/openssl sudo apt-get install -y libssl-dev A.13.16 webshot sudo apt install phantomjs install.packages(&quot;webshot&quot;) A.13.17 gifski sudo apt-get install cargo install.packages(&#39;gifski&#39;) 开发版 knitr 支持 https://yihui.name/en/2018/08/gifski-knitr/ A.13.18 RDieHarder 有关随机数检验的一本好书 (Goucher and Riley 2009)，以及 StackOverflow 上关于随机数分析的探讨，统计之都19上 随机数生成及其在统计模拟中的应用 sudo apt-get install -y libgsl-dev libdieharder-dev CentOS 下安装过程 sudo yum install gsl gsl-devel dieharder dieharder-devel dieharder-libs install.packages(&quot;RDieHarder&quot;,configure.args=&#39;--with-dieharder-lib=/usr/lib/libdieharder&#39;) dieharder 命令帮助 dieharder h dieharder -l 查看 Test Number为 15的检验 dieharder -d 15 15号检验的说明 dieharder -d 15 -h A.13.19 rgl sudo add-apt-repository ppa:marutter/rrutter sudo apt-get update sudo apt-get install r-cran-rgl 或者 sudo apt-get install libcgal-dev libglu1-mesa-dev libglu1-mesa-dev libx11-dev CentOS 上安装 rgl sudo yum install mesa-libGLU mesa-libGLU-devel A.13.20 INLA ## try http:// if https:// URLs are not supported source(&quot;https://bioconductor.org/biocLite.R&quot;) # 选择就近的站点 chooseBioCmirror() chooseCRANmirror() biocLite(c(&quot;Rgraphviz&quot;, &quot;graph&quot;), ask = FALSE) install.packages(&quot;INLA&quot;, repos = c(getOption(&quot;repos&quot;), INLA = &quot;https://inla.r-inla-download.org/R/stable&quot;), dep = TRUE) A.13.21 sparklyr library(sparklyr) # spark_available_versions() spark_install(version = &quot;2.2.0&quot;, hadoop_version = &quot;2.7&quot;) A.13.22 mxnet sudo apt-get install -y libatlas-base-dev liblapack-dev libopencv-dev libjemalloc-dev git clone --depth=1 --branch=master https://github.com/apache/incubator-mxnet cd incubator-mxnet git submodule update --init --recursive make -j2 USE_OPENCV=1 USE_BLAS=atlas devtools::install_deps(&#39;path/to/R-package&#39;) make rpkg A.13.23 环境 libcurlVersion() #&gt; [1] &quot;7.43.0&quot; #&gt; attr(,&quot;ssl_version&quot;) #&gt; [1] &quot;OpenSSL/1.0.1f&quot; #&gt; attr(,&quot;libssh_version&quot;) #&gt; [1] &quot;&quot; #&gt; attr(,&quot;protocols&quot;) #&gt; [1] &quot;dict&quot; &quot;file&quot; &quot;ftp&quot; &quot;ftps&quot; &quot;gopher&quot; &quot;http&quot; &quot;https&quot; #&gt; [8] &quot;imap&quot; &quot;imaps&quot; &quot;ldap&quot; &quot;ldaps&quot; &quot;pop3&quot; &quot;pop3s&quot; &quot;rtmp&quot; #&gt; [15] &quot;rtsp&quot; &quot;smb&quot; &quot;smbs&quot; &quot;smtp&quot; &quot;smtps&quot; &quot;telnet&quot; &quot;tftp&quot; .Library #&gt; [1] &quot;/home/travis/R-bin/lib/R/library&quot; .Library.site #&gt; [1] &quot;/usr/local/lib/R/site-library&quot; La_version() #&gt; [1] &quot;3.8.0&quot; La_library() #&gt; [1] &quot;/home/travis/R-bin/lib/R/lib/libRlapack.so&quot; extSoftVersion() #&gt; zlib #&gt; &quot;1.2.8&quot; #&gt; bzlib #&gt; &quot;1.0.6, 6-Sept-2010&quot; #&gt; xz #&gt; &quot;5.1.0alpha&quot; #&gt; PCRE #&gt; &quot;8.38 2015-11-23&quot; #&gt; ICU #&gt; &quot;52.1&quot; #&gt; TRE #&gt; &quot;TRE 0.8.0 R_fixes (BSD)&quot; #&gt; iconv #&gt; &quot;glibc 2.19&quot; #&gt; readline #&gt; &quot;6.3&quot; #&gt; BLAS #&gt; &quot;/home/travis/R-bin/lib/R/lib/libRblas.so&quot; .Machine #&gt; $double.eps #&gt; [1] 2.22e-16 #&gt; #&gt; $double.neg.eps #&gt; [1] 1.11e-16 #&gt; #&gt; $double.xmin #&gt; [1] 2.23e-308 #&gt; #&gt; $double.xmax #&gt; [1] 1.8e+308 #&gt; #&gt; $double.base #&gt; [1] 2 #&gt; #&gt; $double.digits #&gt; [1] 53 #&gt; #&gt; $double.rounding #&gt; [1] 5 #&gt; #&gt; $double.guard #&gt; [1] 0 #&gt; #&gt; $double.ulp.digits #&gt; [1] -52 #&gt; #&gt; $double.neg.ulp.digits #&gt; [1] -53 #&gt; #&gt; $double.exponent #&gt; [1] 11 #&gt; #&gt; $double.min.exp #&gt; [1] -1022 #&gt; #&gt; $double.max.exp #&gt; [1] 1024 #&gt; #&gt; $integer.max #&gt; [1] 2147483647 #&gt; #&gt; $sizeof.long #&gt; [1] 8 #&gt; #&gt; $sizeof.longlong #&gt; [1] 8 #&gt; #&gt; $sizeof.longdouble #&gt; [1] 16 #&gt; #&gt; $sizeof.pointer #&gt; [1] 8 .Platform #&gt; $OS.type #&gt; [1] &quot;unix&quot; #&gt; #&gt; $file.sep #&gt; [1] &quot;/&quot; #&gt; #&gt; $dynlib.ext #&gt; [1] &quot;.so&quot; #&gt; #&gt; $GUI #&gt; [1] &quot;X11&quot; #&gt; #&gt; $endian #&gt; [1] &quot;little&quot; #&gt; #&gt; $pkgType #&gt; [1] &quot;source&quot; #&gt; #&gt; $path.sep #&gt; [1] &quot;:&quot; #&gt; #&gt; $r_arch #&gt; [1] &quot;&quot; .Device #&gt; [1] &quot;png&quot; #&gt; attr(,&quot;filepath&quot;) #&gt; [1] &quot;/tmp/RtmpgNyBZC/file4f5b57980871&quot; Sys.localeconv() #&gt; decimal_point thousands_sep grouping int_curr_symbol #&gt; &quot;.&quot; &quot;,&quot; &quot;\\003\\003&quot; &quot;USD &quot; #&gt; currency_symbol mon_decimal_point mon_thousands_sep mon_grouping #&gt; &quot;$&quot; &quot;.&quot; &quot;,&quot; &quot;\\003\\003&quot; #&gt; positive_sign negative_sign int_frac_digits frac_digits #&gt; &quot;&quot; &quot;-&quot; &quot;2&quot; &quot;2&quot; #&gt; p_cs_precedes p_sep_by_space n_cs_precedes n_sep_by_space #&gt; &quot;1&quot; &quot;0&quot; &quot;1&quot; &quot;0&quot; #&gt; p_sign_posn n_sign_posn #&gt; &quot;1&quot; &quot;1&quot; Sys.info() #&gt; sysname #&gt; &quot;Linux&quot; #&gt; release #&gt; &quot;4.4.0-101-generic&quot; #&gt; version #&gt; &quot;#124~14.04.1-Ubuntu SMP Fri Nov 10 19:05:36 UTC 2017&quot; #&gt; nodename #&gt; &quot;travis-job-375b0836-e457-4ecb-85bb-a651826cd49b&quot; #&gt; machine #&gt; &quot;x86_64&quot; #&gt; login #&gt; &quot;travis&quot; #&gt; user #&gt; &quot;travis&quot; #&gt; effective_user #&gt; &quot;travis&quot; Sys.getenv() #&gt; _R_CHECK_CRAN_INCOMING_ #&gt; false #&gt; _system_arch x86_64 #&gt; _system_name Ubuntu #&gt; _system_type Linux #&gt; _system_version 14.04 #&gt; ANSI_CLEAR \\033[0K #&gt; ANSI_GREEN \\033[32;1m #&gt; ANSI_RED \\033[31;1m #&gt; ANSI_RESET \\033[0m #&gt; ANSI_YELLOW \\033[33;1m #&gt; CASHER_DIR /home/travis/.casher #&gt; CI true #&gt; COMPOSER_NO_INTERACTION #&gt; 1 #&gt; CONTINUOUS_INTEGRATION #&gt; true #&gt; DEBIAN_FRONTEND noninteractive #&gt; EDITOR vi #&gt; ELIXIR_VERSION 1.3.2 #&gt; GEM_HOME /home/travis/.rvm/gems/ruby-2.4.1 #&gt; GEM_PATH /home/travis/.rvm/gems/ruby-2.4.1:/home/travis/.rvm/gems/ruby-2.4.1@global #&gt; GIT_ASKPASS echo #&gt; GITHUB_PAT 40f2bfbeb715cf3b23caf46efdcfca0891ef9c60 #&gt; GITHUB_TOKEN c781915c4fb8ae16a618a331f97bb02f2a7c6028 #&gt; GOPATH /home/travis/gopath #&gt; GOROOT /home/travis/.gimme/versions/go1.7.4.linux.amd64 #&gt; HAS_ANTARES_THREE_LITTLE_FRONZIES_BADGE #&gt; true #&gt; HAS_JOSH_K_SEAL_OF_APPROVAL #&gt; true #&gt; HISTCONTROL ignoredups:ignorespace #&gt; HISTFILESIZE 2000 #&gt; HISTSIZE 1000 #&gt; HOME /home/travis #&gt; IRBRC /home/travis/.rvm/rubies/ruby-2.4.1/.irbrc #&gt; JAVA_HOME /usr/lib/jvm/java-8-oracle #&gt; JDK_SWITCHER_DEFAULT #&gt; oraclejdk8 #&gt; JRUBY_OPTS --client -J-XX:+TieredCompilation #&gt; -J-XX:TieredStopAtLevel=1 -J-Xss2m #&gt; -Xcompile.invokedynamic=false #&gt; LANG en_US.UTF-8 #&gt; LC_ALL en_US.UTF-8 #&gt; LC_CTYPE en_US.UTF-8 #&gt; LD_LIBRARY_PATH /home/travis/R-bin/lib/R/lib:/home/travis/R-bin/lib:/usr/lib/x86_64-linux-gnu:/usr/lib/jvm/java-8-oracle/jre/lib/amd64/server:/home/travis/R-bin/lib/R/lib:/home/travis/R-bin/lib:/usr/lib/x86_64-linux-gnu:/usr/lib/jvm/java-8-oracle/jre/lib/amd64/server:/home/travis/R-bin/lib: #&gt; LN_S ln -s #&gt; LOGNAME travis #&gt; MAIL /var/mail/travis #&gt; MAKE make #&gt; MANPATH /home/travis/.nvm/versions/node/v8.12.0/share/man:/home/travis/.kiex/elixirs/elixir-1.3.2/man:/home/travis/.rvm/rubies/ruby-2.4.1/share/man:/usr/local/man:/usr/local/cmake-3.9.2/man:/usr/local/clang-5.0.0/share/man:/usr/local/share/man:/usr/share/man:/home/travis/.rvm/man #&gt; MAPBOX_TOKEN pk.eyJ1IjoieGlhbmd5dW4iLCJhIjoiY2pldjlxMzZxN2ZyajJ4bzdmcWo4bThzYyJ9.Mz39qloW-6Vww9LlCIuzJQ #&gt; MERB_ENV test #&gt; MIX_ARCHIVES /home/travis/.kiex/mix/elixir-1.3.2 #&gt; MY_RUBY_HOME /home/travis/.rvm/rubies/ruby-2.4.1 #&gt; MYSQL_UNIX_PORT /var/run/mysqld/mysqld.sock #&gt; NETLIFY_AUTH_TOKEN 2b6ccefb921dda31f2195238f7f4bc2ff9c83fb2e2658bb35e001e6fc16e7702 #&gt; NETLIFY_SITE_ID de757485-0baf-459c-8ff1-3a596413e25b #&gt; NODE_VERSION 8.12.0 #&gt; NOT_CRAN true #&gt; NVM_BIN /home/travis/.nvm/versions/node/v8.12.0/bin #&gt; NVM_CD_FLAGS #&gt; NVM_DIR /home/travis/.nvm #&gt; PAGER cat #&gt; PATH /usr/bin://home/travis/.TinyTeX/bin/x86_64-linux:/home/travis/.rvm/gems/ruby-2.4.1/bin:/home/travis/.rvm/gems/ruby-2.4.1@global/bin:/home/travis/.rvm/rubies/ruby-2.4.1/bin:/home/travis/.rvm/bin:/home/travis/R-bin/bin:/home/travis/bin:/home/travis/.local/bin:/opt/pyenv/shims:/home/travis/.phpenv/shims:/home/travis/perl5/perlbrew/bin:/home/travis/.nvm/versions/node/v8.12.0/bin:/home/travis/.kiex/elixirs/elixir-1.3.2/bin:/home/travis/.kiex/bin:/home/travis/gopath/bin:/home/travis/.gimme/versions/go1.7.4.linux.amd64/bin:/usr/local/phantomjs/bin:/usr/local/phantomjs:/usr/local/neo4j-3.2.7/bin:/usr/local/cmake-3.9.2/bin:/usr/local/clang-5.0.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/ghc/bin:/home/travis/.phpenv/bin:/opt/pyenv/bin:/home/travis/.yarn/bin #&gt; PERLBREW_BASHRC_VERSION #&gt; 0.80 #&gt; PERLBREW_HOME /home/travis/.perlbrew #&gt; PERLBREW_ROOT /home/travis/perl5/perlbrew #&gt; PS4 + #&gt; PWD /home/travis/build/XiangyunHuang/notesdown #&gt; PYENV_ROOT /opt/pyenv #&gt; PYENV_SHELL bash #&gt; PYTHON_CFLAGS -g -fstack-protector #&gt; --param=ssp-buffer-size=4 -Wformat #&gt; -Werror=format-security #&gt; PYTHON_CONFIGURE_OPTS #&gt; --enable-unicode=ucs4 --with-wide-unicode #&gt; --enable-shared --enable-ipv6 #&gt; --enable-loadable-sqlite-extensions #&gt; --with-computed-gotos #&gt; R_ARCH #&gt; R_BROWSER /usr/local/bin/firefox #&gt; R_BZIPCMD /bin/bzip2 #&gt; R_DOC_DIR /home/travis/R-bin/lib/R/doc #&gt; R_GZIPCMD /bin/gzip #&gt; R_HOME /home/travis/R-bin/lib/R #&gt; R_INCLUDE_DIR /home/travis/R-bin/lib/R/include #&gt; R_LIBS_SITE /usr/local/lib/R/site-library:/usr/lib/R/site-library #&gt; R_LIBS_USER /home/travis/R/Library #&gt; R_PAPERSIZE letter #&gt; R_PAPERSIZE_USER letter #&gt; R_PDFVIEWER /usr/bin/xdg-open #&gt; R_PLATFORM x86_64-pc-linux-gnu #&gt; R_PRINTCMD #&gt; R_PROFILE /home/travis/.Rprofile.site #&gt; R_RD4PDF times,inconsolata,hyper #&gt; R_SESSION_INITIALIZED #&gt; PID=20315:NAME=&quot;reticulate&quot; #&gt; R_SESSION_TMPDIR /tmp/RtmpgNyBZC #&gt; R_SHARE_DIR /home/travis/R-bin/lib/R/share #&gt; R_SYSTEM_ABI linux,gcc,gxx,gfortran,? #&gt; R_TEXI2DVICMD /usr/bin/texi2dvi #&gt; R_UNZIPCMD /usr/bin/unzip #&gt; R_ZIPCMD /usr/bin/zip #&gt; RACK_ENV test #&gt; RAILS_ENV test #&gt; RBENV_SHELL bash #&gt; RUBY_VERSION ruby-2.4.1 #&gt; rvm_bin_path /home/travis/.rvm/bin #&gt; rvm_path /home/travis/.rvm #&gt; rvm_prefix /home/travis #&gt; rvm_pretty_print_flag #&gt; auto #&gt; rvm_version 1.29.3 (latest) #&gt; SED /bin/sed #&gt; SHELL /bin/bash #&gt; SHLVL 2 #&gt; SSH_CLIENT 10.10.4.7 54050 22 #&gt; SSH_CONNECTION 10.10.4.7 54050 10.20.0.93 22 #&gt; SSH_TTY /dev/pts/0 #&gt; TAR /bin/tar #&gt; TERM xterm #&gt; TRAVIS true #&gt; TRAVIS_ALLOW_FAILURE #&gt; false #&gt; TRAVIS_APP_HOST build.travis-ci.org #&gt; TRAVIS_ARCH amd64 #&gt; TRAVIS_BRANCH master #&gt; TRAVIS_BUILD_DIR /home/travis/build/XiangyunHuang/notesdown #&gt; TRAVIS_BUILD_ID 447627346 #&gt; TRAVIS_BUILD_NUMBER 589 #&gt; TRAVIS_BUILD_STAGE_NAME #&gt; #&gt; TRAVIS_BUILD_WEB_URL #&gt; https://travis-ci.org/XiangyunHuang/notesdown/builds/447627346 #&gt; TRAVIS_CABAL_DEFAULT #&gt; 1.24 #&gt; TRAVIS_CABAL_ROOT /opt/cabal #&gt; TRAVIS_CMD Rscript -e #&gt; &#39;bookdown::render_book(&quot;index.Rmd&quot;)&#39; #&gt; TRAVIS_COMMIT 1708330c0106fced7d233a64068d01b6ae81113d #&gt; TRAVIS_COMMIT_MESSAGE #&gt; install RcppOctave #&gt; TRAVIS_COMMIT_RANGE e6e180354b3e...1708330c0106 #&gt; TRAVIS_DIST trusty #&gt; TRAVIS_ENABLE_INFRA_DETECTION #&gt; true #&gt; TRAVIS_EVENT_TYPE push #&gt; TRAVIS_FILTERED redirect_io #&gt; TRAVIS_GHC_DEFAULT 8.0.2 #&gt; TRAVIS_GHC_ROOT /opt/ghc #&gt; TRAVIS_HOME /home/travis #&gt; TRAVIS_INFRA gce #&gt; TRAVIS_INIT upstart #&gt; TRAVIS_INTERNAL_RUBY_REGEX #&gt; ^ruby-(2\\.[0-2]\\.[0-9]|1\\.9\\.3) #&gt; TRAVIS_JOB_ID 447627347 #&gt; TRAVIS_JOB_NUMBER 589.1 #&gt; TRAVIS_JOB_WEB_URL https://travis-ci.org/XiangyunHuang/notesdown/jobs/447627347 #&gt; TRAVIS_LANGUAGE r #&gt; TRAVIS_OS_NAME linux #&gt; TRAVIS_OSX_IMAGE #&gt; TRAVIS_PRE_CHEF_BOOTSTRAP_TIME #&gt; 2017-12-05T21:12:11 #&gt; TRAVIS_PULL_REQUEST false #&gt; TRAVIS_PULL_REQUEST_BRANCH #&gt; #&gt; TRAVIS_PULL_REQUEST_SHA #&gt; #&gt; TRAVIS_PULL_REQUEST_SLUG #&gt; #&gt; TRAVIS_R_VERSION 3.5.1 #&gt; TRAVIS_R_VERSION_STRING #&gt; release #&gt; TRAVIS_REPO_SLUG XiangyunHuang/notesdown #&gt; TRAVIS_ROOT / #&gt; TRAVIS_SECURE_ENV_VARS #&gt; true #&gt; TRAVIS_STACK_FEATURES #&gt; basic cassandra chromium couchdb #&gt; disabled-ipv6 docker docker-compose #&gt; elasticsearch firefox go-toolchain #&gt; google-chrome jdk memcached mongodb mysql #&gt; neo4j nodejs_interpreter perl_interpreter #&gt; perlbrew phantomjs postgresql #&gt; python_interpreter rabbitmq redis riak #&gt; ruby_interpreter sqlite xserver #&gt; TRAVIS_STACK_JOB_BOARD_REGISTER #&gt; /.job-board-register.yml #&gt; TRAVIS_STACK_LANGUAGES #&gt; __amethyst__ crystal csharp d dart elixir #&gt; erlang haskell haxe julia perl perl6 r rust #&gt; TRAVIS_STACK_NAME amethyst #&gt; TRAVIS_STACK_NODE_ATTRIBUTES #&gt; /.node-attributes.yml #&gt; TRAVIS_STACK_TIMESTAMP #&gt; 2017-12-05 21:12:24 UTC #&gt; TRAVIS_SUDO true #&gt; TRAVIS_TAG #&gt; TRAVIS_TEST_RESULT #&gt; TRAVIS_TIMER_ID 1118b174 #&gt; TRAVIS_TIMER_START_TIME #&gt; 1540790593075978086 #&gt; TRAVIS_TMPDIR /tmp/tmp.oBkODOY4tO #&gt; TRAVIS_UID 2000 #&gt; TZ UTC #&gt; USER travis #&gt; XDG_RUNTIME_DIR /run/user/2000 #&gt; XDG_SESSION_ID 2 Sys.getlocale() #&gt; [1] &quot;en_US.UTF-8&quot; A.14 Docker Docker 相比虚拟机占用资源少，拉起来就可以用，虚拟机还需要各种环境配置，很多与R有关的项目现在都提供Docker镜像，大大方便了开发人员和数据分析师。当然 docker 的环境隔离性，对主机系统侵入小，即使挂了，再拉起来也就是了，安全性和可靠性高。 基于 The Rocker Project20 快速构建数据分析环境，Rocker项目 站在 Debian 和 R 的肩膀上，在 Docker内配置众多数据分析和开发的工具，免去用户手动配置的复杂性。此事非有心者不能为之 ，因为需费时费力找寻依赖库，编译 R 包，还要尽可能地给 Docker 镜像减负，以便部署。如果想抢先试水的赶快去 Rocker 项目主页。 由 Dirk Eddelbuettel 等人担纲的 Rocker 项目， 项目主页 和 Docker镜像 Wei-Chen Chen 等人的大数据编程项目 Programming with Big Data in R， 项目主页 和 Docker 镜像 非常详细的docker笔记 Dockerfile https://docs.docker.com/develop/develop-images/dockerfile_best-practices/ build https://docs.docker.com/engine/reference/builder/#usage 其它容器相关项目有 Singularity https://github.com/bwlewis/r-and-singularity http://singularity.lbl.gov/ Kubernetes Kubernetes 容器集群管理 https://www.kubernetes.org.cn 参见高策的博客 http://gaocegege.com A.14.1 Pull Images 重复实现的关键是拉取一个现有的 Docker 镜像，可以免去安装和环境配置的诸多麻烦。 docker run --rm -it --name book -e \\ DISPLAY=192.168.99.100:0 -d -p 8282:8787 -e ROOT=TRUE \\ -e USER=rstudio -e PASSWORD=cloud rocker/geospatial DISPLAY=192.168.99.100:0 用于启用 X11 设备，否则 rgl 等软件包会报显示警告，--rm -it 使得 主机和虚拟机时间一致，否则会有警告21 # 两个与时间有关的警告 Warning message: running command &#39;timedatectl&#39; had status 1 Failed to create bus connection: No such file or directory https://stackoverflow.com/questions/43907925/ubuntu-timedatectl-fails-in-docker-container capabilities() jpeg png tiff tcltk X11 aqua http/ftp sockets libxml TRUE TRUE TRUE TRUE FALSE FALSE TRUE TRUE TRUE fifo cledit iconv NLS profmem cairo ICU long.double libcurl TRUE TRUE TRUE FALSE TRUE TRUE TRUE TRUE TRUE 主机端口号 8282，这里可以改成你自己喜欢的，虚拟机端口号 8787 对应 RStudio Server 默认端口，如果你想自己指定，就去修改 RStudio Server的配置文件。拉取的 Docker 镜像取名 book，这是方便以后启动 docker 时方便，只需 # 启动 docker start book # 进入 docker exec -it book bash docker start rocker docker ps # 获取容器 ID CONTAINER ID docker exec -it 6f932357e6ce /bin/bash 由于要安装 rstan 和 rstanarm 包，编译的过程中需要比较大的内存空间，默认分配给 docker 的内存要增加到 4 Gb，也就装个软件，大一点的基于 stan 实现的模型，还是适合放在大机器上跑，笔电可以跑跑简单的模型，学习一下就可以了。 A.14.2 Docker (Windows 8.1) 对于 Windows 8.1 来说，需要下载 Docker ToolBox for Windows 和 Boot2Docker22，由于 Docker for Windows 需要 Windows 10 Pro，如图 A.4所示 图 A.4: Docker for Windows 需要高版本的 Windows 系统 下载完成后，双击 exe 可执行文件，启动安装过程，如图 A.5 所示，VirtualBox 和 Git 是否勾选取决于在此之前系统是否已经安装了这两个组件， Kitematic (Docker GUI) 在 Windows 8.1 下没什么用，取消勾选。创建快捷方式和添加路径到系统 PATH 环境变量，取消勾选升级 Boot2Docker VM，因为我们在 GitHub 上下载了最新版 Boot2Docker， 安装完成后替换即可。 图 A.5: 自定义 Docker 安装过程 此外，安装过程中可能弹出，如图A.6 所示的对话框，选择安装即可 图 A.6: 安装驱动 安装完成后，就可以将 Docker ToolBox 目录下的 Boot2Docker 替换，如图 A.7 所示 图 A.7: Docker ToolBox 的安装目录 拉取镜像 在启动桌面快捷方式（如图A.8所示）之前，非常重要的一步是设置镜像在磁盘上的存放位置（因为默认位置是C盘），在用户主目录下新建 .bash_profile 文件，并且添加如下一行 export MACHINE_STORAGE_PATH=&#39;D:\\Docker&#39; 图 A.8: 双击桌面快捷方式启动Docker 启动后，如图A.9 所示， Docker 初始化完整日志 图 A.9: Docker 启动完成 在 Windows 系统上，查看 IP docker-machine ip default Docker-based Geospatial toolkit for R, built on versioned Rocker images. 开发仓库 https://github.com/rocker-org/geospatial docker run --name book -d -p 8282:8787 -e ROOT=TRUE \\ -e USER=rstudio -e PASSWORD=cloud rocker/geospatial 8787 端口给 RStudio Server 使用，8282 端口用于浏览器登录 RStudio 使用。8787 端口也是可以自定义的，方法是修改 /etc/rstudio/rserver.conf 文件23，如设置 www-port=8080 那么，拉取镜像的命令相应地改为 docker run --name book -d -p 8282:8080 -e ROOT=TRUE \\ -e USER=rstudio -e PASSWORD=cloud rocker/geospatial 如图 A.10 所示，就是将主机端口号 8787 映射给容器内的 8282 端口 图 A.10: 拉取 Docker 镜像 其实，也可以在 Git Bash 中拉取镜像， # 启动 Docker docker-machine start # 进入 Bash docker-machine ssh default 图 A.11: 在 Git Bash 中拉取 Docker 镜像 A.14.3 PuTTY 首先在 PuTTY 中设置分配给 Docker 的 IP 图 A.12: 设置 IP 地址 PuTTY 登陆虚拟机或者 Docker，初次登陆会要求授权 图 A.13: 安全连接认证 我们可以看到，PuTTY 显示的 IP 和虚拟机保持一致 图 A.14: 登陆 我们也可以在 PuTTY 中拉取 Docker 镜像了，如图 A.15 所示 图 A.15: PuTTY 里拉取Docker镜像 A.14.4 Docker (CentOS) 安装必要的依赖 sudo yum install -y yum-utils \\ device-mapper-persistent-data lvm2 添加 repo源 sudo yum-config-manager --add-repo \\ https://download.docker.com/linux/centos/docker-ce.repo 软件仓库替换为TUNA以加快下载速度 sudo sed -i &#39;s+download.docker.com+mirrors.tuna.tsinghua.edu.cn/docker-ce+&#39; /etc/yum.repos.d/docker-ce.repo 可选项 sudo yum-config-manager --disable docker-ce-edge 或 sudo yum-config-manager --enable docker-ce-edge 安装 docker-ce sudo yum install docker-ce 查看可用的docker-ce版本 yum list docker-ce --showduplicates | sort -r 安装的是目前最新版本 docker-ce.x86_64 0:17.09.0.ce-1.el7.centos 拉取 Docker 镜像 rocker/geospatial，创建指定用户及密码，授予用户 root 权限，设置共享目录，每次启动都检查更新、配置IP等造成启动时间长，再配置自己的环境 启动 Docker sudo service docker start sudo docker info 拉取 rocker/geospatial 镜像，如图 A.16 sudo docker run -d -p 8787:8787 -e ROOT=TRUE \\ -e USER=xiangyun -e PASSWORD=cloud \\ rocker/geospatial 图 A.16: CentOS 上 Docker 安装 A.14.5 常用命令 拉取 docker pull 启动 docker start 运行 docker run 移除 docker rm(i) A.15 机器学习 or 深度学习 deep learning from first principles in python r and octave https://gigadom.wordpress.com A.15.1 DMTK LightGBM A fast, distributed, high performance gradient boosting (GBDT, GBRT, GBM or MART) framework based on decision tree algorithms, used for ranking, classification and many other machine learning tasks. 提供了 R 包，微软的工具主要支持Windows平台和VS编译工具。顺便一提，LightLDA24 Scalable, fast, and lightweight system for large-scale topic modeling 大规模主题模型 微软开发仓库 https://github.com/Microsoft A.15.2 TensorFlow 开发仓库 https://github.com/tensorflow/tensorflow Computation using data flow graphs for scalable machine learning. TensorFlow is an open source software library for numerical computation using data flow graphs. RStudio 公司开发了 R 包接口 tensorflow 和 keras A.15.3 Apache MXNet 开发仓库 https://github.com/apache/incubator-mxnet Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Scala, Go, Javascript and more R 包 https://github.com/apache/incubator-mxnet/tree/master/R-package A.15.4 XGBoost 开发仓库 https://github.com/dmlc/xgboost XGBoost is an optimized distributed gradient boosting library designed to be highly efficient, flexible and portable. It implements machine learning algorithms under the Gradient Boosting framework. XGBoost provides a parallel tree boosting (also known as GBDT, GBM) that solve many data science problems in a fast and accurate way. The same code runs on major distributed environment (Hadoop, SGE, MPI) and can solve problems beyond billions of examples. 使用文档 http://xgboost.readthedocs.io/en/latest/ R 包 https://github.com/dmlc/xgboost/tree/master/R-package 中文文档 http://xgboost.apachecn.org/cn/latest/ A.15.5 CatBoost CatBoost is an open-source gradient boosting on decision trees library with categorical features support out of the box for Python, R https://catboost.ai https://github.com/catboost/catboost catboost # windows devtools::install_url(&#39;https://github.com/catboost/catboost/releases/download/v0.6.1.1/catboost-R-Windows-0.6.1.1.tgz&#39;, args = c(&quot;--no-multiarch&quot;)) # Ubuntu install libc6-dev first devtools::install_github(&#39;catboost/catboost&#39;, subdir = &#39;catboost/R-package&#39;) A.15.6 xLearn xLearn is a high performance, easy-to-use, and scalable machine learning package, which can be used to solve large-scale machine learning problems. xLearn is especially useful for solving machine learning problems on large-scale sparse data （大规模稀疏数据）, which is very common in Internet services such as online advertisement （在线广告）and recommender systems （推荐系统） in recent years. If you are the user of liblinear, libfm, or libffm, now xLearn is your another better choice. A.15.7 XLearning 开发仓库 https://github.com/Qihoo360/XLearning AI on Hadoop XLearning is running on the Hadoop Yarn and has integrated deep learning frameworks such as TensorFlow, MXNet, Caffe, Theano, PyTorch, Keras, XGBoost. A.15.8 GPflow Gaussian processes in TensorFlow https://github.com/GPflow/GPflow 文档 http://gpflow.readthedocs.io/en/latest/ 提到了 Fully Bayesian inference for generalized GP models with HMC 可以考虑与 Stan 比较性能 相关的框架 GPflowOpt 主要在于贝叶斯框架下的优化计算，相关使用文档见 https://gpflowopt.readthedocs.io/en/latest A.16 自然语言处理 A.16.1 文本分类 E-Commerce Reviews 数据集 Shirin Glander Explaining Black-Box Machine Learning Models: Text classification with LIME 博客文章 Abien Fred Agarap Statistical Analysis on E-Commerce Reviews, with Sentiment Classification using Bidirectional Recurrent Neural Network (RNN) 实现 keras 和 sklearn https://github.com/AFAgarap/ecommerce-reviews-analysis A.17 书单 Pro Git 中文第二版 Scott Chacon, Ben Straub 著 Advanced R 第二版 Hadley Wickham 著 Geocomputation with R Robin Lovelace, Jakub Nowosad, Jannes Muenchow 著 Spatial Microsimulation with R Robin Lovelace and Morgane Dumont 著 R Markdown: The Definitive Guide Yihui Xie, J. J. Allaire, Garrett Grolemund 著 bookdown: Authoring Books and Technical Documents with R Markdown Yihui Xie 著 blogdown: Creating Websites with R Markdown Yihui Xie, Amber Thomas, Alison Presmanes Hill 著 R: A Language and Environment for Statistical Computing The R Core Team 著 LaTeX2e unofficial reference manual pdf 版 Statistical Rethinking Richard McElreath 著 Regression Modeling Strategies Frank E Harrell Jr 著 Applied Predictive Modeling Max Kuhn and Kjell Johnson 著 Forecasting: Principles and Practice Rob J Hyndman and George Athanasopoulos 著 Applied Regression Analysis and Generalized Linear Models 及书评 JASA-review 附录、样章和书评位于目录 docs/John-Fox Introduction to Data Science Rafael A. Irizarry 著 Feature Engineering and Selection: A Practical Approach for Predictive Models Max Kuhn and Kjell Johnson A.18 主页 Eugene Joh 的博客 Ilya Kashnitsky 的博客 Max Woolf 的博客 Yan Holtz 的 ggplot2 图库 Jianghao Wang (王江浩) Xinpeng Chen Arthur Charpentier 法语 精算 or Arthur Charpentier François Husson 多元统计分析 Jean-Paul Fox Bayesian response modeling Julian faraway INLA When Small Data beats Big Data Shirin Glander Yihui Xie Beilei Bian Miao Yu Ce Gao Lchiffon Nan Xiao Xuening Zhu Guangchuang YU Qiang Kou Yixuan Qiu-cn or Yixuan Qiu-en Tao Gao Xunmo Yang Yalei Du Junchen Feng Sizhe Liu Liyun Chen Peng Zhao A.19 博客 基于分布式容器和高性能计算的R R and Singularity 利用 R 和 OpenCPU 搭建高可用的 HTTP 服务 Nearest Neighbor Gaussian Processes (NNGP) based models and Case study: NNGP based models in Stan Spatial Models in Stan: Intrinsic Auto-Regressive Models for Areal Data 空间模型之 Stan 实现 slides Conditional autoregressive models in Stan 网页版 Bagging, the perfect solution for model instability How Random Forests improve simple Regression Trees? Tuning xgboost in R: Part I Tuning xgboost in R: Part II Easily Make Multi-tabbed .xlsx Files with openxlsx Map 函数 Deep learning at rstudio::conf 2018 深度学习与R语言,J.J.作为 RStudio 的 CEO 推动 tensorflow 在 R 中的使用，两个幻灯片值得好好看，J.J. 介绍 tensorflow Javier Luraschi介绍tf的部署 netlify travis-ci blog 搭建 blogdown https://bookdown.org/yihui/blogdown An Introduction to Spatial Econometrics in R spatial econometric analysis 空间经济分析 可考虑翻译一下 https://ignaciomsarmiento.github.io/2017/02/07/An-Introduction-to-Spatial-Econometrics-in-R Data Visualization Shiny Apps 数据可视化核密度估计 In this app I identify crime hotspots using a bivariate density estimation strategy Putting the Macron in Māori: Accented text in R Graphics Paul Murrell 图形中嵌入重音字符 color in plot Paul Murrell 配色 Using Computer Modern Fonts in R Graphics Paul Murrell 图形中嵌入数学字体 Lattice Graphics Paul Murrell 介绍 Lattice Graphics Association of Statisticians of American Religious Bodies (ASARB) viridis USA map Mapping unemployment data when-will-evolution-outperform-local-search 进化何时跑赢局部搜索 爱可可爱生活–进化如何跑赢局部搜索 Game of Thrones network analysis 权利的游戏 网络 Using Git and GitHub with R, Rstudio, and R Markdown 如何用Markdown写论文 blogdown和Github搭建网站 The R-INLA project and Bayesian computing with INLA Geographic Data Science in Python Spatial r-spatial Fast GeoSpatial Analysis in Python Spatial Data in R: New Directions Edzer Pebesma A gentle INLA tutorial 此节附录最后可以删掉 下面是用一段 Python 代码导出谷歌浏览器的所有书签 python py-chrome-bookmarks-markdown.py bookmarks.md Optimization Hyperparameter Optimization in H2O: Grid Search, Random Search and the Future – H2O blog R Optimization Test - Quantitative Finance Collector Research Seminar: Optimization Home - Statistics Views Vasicek model - Wikiwand CIR模型Cox–Ingersoll–Ross model - Wikipedia, the free encyclopedia BARON Software | Sahinidis 竞赛列表-DataCastle大数据竞赛平台 COIN-OR: Computational Infrastructure for Operations Research | Open-source Software for the Operations Research Community Portfolio Optimization in R, Part 4 | R-bloggers 时间序列分析 TensorFlow for Foreign Exchange Market: Analyzing Time-Series Data - Blog on All Things Cloud Foundry Predicting Heavy and Extreme Losses in Real-Time for Portfolio Holders (2) | Quant at Risk Why time series forecasts prediction intervals aren’t as good as we’d hope Error, trend, seasonality - ets and its forecast model friends Dual axes time series plots with various more awkward data R 语言 Togaware – Resources for the Data Scientist ParallelR高性能并行计算与R语言 R-Ladies global tour R-Ladies Global – R-Ladies is a world-wide organization to promote gender diversity in the R community Shane Lynn - Data science, analytics, and Startups Open Source Projects | NumFOCUS DataScience+ An online community for showcasing R &amp; Python tutorials Latest Posts – So Simple Theme Video Tutorial of PSO implementation in MATLAB Statistics.com - Course List - Online Courses me nugget Time Series Analysis and Its Applications: With R Examples - tsa4 (code实战)机器学习方法和性能比较 ggplot2 – The R graph Gallery quantumobject/docker-shiny - Docker Hub ggplot2绘图库 Highcharter 商业 john-coene.com Deep Learning in R – R Blog Zelig 统计推断方法合集 Paul Murrell’s Home Page Data Science Accelerator for Credit Risk Prediction (Revolutions) Credit Card Fraud Detection | Kaggle Python Jupyter Notebook Viewer Pyomo Bokeh Docs NumPy Tutorial: Data analysis with Python scikit-learn: machine learning in Python — scikit-learn 0.18.1 documentation Introduction to NumPy and Matplotlib - YouTube Data Science, Analytics and Big Data discussions The Python Graph Gallery – Visualizing data – with Python Data science, data analysis, and data engineering tutorials and articles. ŷhat | Image Processing with scikit-image 社交网络 Using the iGraph package to Analyse the Enron Corpus Help Us Map TrumpWorld Enron Email Dataset Statnet Mining Twitter with R graphTweets Building Wordclouds in R | DataScience+ API - 微博API Introducing tidygraph Network analysis of Game of Thrones | DataScience+ Using R packages and education to scale Data Science at Airbnb – Airbnb Engineering &amp; Data Science – Medium RPubs - Twitter Coverage of the ISMB/ECCB Conference 2017 UCI Network Data Repository 课程 DS-GA 1003: Machine Learning and Computational Statistics, Spring 2015 卡内基梅隆大学Machine Learning课程 课程列表: Deep Learning (概率图模型-卡内基梅隆大学) Probabilistic Graphical Models Learning Deep Learning课程资料大集合 课程Theoretical Machine Learning 机器学习算法观 (伯克利大学)机器学习导论课程Introduction to Machine Learning Intro to Apache Spark Training - Part 3 - YouTube 李宏毅深度学习(2017)_演讲•公开课_科技_bilibili_哔哩哔哩 1.1 《机器学习中的神经网络》为什么我们需要机器学习？_腾讯视频 In-depth introduction to machine learning in 15 hours of expert videos Gephi 中文教程 | Udemy Deep Learning PyTorch Caffe 2 | Caffe2 [福利] 深入理解 RNNs &amp; LSTM 网络学习资料 - 简书 TensorFlow中文社区-首页 Deep Learning in Energy Production context (wind, gas and oil) Off the convex path The Neural Network Zoo - The Asimov Institute Yann LeCun’s Home Page Yoshua Bengio Ian Goodfellow — Research Page Time Series Prediction With Deep Learning in Keras - Machine Learning Mastery 迁移学习 Keras R Information Systems Research The Ultimate List of TensorFlow Resources: Books, Tutorials &amp; More - Hacker Lists Neural Networks from Scratch, in R (Revolutions) [机器学习入门] 李宏毅机器学习笔记 Center for Machine Learning and Intelligent Systems | University of California, Irvine (支持向量机算法)LIBSVM – A Library for Support Vector Machines 软件测试 Jenkins Centos | Docker中文教程 Ubuntu – Ubuntu Packages Search Pandoc - Pandoc User’s Guide LaTeX 始终 风陵渡 fitsir的博客 Ethlisan | Ethan DENG’s Personal Homepage Cyberspace of Shujun LI李树钧 LaTeX写作专栏 – |经常| 在线 LaTeX 公式编辑器 Beamer Matrix ChinaTeX-Tex&amp;LaTeX are your typesetting friends. LaTeX Templates Overleaf Introduction | Learning-Markdown (Markdown 入门参考) MathJax | Beautiful math in all browsers. Pandoc - About pandoc TikZ and PGF | TeXample.net Rants from the Lab 国家企业信用信息公示系统 Linux命令大全(手册)_Linux常用命令行实例详解_Linux命令学习手册 生命不息 | 张宏伦的个人博客 大赛列表页 城市数据派-首页 研趣网 - 首个可视化商业价值挖掘和传播社区 inFERENCe MSDN, 我告诉你 RegExr: Learn, Build, &amp; Test RegEx rud.is | “In God we trust. All others must bring data” 北京理工大学 开源软件镜像服务 Statistics authors/titles recent submissions Wolfram|Alpha: Computational Knowledge Engine 中国科技论文在线 我是菜鸟 | IMCN开源资讯网 USGS.gov Index of /download/ensembles/data/Grid_0.44deg_rot The Stan Forums 论坛 - 六维空间 - 教育科研网分享测试平台 免费在线电影-新剧集影院官网-支持手机观看 CCTV-1 综合频道高清直播 BYR-IPTV 七牛云-国内领先的企业级云服务商 RStudio Community 电影天堂_免费电影_迅雷电影下载 80s电影网 - 高清手机电影迅雷下载_最新MP4电视剧磁力下载 Google gen.lib.rus.ec Octave Online · Cloud IDE compatible with MATLAB 参考文献 "],
["chap-R-Markdown.html", "B R Markdown B.1 bookdown B.2 复杂表格制作", " B R Markdown R Markdown 站在巨人的肩膀上，这些巨人有 Markdown、 LaTeX、 Pandoc。 生态系统 报告 learnr: Interactive Tutorials with R Markdown https://rstudio.github.com/learnr/ r2d3: R Interface to D3 Visualizations https://rstudio.github.io/r2d3/ radix: Radix combines the technical authoring features of Distill with R Markdown, enabling a fully reproducible workflow based on literate programming https://github.com/radixpub/radix-r 网络服务 RestRserve: RestRserve is a R web API framework for building high-performance microservices and app backends https://github.com/dselivanov/RestRserve 基于 Rserve 在笔记本上处理请求的吞吐量是每秒10000次，比 plumber 快大约20倍 plumber: Turn your R code into a web API. https://www.rplumber.io 展示 revealjs: R Markdown Format for reveal.js Presentations https://github.com/rstudio/revealjs xaringan: Presentation Ninja 幻灯忍者写轮眼 https://slides.yihui.name/xaringan/ B.1 bookdown A Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. — John Gruber Markdown 基础语法见 RStudio IDE自带的手册 Markdown Quick Reference， 这里主要介绍一下 Markdown 高级语法， 特别是 Pandoc’s Markdown25 表格、图片和公式的使用 表格 插入表格很简单的，如表 B.1 所示，还带脚注哦 表 B.1: A table caption26 First Header Second Header Content Cell Content Cell Content Cell Content Cell 图片 插入图片也很简单的，如图B.1所示 图 B.1: 插入图27 图、表的标题很长可以使用文本引用28的方式实现。 图 B.2: 图表标题很长可使用文本引用方式 knitr::include_graphics 插图 引用 为了区分章和节之间的引用，在章的添加 chap，如 \\@ref(chap:R-Markdown)，在节的添加 sect，如 \\@ref(sect:markdown) plot( rnorm( 10 ) ) 图 B.3: 测试文本引用 B plot( rnorm( 10 ) ) 图 B.4: 测试文本引用 B 公式 行内公式一对美元符号 \\(\\alpha\\) 或者 \\(\\alpha+\\beta\\)，行间公式 \\[\\alpha\\] 或者 \\[\\alpha + \\beta\\] 对公式编号，如公式 (B.1) \\[\\begin{equation} L(\\beta,\\boldsymbol{\\theta}) = f(y;\\beta,\\boldsymbol{\\theta}) = \\int_{\\mathbb{R}^{n}}N(t;D\\beta,\\Sigma(\\boldsymbol{\\theta}))f(y|t)dt \\tag{B.1} \\end{equation}\\] 多行公式分别编号，如公式(B.2) 和公式(B.3) \\[\\begin{align} \\log\\{\\frac{p_i}{1-p_i}\\} &amp; = T_{i} = d(x_i)&#39;\\beta + S(x_i) + Z_i \\tag{B.2}\\\\ \\log(\\lambda_i) &amp; = T_{i} = d(x_i)&#39;\\beta + S(x_i) + Z_i \\tag{B.3} \\end{align}\\] 多行公式中对某一（些）行编号，如公式 (B.4) 和 公式 (B.5) \\[\\begin{align} g(X_{n}) &amp;= g(\\theta)+g&#39;({\\tilde{\\theta}})(X_{n}-\\theta) \\\\ \\sqrt{n}[g(X_{n})-g(\\theta)] &amp;= g&#39;\\left({\\tilde{\\theta}}\\right) \\sqrt{n}[X_{n}-\\theta ] \\tag{B.4} \\\\ \\log(\\lambda_i) &amp; = T_{i} = d(x_i)&#39;\\beta + S(x_i) + Z_i \\tag{B.5} \\end{align}\\] 多行公式共用一个编号，如公式 (B.6) \\[\\begin{equation} \\begin{aligned} L(\\beta,\\boldsymbol{\\theta}) &amp; = \\int_{\\mathbb{R}^{n}} \\frac{N(t;D\\beta,\\Sigma(\\boldsymbol{\\theta}))f(y|t)}{N(t;D\\beta_{0},\\Sigma(\\boldsymbol{\\theta}_{0}))f(y|t)}f(y,t)dt\\\\ &amp; \\varpropto \\int_{\\mathbb{R}^{n}} \\frac{N(t;D\\beta,\\Sigma(\\boldsymbol{\\theta}))}{N(t;D\\beta_{0},\\Sigma(\\boldsymbol{\\theta}_{0}))}f(t|y)dt \\\\ &amp;= E_{T|y}\\left[\\frac{N(t;D\\beta,\\Sigma(\\boldsymbol{\\theta}))}{N(t;D\\beta_{0},\\Sigma(\\boldsymbol{\\theta}_{0}))}\\right] \\end{aligned} \\tag{B.6} \\end{equation}\\] 推荐在 equation 公式中，使用 split 环境，意思是一个公式很长，需要拆成多行，如公式(B.7) \\[\\begin{equation} \\begin{split} \\mathrm{Var}(\\hat{\\beta}) &amp; =\\mathrm{Var}((X&#39;X)^{-1}X&#39;y)\\\\ &amp; =(X&#39;X)^{-1}X&#39;\\mathrm{Var}(y)((X&#39;X)^{-1}X&#39;)&#39;\\\\ &amp; =(X&#39;X)^{-1}X&#39;\\mathrm{Var}(y)X(X&#39;X)^{-1}\\\\ &amp; =(X&#39;X)^{-1}X&#39;\\sigma^{2}IX(X&#39;X)^{-1}\\\\ &amp; =(X&#39;X)^{-1}\\sigma^{2} \\end{split} \\tag{B.7} \\end{equation}\\] 注意，\\mathbf 只对字母 \\(a,b,c,A,B,C\\) 加粗，mathjax 不支持公式中使用 \\bm 对 \\(\\theta,\\alpha,\\beta,\\ldots,\\gamma\\) 加粗，应该使用 \\boldsymbol 图片引用 工作流程图 gitbook 这样网页又该如何引用这张图片呢？ 图 B.5: 两种编译方式及过程 如图 B.5 展示了两种编译方式 在指定目录创建 Book 项目， bookdown:::bookdown_skeleton(&quot;~/book&quot;) 项目根目录的文件列表 directory/ ├── index.Rmd ├── 01-intro.Rmd ├── 02-literature.Rmd ├── 03-method.Rmd ├── 04-application.Rmd ├── 05-summary.Rmd ├── 06-references.Rmd ├── _bookdown.yml ├── _output.yml ├── book.bib ├── preamble.tex ├── README.md └── style.css broom 和 pixiedust 制作表格 Tables So Beautifully Fine-Tuned You Will Believe It’s Magic. https://github.com/nutterb/pixiedust B.2 复杂表格制作 kableExtra 借助 kableExtra 包 (Zhu 2018) 可以制作复杂的统计图表，更多的例子请看 https://github.com/haozhu233/kableExtra ，我喜欢这个图标设计，如图 B.6 图 B.6: kableExtra 的徽标 library(knitr) library(kableExtra) dt &lt;- mtcars[1:5, 1:4] # HTML table kable(dt, format = &quot;html&quot;, caption = &quot;kableExtra 制作&quot;) %&gt;% kable_styling(bootstrap_options = &quot;striped&quot;, full_width = F) %&gt;% add_header_above(c(&quot; &quot;, &quot;Group 1&quot; = 2, &quot;Group 2[note]&quot; = 2)) %&gt;% add_footnote(c(&quot;table footnote&quot;)) # LaTeX Table kable(dt, format = &quot;latex&quot;, booktabs = T, caption = &quot;kableExtra 制作&quot;) %&gt;% kable_styling(latex_options = c(&quot;striped&quot;, &quot;hold_position&quot;), full_width = F) %&gt;% add_header_above(c(&quot; &quot;, &quot;Group 1&quot; = 2, &quot;Group 2[note]&quot; = 2)) %&gt;% add_footnote(c(&quot;table footnote&quot;)) 如何将表格横向或者纵向展示 添加短标题 library(dplyr) library(knitr) library(kableExtra) # 这个必须加载 df &lt;- data.frame( X = sample(letters, 10), y = runif(10), z = sample(10:20, 10)) kable(df, booktabs = TRUE, caption = &quot;This caption is way too long and doesnt look good when formatted in the Table of Contents. What you really need here is a much shorter caption so that your eyes dont go crazy trying to figure out what information the author is trying to convey. Often there is too much information in the caption anyway so why not shorten it?.&quot;, escape = FALSE, format = &#39;latex&#39;) %&gt;% kable_styling(latex_options = c(&quot;striped&quot;, &quot;hold_position&quot;)) kable(df, booktabs = TRUE, caption = &quot;This caption is way too long and doesnt look good when formatted in the Table of Contents. What you really need here is a much shorter caption so that your eyes dont go crazy trying to figure out what information the author is trying to convey. Often there is too much information in the caption anyway so why not shorten it?.&quot;, caption.short = &quot;This is a shorter caption.&quot;, escape = FALSE, format = &#39;latex&#39;) %&gt;% kable_styling(latex_options = c(&quot;striped&quot;, &quot;hold_position&quot;)) 参考文献 "],
["python-plot.html", "C Python 绘图 C.1 matplotlib C.2 seaborn C.3 pyglet C.4 mayavi C.5 bokeh C.6 plotly", " C Python 绘图 C.1 matplotlib 先安装必要的模块 sudo apt-get install -y python-tk python-pip sudo -H pip install numpy matplotlib 在 R Markdown 中生成PDF需要如下tex包 - psnfss - type1cm - ucs - tex4ht - ncntrsbk - helvetic - preview 默认使用 STIX 数学字体 和 DejaVu Sans 英文字体 import numpy as np import matplotlib.pyplot as plt plt.switch_backend(&#39;agg&#39;) # Very Important in R Markdown t = np.arange(0.0, 2.0, 0.01) s = np.sin(2*np.pi*t) plt.plot(t,s) plt.title(r&#39;$\\alpha_i &gt; \\beta_i$&#39;, fontsize=20) plt.text(1, -0.6, r&#39;$\\sum_{i=0}^\\infty x_i$&#39;, fontsize=20) plt.text(0.6, 0.6, r&#39;$\\mathcal{A}\\mathrm{sin}(2 \\omega t)$&#39;, fontsize=20) plt.xlabel(&#39;time (s)&#39;) plt.ylabel(&#39;volts (mV)&#39;) plt.show() # plt.savefig(&#39;math-in-plot.png&#39;, bbox_inches=&#39;tight&#39;, dpi = 300) # plt.savefig(&#39;math-in-plot.pdf&#39;, bbox_inches=&#39;tight&#39;) dpi 分辨率，越大图像越清晰，对矢量图形无效 bbox_inches 去除图形周边空白区域 Python 的 matplotlib 模块没有叫 cairo_pdf 的保存设备，所以此处设置为 dev = &quot;pdf&quot;，它支持的图片格式有 eps, pdf, pgf, png, ps, raw, rgba, svg, svgz Windows 下保存的 PDF 图片需要用 gs 嵌入字体才可以，不然会出现无法显示 XX 字体的错误，假设在 R 环境中，只需如下两行命令即可 # Needed only on Windows - run once per R session # Adjust the path to match your installation of Ghostscript Sys.setenv(R_GSCMD = &quot;C:/Program Files/gs/gs9.23/bin/gswin64c.exe&quot;) embedFonts(file = &quot;math-in-plot.pdf&quot;, outfile = &quot;math-in-plot-embed.pdf&quot;) from __future__ import unicode_literals import numpy as np import matplotlib matplotlib.rcParams[&#39;text.usetex&#39;] = True matplotlib.rcParams[&#39;text.latex.unicode&#39;] = True import matplotlib.pyplot as plt plt.switch_backend(&#39;agg&#39;) # Very Important in R Markdown t = np.linspace(0.0, 1.0, 100) s = np.cos(4 * np.pi * t) + 2 fig, ax = plt.subplots(figsize=(6, 4), tight_layout=True) ax.plot(t, s) ax.set_xlabel(r&#39;\\textbf{time (s)}&#39;) # ax.set_ylabel(r&#39;\\textit{Velocity}(\\N{DEGREE SIGN}/sec)&#39;, fontsize=16) ax.set_ylabel(r&#39;\\textit{Velocity}($^{\\circ}$/sec)&#39;, fontsize=16) ax.set_title(r&#39;\\TeX\\ is Number $\\displaystyle\\sum_{n=1}^\\infty&#39; r&#39;\\frac{-e^{i\\pi}}{2^n}$!&#39;, fontsize=16, color=&#39;r&#39;) plt.show() 基本用法 http://qiangbo.space/2018-04-06/matplotlib_l1/ 如果系统有安装其它字体，可以设置你喜欢的字体 font.family : serif font.serif : Times, Palatino, New Century Schoolbook, Bookman, Computer Modern Roman font.sans-serif : Helvetica, Avant Garde, Computer Modern Sans serif font.cursive : Zapf Chancery font.monospace : Courier, Computer Modern Typewriter text.usetex : true #from matplotlib import rc #rc(&#39;font&#39;,**{&#39;family&#39;:&#39;sans-serif&#39;,&#39;sans-serif&#39;:[&#39;Helvetica&#39;]}) ## for Palatino and other serif fonts use: #rc(&#39;font&#39;,**{&#39;family&#39;:&#39;serif&#39;,&#39;serif&#39;:[&#39;Palatino&#39;]}) #rc(&#39;text&#39;, usetex=True) import numpy as np import matplotlib.pyplot as plt plt.switch_backend(&#39;agg&#39;) # Very Important in R Markdown # Example data t = np.arange(0.0, 1.0 + 0.01, 0.01) s = np.cos(4 * np.pi * t) + 2 plt.rc(&#39;text&#39;, usetex=True) plt.rc(&#39;font&#39;, family=&#39;serif&#39;) # plt.rc(&#39;font&#39;, family=&#39;sans-serif&#39;) plt.plot(t, s) plt.xlabel(r&#39;\\textbf{time} (s)&#39;) plt.ylabel(r&#39;\\textit{voltage} (mV)&#39;,fontsize=16) plt.title(r&quot;\\TeX\\ is Number &quot; r&quot;$\\displaystyle\\sum_{n=1}^\\infty\\frac{-e^{i\\pi}}{2^n}$!&quot;, fontsize=16, color=&#39;gray&#39;) # Make room for the ridiculously large title. plt.subplots_adjust(top=0.8) # plt.savefig(&#39;tex_demo&#39;) plt.show() C.2 seaborn seaborn: statistical data visualization http://seaborn.pydata.org/ Seaborn is a Python visualization library based on matplotlib. It provides a high-level interface for drawing attractive statistical graphics. statsmodels C.3 pyglet 处理音视频文件 C.4 mayavi 三维图形 C.5 bokeh 主页 https://bokeh.pydata.org/en/latest/ R Markdown 暂不支持动态 Python 图形的展示 # https://bokeh.pydata.org/en/latest/docs/gallery/joyplot.html from numpy import linspace from scipy.stats.kde import gaussian_kde from bokeh.io import output_file, show from bokeh.models import ColumnDataSource, FixedTicker, PrintfTickFormatter from bokeh.plotting import figure from bokeh.sampledata.perceptions import probly import colorcet as cc output_file(&quot;joyplot.html&quot;) def joy(category, data, scale=20): return list(zip([category]*len(data), scale*data)) cats = list(reversed(probly.keys())) palette = [cc.rainbow[i*15] for i in range(17)] x = linspace(-20,110, 500) source = ColumnDataSource(data=dict(x=x)) p = figure(y_range=cats, plot_width=900, x_range=(-5, 105), toolbar_location=None) for i, cat in enumerate(reversed(cats)): pdf = gaussian_kde(probly[cat]) y = joy(cat, pdf(x)) source.add(y, cat) p.patch(&#39;x&#39;, cat, color=palette[i], alpha=0.6, line_color=&quot;black&quot;, source=source) p.outline_line_color = None p.background_fill_color = &quot;#efefef&quot; p.xaxis.ticker = FixedTicker(ticks=list(range(0, 101, 10))) p.xaxis.formatter = PrintfTickFormatter(format=&quot;%d%%&quot;) p.ygrid.grid_line_color = None p.xgrid.grid_line_color = &quot;#dddddd&quot; p.xgrid.ticker = p.xaxis[0].ticker p.axis.minor_tick_line_color = None p.axis.major_tick_line_color = None p.axis.axis_line_color = None p.y_range.range_padding = 0.12 show(p) C.6 plotly 商业图形库 "],
["performance.html", "D 性能提升 D.1 Rcpp", " D 性能提升 C++ 编程风格指南 https://github.com/isocpp/CppCoreGuidelines 如何充分利用 Rcpp 包 设个目标，锻炼一下编码能力，关于统计计算和可视化尽可能提供两个方案，至少包含基础 R 包的实现 Pkgs &lt;- sapply(list.files(R.home(&quot;library&quot;)), function(x) packageDescription(pkg = x, fields = &quot;Priority&quot;)) names(Pkgs[Pkgs == &quot;base&quot; &amp; !is.na(Pkgs)]) #&gt; [1] &quot;base&quot; &quot;compiler&quot; &quot;datasets&quot; &quot;graphics&quot; &quot;grDevices&quot; #&gt; [6] &quot;grid&quot; &quot;methods&quot; &quot;parallel&quot; &quot;splines&quot; &quot;stats&quot; #&gt; [11] &quot;stats4&quot; &quot;tcltk&quot; &quot;tools&quot; &quot;utils&quot; 计算程序运行时间 .proctime00 &lt;- proc.time() s &lt;- 0 for (i in seq(1000)) { s &lt;- s + i } proc.time() - .proctime00 #&gt; user system elapsed #&gt; 0.008 0.000 0.008 D.1 Rcpp D.1.1 RcppOctave 混合编程 devtools::install_github(&#39;renozao/RcppOctave&#39;) #&gt; Downloading GitHub repo renozao/RcppOctave@master #&gt; bibtex (NA -&gt; 0.4.2) [CRAN] #&gt; pkgmaker (NA -&gt; 0.27 ) [CRAN] #&gt; registry (NA -&gt; 0.5 ) [CRAN] #&gt; Installing 3 packages: bibtex, pkgmaker, registry #&gt; Installing packages into &#39;/home/travis/R/Library&#39; #&gt; (as &#39;lib&#39; is unspecified) #&gt; checking for file ‘/tmp/RtmpQ3xKvt/remotes5046f8e8975/renozao-RcppOctave-fcf4d02/DESCRIPTION’ ... ✔ checking for file ‘/tmp/RtmpQ3xKvt/remotes5046f8e8975/renozao-RcppOctave-fcf4d02/DESCRIPTION’ #&gt; ─ preparing ‘RcppOctave’: #&gt; checking DESCRIPTION meta-information ... ✔ checking DESCRIPTION meta-information #&gt; ─ cleaning src #&gt; ─ running ‘cleanup’ #&gt; ─ installing the package to process help pages #&gt; ─ cleaning src (20.8s) #&gt; ─ running ‘cleanup’ #&gt; ─ checking for LF line-endings in source and make files and shell scripts #&gt; ─ checking for empty or unneeded directories #&gt; ─ building ‘RcppOctave_0.19.tar.gz’ #&gt; #&gt; #&gt; Installing package into &#39;/home/travis/R/Library&#39; #&gt; (as &#39;lib&#39; is unspecified) D.1.2 RcppGSL D.1.3 RcppArmadillo D.1.4 RcppParallel D.1.5 RcppNumerical D.1.6 RcppAlgos devtools::session_info(pkgs = c(&quot;Rcpp&quot;, &quot;RcppOctave&quot;)) #&gt; ─ Session info ────────────────────────────────────────────────────────── #&gt; setting value #&gt; version R version 3.5.1 (2017-01-27) #&gt; os Ubuntu 14.04.5 LTS #&gt; system x86_64, linux-gnu #&gt; ui X11 #&gt; language (EN) #&gt; collate en_US.UTF-8 #&gt; ctype en_US.UTF-8 #&gt; tz UTC #&gt; date 2018-10-29 #&gt; #&gt; ─ Packages ────────────────────────────────────────────────────────────── #&gt; package * version date lib source #&gt; bibtex 0.4.2 2017-06-30 [1] CRAN (R 3.5.1) #&gt; codetools 0.2-15 2016-10-05 [3] CRAN (R 3.5.1) #&gt; digest 0.6.18 2018-10-10 [1] CRAN (R 3.5.1) #&gt; glue 1.3.0 2018-07-17 [1] CRAN (R 3.5.1) #&gt; magrittr * 1.5 2014-11-22 [1] CRAN (R 3.5.1) #&gt; pkgmaker 0.27 2018-05-25 [1] CRAN (R 3.5.1) #&gt; Rcpp 0.12.19 2018-10-01 [1] CRAN (R 3.5.1) #&gt; RcppOctave 0.19 2018-10-29 [1] Github (renozao/RcppOctave@fcf4d02) #&gt; registry 0.5 2017-12-03 [1] CRAN (R 3.5.1) #&gt; stringi 1.2.4 2018-07-20 [1] CRAN (R 3.5.1) #&gt; stringr 1.3.1 2018-05-10 [1] CRAN (R 3.5.1) #&gt; withr 2.1.2 2018-03-15 [1] CRAN (R 3.5.1) #&gt; xtable 1.8-3 2018-08-29 [1] CRAN (R 3.5.1) #&gt; #&gt; [1] /home/travis/R/Library #&gt; [2] /usr/local/lib/R/site-library #&gt; [3] /home/travis/R-bin/lib/R/library "],
["references.html", "参考文献", " 参考文献 "]
]
